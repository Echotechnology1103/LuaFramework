--暂时放弃勋章
--"暗器","属性不对
local PanelFurnace = class("PanelFurnace")

local var ={}
local color = {game.getColor(0xEF2F00),game.getColor(0x30ff00)}
local equipPos = {
	Const.ITEM_JADE_PENDANT_POSITION,
	Const.ITEM_SHIELD_POSITION,
	Const.ITEM_DRAGON_HEART_POSITION,
	Const.ITEM_WOLFANG_POSITION,
	Const.ITEM_ACHIEVE_MEDAL_POSITION,
}
local label = {"玉佩","暗器","魂珠","战鼓"};

local lblhint = {
	[1] = {
		"<font color=#E7BA52 size=18>玉佩说明</font>",
		'1.	玉佩可以极大增加生命上限。',
		'2.	玉佩碎片可以通过参加活动、击杀BOSS、回收装备等方式获得。',
		'3.	玉佩不能被强化。',
	},
	[2] = { 
		"<font color=#E7BA52 size=18>暗器说明</font>",
		'1.	暗器可以极大增加防御力。',
		'2.	暗器碎片可以通过任务活动、击杀BOSS、等方式获得。',
		'3.	暗器不能被强化。'
	},
	[3] = {  
		"<font color=#E7BA52 size=18>魂珠说明</font>",
		'1.	魂珠可以极大增加攻击能力。',
		'2.	魂珠碎片可以通过参加活动、击杀BOSS、商城购买等方式获得。',
		'3.	魂珠不能被强化。'
	},
	[4] = { 
		"<font color=#E7BA52 size=18>战鼓说明</font>",
		'1.	战鼓可以极大增加暴击率和暴击力。',
		'2.	战鼓碎片可以通过参加活动、击杀BOSS、商城购买等方式获得。',
		'3.	战鼓不能被强化。'
	},
	[5] = { 
		"<font color=#E7BA52 size=18>积分说明</font>",
		'1.	积分可用来兑换勋章，增加角色属性',
		'2.	积分通过使用修仙令牌获得',
		'3.	修仙令牌可通过Boss掉落、活动、商城或右侧链接购买',
	},
}

function PanelFurnace.initView(event)
	var = {
		xmlPanel,
		tp = 1,
		panelData,
		progressBar,
		labBar,
		tabv,
		curId = 0,
		nextId = 0,
		shopshow = false,
		levelFont = nil,
		tabName = {
			"btnYupei","btnHudun","btnLongxin","btnLangya"
		},
	}
	var.xmlPanel = UILuaLoader.load("uilayout/PanelFurnace.uif")
	if var.xmlPanel then

		util.asyncload(var.xmlPanel, "forgroudbg", "needload/bg_max2.png")
		util.asyncload(var.xmlPanel, "img_left_bg", "needload/PanelAvatar/img_ditu9.png")
		util.asyncload(var.xmlPanel, "shop_bg", "needload/img_kuan_bg.png")

		var.xmlPanel:getWidgetByName("btn_upgrade"):setTitleText("");
		-- var.xmlPanel:getWidgetByName("Image_3"):setScale(0.88)
		cc.EventProxy.new(NetClient,var.xmlPanel)
			:addEventListener(Notify.EVENT_PUSH_PANEL_DATA, PanelFurnace.handlePanelData)
			:addEventListener(Notify.EVENT_NOTIFY_GETITEMDESP, PanelFurnace.getItemDesp)

		var.xmlPanel:getWidgetByName("right_arrow"):setRotation(180)
		var.tabv = var.xmlPanel:getWidgetByName("tabList")
		-- var.tabv:getParent():setLocalZOrder(10)
		var.tabv:setTabRes("tab2_nor", "tab2_sel", ccui.TextureResType.plistType)
		var.tabv:addTabEventListener(PanelFurnace.pushBtns)
		var.tabv:hide()
		-- var.xmlPanel:getWidgetByName("shopcontainer"):setPosition(cc.p(-50,0)):hide()
		-- var.xmlPanel:getWidgetByName("LayerShop"):setPosition(cc.p(202,-500))
		PanelFurnace.initPageFurnace()
		--display.newBMFontLabel({font = "fonts/innerpower.fnt",}):addTo(var.xmlPageInnerPower):align(display.CENTER_LEFT,275, 480):setName("lbl_level"):setString("0")
		var.levelFont = display.newBMFontLabel({font = "fonts/innerpower.fnt"})
			:addTo(var.xmlPanel)
			:setName("levelFont")
			:align(display.LEFT_RIGHT, 300, 478)
			:setContentSize(cc.size(20, 100))
			:show():setString("")
		
		return var.xmlPanel
	end
end

function PanelFurnace.onPanelOpen(event)
	if event.tab and equipPos[event.tab] then
		var.tp = event.tab
	end
	var.tabv:setSelectedTab(var.tp);
end

function PanelFurnace.initPageFurnace()
	local btns = {
		{name = "btn_upgrade" ,	func=PanelFurnace.pushBtns,	visible = true},
		{name = "Button_jihuo" ,func=PanelFurnace.pushBtns,	visible = false},
		{name = "btn_hint" ,	func=PanelFurnace.pushBtns, touchType = "touch",visible = true},
		{name = "btn_buy" ,		func=PanelFurnace.pushBtns,	visible = true},
		{name = "btn_charge" ,	func=PanelFurnace.pushBtns, visible = true},
	}
	for k,v in pairs(btns) do
		local btn = var.xmlPanel:getWidgetByName(v.name)
		if btn then
			if v.touchType then
				btn:addTouchEventListener(v.func)
			else
				btn:addClickEventListener(v.func)
			end
			btn:setVisible(v.visible)
			if v.color then
				btn:setTitleColor(game.getColor(v.color))
			end
		end
	end
end

function PanelFurnace.pushBtns(sender,eventType)
	local name = sender:getName()
	if string.find(name,"tab") then
		var.tp = tonumber(string.sub(name,-1))
		-- var.xmlPanel:getWidgetByName("shopcontainer"):setVisible(var.tp>2)
		-- var.xmlPanel:getWidgetByName("LayerShop"):setPositionY(-540+38)
		-- var.shopshow = false
		if var.tp == 5 then
			var.xmlPanel:getWidgetByName("Panel_xh"):hide()
			var.xmlPanel:getWidgetByName("layerprogress"):show()
			NetClient:PushLuaTable("gui.PanelAchieve.onPanelData", util.encode({actionid = "updateXunzhang",}))
		else
			var.xmlPanel:getWidgetByName("Panel_xh"):show()
			var.xmlPanel:getWidgetByName("layerprogress"):hide()
			NetClient:PushLuaTable("gui.PanelFurnace.onPanelData", util.encode({actionid = "fresh",tab = var.tp}))
		end
		-- var.xmlPanel:getWidgetByName("ListView"):setVisible(var.tp<=2 or not var.shopshow)
	elseif name == "btn_upgrade" and var.tp == 5 then
		NetClient:PushLuaTable("gui.PanelAchieve.onPanelData", util.encode({actionid = "upgradeXZ",}))
	elseif name=="btn_upgrade" or name == "Button_jihuo" then
		NetClient:PushLuaTable("gui.PanelFurnace.onPanelData", util.encode({actionid = "upgrade",param={var.tp}}))
	elseif name=="btn_hint" then
		if eventType == ccui.TouchEventType.began then
			NetClient:dispatchEvent({
				name = Notify.EVENT_PANEL_ON_ALERT, panel = "tips", visible = true, infoTable = lblhint[var.tp],
			})
		elseif eventType == ccui.TouchEventType.ended or eventType == ccui.TouchEventType.canceled  then
			NetClient:dispatchEvent({
				name = Notify.EVENT_PANEL_ON_ALERT, panel = "all", visible = false })
		end
	elseif name=="btn_buy" then
		-- sender:setTouchEnabled(false)
		-- local LayerShop = var.xmlPanel:getWidgetByName("LayerShop")
		-- LayerShop:stopAllActions()
		-- LayerShop:runAction(cca.seq({
		-- 	cca.moveTo(0.3, LayerShop:getPositionX(), var.shopshow and 38-550 or 0),
		-- 	cca.callFunc(function(target)
		-- 		sender:setTouchEnabled(true)
		-- 		-- var.xmlPanel:getWidgetByName("ListView"):setVisible(var.shopshow)
		-- 		var.shopshow = not var.shopshow;
		--     end)
		-- 	}
		-- ))
	elseif name=="btn_charge" then
		NetClient:PushLuaTable("server.showChongzhi", util.encode({}))		
	end
end

function PanelFurnace.handlePanelData(event)
	if event.type == "PanelFurnace" then
		var.panelData = util.decode(event.data)
		if var.panelData.cmd =="fresh" then
			var.tabv:show()
			var.tabv:hideTab(var.panelData.openFunc)
			PanelFurnace.freshLabelAndIcon(var.panelData)
		elseif var.panelData.cmd == "updateXunzhang" then
			PanelFurnace.freshLabelAndIcon(var.panelData)
		end
	end
end

function PanelFurnace.freshLabelAndIcon(data)
	local effect = var.xmlPanel:getChildByName("effectNode")
	if effect then
		effect:stopAllActions()
		effect:removeFromParent()
		effect = nil
	end
	if equipPos[var.tp] and data and var.tp ~= 5 then
		var.curId = data.curId
		var.nextId = data.nextId
		-- print("nextIDs---------",util.encode(var.curId))
		-- print("typeIDs---------",util.encode(var.nextId))
		local needNum = data.needNum
		local stonePool = data.stonePool
		local longxinShop = data.longxinShop
		local langyaShop = data.langyaShop
		local yupeiShop = data.yupeiShop
		local hudunShop = data.hudunShop
		local ids = data.ids
		local col = nil

		--PanelFurnace.freshTableView(ids,var.curId)
		if var.tp ==4 then
			PanelFurnace.freshShopLayer(langyaShop)
		elseif var.tp == 3 then
			PanelFurnace.freshShopLayer(longxinShop)
		elseif var.tp == 1 then
			PanelFurnace.freshShopLayer(yupeiShop)
		elseif var.tp == 2 then
			PanelFurnace.freshShopLayer(hudunShop)
		end

		if var.curId == 0 then
			-- var.xmlPanel:getWidgetByName("nextSprit"):hide()
			-- var.xmlPanel:getWidgetByName("Image_3"):hide()
			var.xmlPanel:getWidgetByName("btn_upgrade"):hide()
			var.xmlPanel:getWidgetByName("Button_jihuo"):show()
			var.xmlPanel:getWidgetByName("curAttr"):hide()
			var.xmlPanel:getWidgetByName("nextAttr"):hide()
			var.xmlPanel:getWidgetByName("img_titlebg"):hide()
			var.levelFont:setString("")
		else
			-- var.xmlPanel:getWidgetByName("nextSprit"):show()
			-- var.xmlPanel:getWidgetByName("Image_3"):show()
			var.xmlPanel:getWidgetByName("btn_upgrade"):show()
			var.xmlPanel:getWidgetByName("Button_jihuo"):hide()
			var.xmlPanel:getWidgetByName("curAttr"):show()
			var.xmlPanel:getWidgetByName("nextAttr"):show()
			var.xmlPanel:getWidgetByName("img_titlebg"):show()
			PanelFurnace.resetSprit(var.nextId>10000 and var.nextId or var.curId,data.up)
			if var.tp == 1 then
				if not var.xmlPanel:getChildByName("effectNode") then
					util.addEffect(var.xmlPanel, "effectNode", GROUP_TYPE.EFFECT, 34107, {
						x = 300,
						y = 300
					}, nil, true)
				else
					util.updateEffect(var.xmlPanel, "effectNode", 34107)
				end
			elseif var.tp == 2 then	
				if not var.xmlPanel:getChildByName("effectNode") then
					util.addEffect(var.xmlPanel, "effectNode", GROUP_TYPE.EFFECT, 34075, {
						x = 330,
						y = 240
					}, nil, true)
				else
					util.updateEffect(var.xmlPanel, "effectNode", 34075)
				end
			elseif var.tp == 3 then	
				if not var.xmlPanel:getChildByName("effectNode") then
					util.addEffect(var.xmlPanel, "effectNode", GROUP_TYPE.EFFECT, 34103, {
						x = 300,
						y = 300
					}, nil, true)
				else
					util.updateEffect(var.xmlPanel, "effectNode", 34103)
				end
			elseif var.tp == 4 then	
				if not var.xmlPanel:getChildByName("effectNode") then
					util.addEffect(var.xmlPanel, "effectNode", GROUP_TYPE.EFFECT, 340930, {
						x = 300,
						y = 300
					}, nil, true)
				else
					util.updateEffect(var.xmlPanel, "effectNode", 340930)
				end	
			
			end
			var.levelFont:setString(tonumber(string.sub(var.curId, -2)))
		end

		data.up = false

		local btnUpgrade = var.xmlPanel:getWidgetByName("btn_upgrade")
		if needNum and stonePool and stonePool>=needNum  then
			col = color[2] -- 碎片足量
			btnUpgrade.enough = true
		else
			col = color[1]
			btnUpgrade.enough = false
		end

		local proStr = var.xmlPanel:getWidgetByName("tab"..var.tp):getWidgetByName("lblTitle"):getString();
		var.xmlPanel:getWidgetByName("lblusepiece"):setString("消耗"..proStr.."碎片:")
		var.xmlPanel:getWidgetByName("lblhaspiece"):setString("拥有"..proStr.."碎片:")
		-- var.xmlPanel:getWidgetByName("text_yulan"):setString(label[var.tp].."预览")
		--var.xmlPanel:getWidgetByName("img_fu_yulan"):loadTexture("img_view_"..var.tp,ccui.TextureResType.plistType)

		var.xmlPanel:getWidgetByName("usepiece"):setString(needNum)
		var.xmlPanel:getWidgetByName("haspiece"):setString(stonePool)
		var.xmlPanel:getWidgetByName("haspiece"):setColor(col)
		var.xmlPanel:getWidgetByName("right_arrow"):setVisible(var.nextId>0 and var.curId ~= 0)

		if var.curId==0 then
			btnUpgrade:setTitleText("领取")
		else
			if var.nextId>0 then
				btnUpgrade:setTitleText("升级")
			else
				btnUpgrade:setTitleText("已满级")
			end
		end
		if data.breath then
			util.addHaloToButton(btnUpgrade, "btn_normal_light3")
		else
			util.removeHaloFromButton(btnUpgrade)
		end
		PanelFurnace.updateCurrentAttr()
		PanelFurnace.updateNextAttr()
	elseif var.tp == 5 then --勋章
		if not effect then
			util.addEffect(var.xmlPanel, "effectNode", GROUP_TYPE.EFFECT, 34106, {x = 300, y=300}, nil, true)
		else
			util.updateEffect(var.xmlPanel, "effectNode", 34106)
		end
		local medalLv = data.medalLv
		local btn_upgrade = var.xmlPanel:getWidgetByName("btn_upgrade")
		if data.breath then
			util.addHaloToButton(btn_upgrade, "btn_normal_light3")
		else
			util.removeHaloFromButton(btn_upgrade)
		end

		local btnstr = ""
		if medalLv == 40 then
			btnstr = "已满级"
		elseif medalLv > 0 then
			btnstr = "升级勋章"
		else
			btnstr = "领取勋章"
		end

		-- var.xmlPanel:getWidgetByName("nextSprit"):show()
		-- var.xmlPanel:getWidgetByName("Image_3"):show()
		var.xmlPanel:getWidgetByName("btn_upgrade"):show()
		var.xmlPanel:getWidgetByName("Button_jihuo"):hide()
		var.xmlPanel:getWidgetByName("curAttr"):show()
		var.xmlPanel:getWidgetByName("nextAttr"):show()
		var.xmlPanel:getWidgetByName("img_titlebg"):show()
		var.levelFont:setString(medalLv)

		btn_upgrade:setTitleText(btnstr)
		var.xmlPanel:getWidgetByName("progressbar"):setPercent(data.score, data.scoreMax)
		--PanelFurnace.freshTableView(data.data, data.medalLv)
		local nextId = medalLv+14500001
		nextId = util.bound(14500001, nextId, 14500040)
		local up = data.score > data.scoreMax
		PanelFurnace.resetSprit(nextId, up)
		var.nextId = nextId
		PanelFurnace.updateCurrentAttr()
		PanelFurnace.updateNextAttr()

		PanelFurnace.freshShopLayer(data.medalShop)
	end

	var.xmlPanel:getWidgetByName("lblcoin"):setString(NetClient.mCharacter.mVCoin or 0)
	var.xmlPanel:getWidgetByName("lblbindcoin"):setString(NetClient.mCharacter.mVCoinBind or 0)
end

function PanelFurnace.updateCurrentAttr()
	local lblpool = {}
	local nItem = NetClient:getNetItem(equipPos[var.tp])

	
	if nItem then
		local itemdef = NetClient:getItemDefByID(nextId and nextId or nItem.mTypeID)
		if itemdef then
			if var.tp == 1 then
				table.insert(lblpool,{"生  命",itemdef.mMaxHp})
				table.insert(lblpool, {"生命恢复",itemdef.mMCMax})
			elseif var.tp == 2 then
				-- table.insert(lblpool,{"物防：",itemdef.mAC.."-"..itemdef.mACMax})
				-- table.insert(lblpool,{"魔防：",itemdef.mMAC.."-"..itemdef.mMACMax})
				table.insert(lblpool,{"物  攻",itemdef.mDC.."-"..itemdef.mDCMax})
				table.insert(lblpool,{"准  确",itemdef.mAccuracy})
			elseif var.tp == 3 then
				table.insert(lblpool,{"物  攻",itemdef.mDC.."-"..itemdef.mDCMax})
				table.insert(lblpool,{"物  防",itemdef.mAC.."-"..itemdef.mACMax})
				-- table.insert(lblpool,{"魔攻：",itemdef.mMC.."-"..itemdef.mMCMax})
				-- table.insert(lblpool,{"道攻：",itemdef.mSC.."-"..itemdef.mSCMax})
			elseif var.tp == 4 then
				table.insert(lblpool,{"暴击伤害",itemdef.mBaojiPres})
				table.insert(lblpool,{"暴击概率",string.format("%.02f%%",itemdef.mBaojiProb/100)})
			elseif var.tp == 5 then
				table.insert(lblpool,{"物  攻",itemdef.mDC.."-"..itemdef.mDCMax})
				table.insert(lblpool,{"生命上限",itemdef.mMaxHp})
				-- table.insert(lblpool,{"魔攻：",itemdef.mMC.."-"..itemdef.mMCMax})
				-- table.insert(lblpool,{"道攻：",itemdef.mSC.."-"..itemdef.mSCMax})
			end
			for i=1,3 do
				if i <= #lblpool then
					var.xmlPanel:getWidgetByName("lblcurattr"..i):setString(lblpool[i][1])
					var.xmlPanel:getWidgetByName("curattr"..i):setString(lblpool[i][2])
				end
				var.xmlPanel:getWidgetByName("lblcurattr"..i):setVisible(i<= #lblpool)--:setPositionX(var.tp ~=3 and 80 or 60)
				var.xmlPanel:getWidgetByName("curattr"..i):setVisible(i<= #lblpool)--:setPositionX(var.tp ~=3 and 80 or 60)
				var.xmlPanel:getWidgetByName("attrbg"..i):setVisible(i <= #lblpool):setScale(0.4, 0.5)
			end
		end
	else
		for i=1,3 do
			var.xmlPanel:getWidgetByName("lblcurattr"..i):setString("")
			var.xmlPanel:getWidgetByName("curattr"..i):setString("")
			var.xmlPanel:getWidgetByName("attrbg"..i):setVisible(false)
		end
	end
end

function PanelFurnace.updateNextAttr()
	local lblpool = {};
	if var.nextId > 0 then
		local itemdef = NetClient:getItemDefByID(var.nextId)
		if itemdef then
			if var.tp ==1 then
				table.insert(lblpool,{"生  命",itemdef.mMaxHp})
				table.insert(lblpool, {"生命恢复",itemdef.mMCMax})
			elseif var.tp ==2 then
				table.insert(lblpool,{"物  攻",itemdef.mDC.."-"..itemdef.mDCMax})
				table.insert(lblpool,{"准  确",itemdef.mAccuracy})
			elseif var.tp ==3 then
				table.insert(lblpool,{"物  攻",itemdef.mDC.."-"..itemdef.mDCMax})
				table.insert(lblpool,{"物  防",itemdef.mAC.."-"..itemdef.mACMax})
				-- table.insert(lblpool,{"魔攻：",itemdef.mMC.."-"..itemdef.mMCMax})
				-- table.insert(lblpool,{"道攻：",itemdef.mSC.."-"..itemdef.mSCMax})
			elseif var.tp ==4 then
				table.insert(lblpool,{"暴击伤害",itemdef.mBaojiPres})
				table.insert(lblpool,{"暴击概率",string.format("%.02f%%",itemdef.mBaojiProb/100)})
			elseif var.tp == 5 then
				table.insert(lblpool,{"物  攻",itemdef.mDC.."-"..itemdef.mDCMax})
				table.insert(lblpool,{"生命上限",itemdef.mMaxHp})
				-- table.insert(lblpool,{"魔攻：",itemdef.mMC.."-"..itemdef.mMCMax})
				-- table.insert(lblpool,{"道攻：",itemdef.mSC.."-"..itemdef.mSCMax})
			end
			for i=1,3 do
				if i<= #lblpool then
					var.xmlPanel:getWidgetByName("lblnexattr"..i):setString(lblpool[i][1])
					var.xmlPanel:getWidgetByName("nexattr"..i):setString(lblpool[i][2])
				end
				var.xmlPanel:getWidgetByName("lblnexattr"..i):setVisible(i<= #lblpool)--:setPositionX(var.tp ~=3 and 80 or 60)
				var.xmlPanel:getWidgetByName("nexattr"..i):setVisible(i<= #lblpool)--:setPositionX(var.tp ~=3 and 80 or 60)
				var.xmlPanel:getWidgetByName("nexbg"..i):setVisible(i <= #lblpool):setScale(0.4, 0.5)
			end
		end
	else
		for i=1,3 do
			var.xmlPanel:getWidgetByName("lblnexattr"..i):setString("")
			var.xmlPanel:getWidgetByName("nexattr"..i):setString("")
			var.xmlPanel:getWidgetByName("nexbg"..i):setVisible(false)
		end
	end
end

function PanelFurnace.getItemDesp(event)
	if not var.panelData then return end
	if event and event.type_id then
		if event.type_id == var.curId then
			PanelFurnace.updateCurrentAttr()
		elseif event.type_id == var.nextId then
			PanelFurnace.updateNextAttr()
		end
	end
end

function PanelFurnace.freshTableView(data,curid)
	local tableview = var.xmlPanel:getWidgetByName("ListView"):setSliderVisible(false)
	local num = #data
	if var.tp == 5 then
		if curid + 1 >= #data then
			num = #data
		else
			num = curid < 12 and 12 or curid + 1
		end
	end
	tableview:reloadData(num, function(subItem)
		local t = data[subItem.tag];
		if var.tp == 5 then
			t.id = subItem.tag + 14500000
		end
		UIItem.getItem({
			parent=subItem:getWidgetByName("modelimg"),
			typeId=t.id
		})
	
		local def = NetClient:getItemDefByID(t.id)
		if def and def.mEquipLevel then
			local modelname = subItem:getWidgetByName("modelname")
			modelname:setColor(game.getItemColor(def.mEquipLevel)):setString(def.mName)
		end
		-- modelname:setColor(curid~=t.id and game.getColor(0x00bbff) or game.getColor(0xef6b00))
		if var.tp == 5 then
			subItem:getWidgetByName("modelget"):setVisible(curid >= subItem.tag)
		else
			subItem:getWidgetByName("modelget"):setVisible(curid>=t.id)
		end
	end,nil,false)

	if var.tp == 5 then
		tableview:setContentOffset({x=0, y=-(num-curid) * 60})
	end
end

function PanelFurnace.freshShopLayer(data)
	local listshop = var.xmlPanel:getWidgetByName("listshop"):setSliderVisible(false)
	local clickTime = 0

	listshop:reloadData(#data, function(subItem)
		local t = data[subItem.tag];
		UIItem.getItem({
			parent = subItem:getWidgetByName("modelimg"),
			typeId = t.id,
		})
		local modelname = subItem:getWidgetByName("modelname")
		modelname:setString(t.name)
		subItem:getWidgetByName("modellblcoin"):setString(t.money)
		local modelbtnbuy = subItem:getWidgetByName("modelbtnbuy")
		modelbtnbuy.storeId = t.storeId
		UILuaLoader.attachEffect(modelbtnbuy,"outline(0e0600,1)")

		subItem:getWidgetByName("modelbtnbuy"):addClickEventListener(function( sender )
			if game.getTime() - clickTime > 250 then
				if var.tp <= 4  then
					NetClient:PushLuaTable("gui.PanelFurnace.onPanelData", util.encode({actionid = "buy",param={var.tp,sender.storeId}}))
				else
					NetClient:PushLuaTable("gui.PanelAchieve.onPanelData", util.encode({actionid = "buy",param={sender.storeId}}))
				end
				clickTime = game.getTime()
			end
		end)

		local resource = {"coin","coin_bind","vcoin","vcoin_bind"}
		local res = resource[t.MoneyKind-99]
		subItem:getWidgetByName("modelcoin"):loadTexture(res,ccui.TextureResType.plistType):setScale(0.8)
	end,nil,false)
end

--刷新动画对象
function PanelFurnace.resetSprit(typeId, up)
	--local nextSprit = var.xmlPanel:getWidgetByName("nextSprit")
	if up then
		local fireworks = cc.Sprite:create():addTo(var.xmlPanel):pos(300, 380)
		local animate = cc.AnimManager:getInstance():getPlistAnimate(GROUP_TYPE.EFFECT,60015,4)
		-- print(animate:getAnimation():setDelayPerUnit(36/40))
		fireworks:runAction(cca.seq({
			cca.rep(animate, 1),
			cca.cb(function ()
				-- UIItem.getItem({
				-- 	parent = nextSprit,
				-- 	typeId = typeId
				-- })
			end),
			cca.removeSelf()
		}))
	end
end

function PanelFurnace.onPanelClose()
	var.tp = 1
	var.panelData = nil
	for i=1,3 do
		var.xmlPanel:getWidgetByName("lblcurattr"..i):setString("")
		var.xmlPanel:getWidgetByName("curattr"..i):setString("")
		var.xmlPanel:getWidgetByName("lblnexattr"..i):setString("")
		var.xmlPanel:getWidgetByName("nexattr"..i):setString("")
	end
	if var.tabv then var.tabv:hide() end
end

return PanelFurnace