-- this file is generated by program!
-- don't change it manaully.
-- source file: arena_champion_data.xls

Config = Config or {} 
Config.ArenaChampionData = Config.ArenaChampionData or {}
Config.ArenaChampionData.data_const_key_depth = 1
Config.ArenaChampionData.data_const_length = 29
Config.ArenaChampionData.data_const_lan = "en"
Config.ArenaChampionData.data_const = {
	["base_lev"] = {val=60,desc="Basic level of the robot (used when there is no real player)"},
	["base_power"] = {val=100000,desc="Basic combat power of the robot (used when there is no real player)"},
	["base_score"] = {val=600,desc="Robot initial points"},
	["battel_guess"] = {val={{0,50},{51,80},{81,100}},desc="The range of quiz and screening combat power difference (three rounds of screening)"},
	["battel_score"] = {val=80,desc="Round-robin points bonus factor"},
	["battle_champion"] = {val=90003,desc="Championship title"},
	["battle_members"] = {val=128,desc="Number of Qualified Points"},
	["battle_secondplace"] = {val=90004,desc="Championship runner-up"},
	["battle_thirdplace"] = {val=90005,desc="Champion third place title"},
	["combat_down"] = {val=900,desc="Attenuation of combat power of the robot that fills in the player\'s mirrored data (per thousand)"},
	["face_list"] = {val={10101,10201,10202,10301,10302,10303,10304,10305,10401,10402,10403,10404,10405,10501,10502,10503,10504,10505,10506,10507,10508,10509,20101,20201,20202,20301,20302,20303,20304,20305,20401,20402,20403,20404,20405,20501,20502,20503,20504,20505,20506,20507,20508,30101,30201,30202,30301,30302,30303,30304,30305,30401,30402,30403,30404,30405,30501,30502,30503,30504,30505,30506,30507,30508,40301,40401,40402,40403,40404,40501,40502,40503,40504,40505,40506,40507,50301,50401,50402,50403,50404,50501,50502,50503,50504,50505,50506,50507},desc="Robot avatar information"},
	["guess_coin"] = {val=10,desc="Guess the amount of coins added or subtracted each time"},
	["guess_limit"] = {val=1000,desc="Guess the upper limit of a single bet"},
	["guess_number1"] = {val=60,desc="The number of chips given in each round of the points match"},
	["guess_number2"] = {val=60,desc="The number of chips given in each round of the top 32"},
	["guess_times"] = {val=2000,desc="The multiple of the quiz currency obtained by the quiz successfully"},
	["hero_bid_limit"] = {val={20504},desc="Remove the lineup that owns the Pok√©mon"},
	["look_list"] = {val={110401,110402,110403,110404,110405,120401,120402,120403,120404,120405,130401,130402,130403,130404,130405,140401,140402,140403,140404,150401,150402,150403,150404},desc="Robot appearance information"},
	["score_arg"] = {val=5,desc="Robot integral coefficient"},
	["time_champion_end"] = {val={1,23,59,59},desc="Championship end time"},
	["time_champion_fight"] = {val=180,desc="Top 32 championship battle time"},
	["time_champion_guess"] = {val=90,desc="Top 32 championship betting time"},
	["time_champion_ready"] = {val=30,desc="Top 32 championship preparation time"},
	["time_score_fight"] = {val=180,desc="Points match battle time"},
	["time_score_guess"] = {val=90,desc="Points game betting time"},
	["time_score_ready"] = {val=30,desc="Points preparation time"},
	["time_score_start"] = {val={21,0,5},desc="Points match start time"},
	["wave_lev_max"] = {val=15,desc="Upper limit of level fluctuation"},
	["wave_lev_min"] = {val=40,desc="Lower limit of level fluctuation"},
}
