---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ffh.
--- DateTime: 2019/12/12 20:35
---

UIAdaptManager = UIAdaptManager or class("UIAdaptManager",BaseManager)

function UIAdaptManager:ctor()
    UIAdaptManager.Instance = self

    self.platformMgr = PlatformManager:GetInstance()

    self:Init()
end

function UIAdaptManager:Reset()

end

function UIAdaptManager.GetInstance()
    if UIAdaptManager.Instance == nil then
        UIAdaptManager()
    end
    return UIAdaptManager.Instance
end

function UIAdaptManager:Init()
    self.safeArea = Screen.safeArea
    
    local rect = {
        x = self.safeArea.x,
        y = self.safeArea.y,
        width = self.safeArea.width,
        height = self.safeArea.height
    }
    
    log("ffh ======= safeArea " .. Table2String(rect))
    
    self:checkIsIphoneXDevice()
end

--获取当前刘海屏的适配偏移值
function UIAdaptManager:GetBanScreenOffsetX()
    if self:IsIphoneXDevice() then
        return 65
    else
        --todo 其他设备
        return 0
    end
end

--获取当前刘海屏的适配偏移值
function UIAdaptManager:GetBanScreenOffsetY()
    if self:IsIphoneXDevice() then
        return 10
    else
        --todo 其他设备
        return 0
    end
end

--是否IPhoneX
function UIAdaptManager:IsIphoneXDevice()
    return self.isIphoneXDevice
end

--是否刘海屏设备
function UIAdaptManager:IsBangScreenDevice()
    if self.isIphoneXDevice then
        return true
        --TODO 其他设备判断，这里添加
    end

    return false
end

function UIAdaptManager:__getTransformPosition(transform)
    local _x, _y
    if isClass(transform) then
        _x, _y = transform:GetPosition()
    else
        _x, _y = GetLocalPosition(transform)
    end
    return _x, _y
end

function UIAdaptManager:__setTransformPosition(transform, x, y)
    if isClass(transform) then
        transform:SetPosition(x,y)
    else
        SetLocalPositionX(transform,x)
        SetLocalPositionY(transform,y)
    end
end

--屏幕左边的ui适配刘海屏
--transform
--@additionalX 修正偏移值
function UIAdaptManager:AdaptUIForBangScreenLeft(transform, additionalX)
    if transform == nil then
        logWarn("AdaptUIForBangScreenLeft tarnsform is nil !")
        return
    end

    if not self:IsBangScreenDevice() then
        return
    end
   
    local _x,_y = self:__getTransformPosition(transform)
    
    additionalX = additionalX or 0
    local offsetX = additionalX + _x
    
    if self:IsIphoneXDevice() then
        offsetX = offsetX + self:GetBanScreenOffsetX()
        self:__setTransformPosition(transform, offsetX, _y)
    else
        --TODO 其他设备
    end

end

--屏幕右边的ui适配刘海屏
function UIAdaptManager:AdaptUIForBangScreenRight(transform, additionalX)
    if transform == nil then
        logWarn("AdaptUIForBangScreenRight tarnsform is nil !")
        return
    end

    if not self:IsBangScreenDevice() then
        return
    end
    
    local _x, _y = self:__getTransformPosition(transform)
    
    additionalX = additionalX or 0
    local offsetX = additionalX + _x
  
    
    if self:IsIphoneXDevice() then
        offsetX = offsetX - self:GetBanScreenOffsetX()
        self:__setTransformPosition(transform, offsetX, _y)
    else

    end
end

--屏幕底部的ui适配刘海屏
function UIAdaptManager:AdaptUIForBangScreenBottom(transform, additionalY)
    if transform == nil then
        logWarn("AdaptUIForBangScreenRight tarnsform is nil !")
        return
    end

    if not self:IsBangScreenDevice() then
        return
    end

    local _x, _y = self:__getTransformPosition(transform)

    additionalY = additionalY or 0
    local offsetY = additionalY + _y


    if self:IsIphoneXDevice() then
        offsetY = offsetY + self:GetBanScreenOffsetY()
        self:__setTransformPosition(transform, _x, offsetY)
    else

    end
end

function UIAdaptManager:checkIsIphoneXDevice()

    self.isIphoneXDevice = false

    if self.platformMgr:IsIos() then
        local modelStr = self.platformMgr.device_info.device_name
        --iPhoneX:"iPhone10,3","iPhone10,6"
        --iPhoneXR:"iPhone11,8"
        --iPhoneXS:"iPhone11,2"
        --iPhoneXS Max:"iPhone11,6"
        --iPhone XS Max China: iPhone11,4
        --iPhone 11：12,1
        --iPhone 11 Pro： iPhone12,3
        --iPhone 11 Pro Max：iPhone12,5
        if string.match(modelStr, "iPhone10,3")
                or string.match(modelStr, "iPhone10,6")
                or string.match(modelStr, "iPhone11,6")
                or string.match(modelStr, "iPhone11,8")
                or string.match(modelStr, "iPhone11,2")
                or string.match(modelStr, "iPhone11,4")
                or string.match(modelStr, "iPhone12,1")
                or string.match(modelStr, "iPhone12,3")
                or string.match(modelStr, "iPhone12,5")
                or string.match(modelStr, "iPhone12,8")
        then
            self.isIphoneXDevice = true
            DebugLog("ffh =================== 当前为刘海屏设备：", modelStr)
        else
            DebugLog("ffh =================== 当前为非刘海屏设备：", modelStr)
        end
    end

end
