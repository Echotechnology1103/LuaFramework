--- Generated by tzw
--- Created by Admin.
--- DateTime: 2019/12/18 19:44

ChildActModel = ChildActModel or class("ChildActModel",BaseModel)
local ChildActModel = ChildActModel

function ChildActModel:ctor()
    ChildActModel.Instance = self
    self:Reset()

end

function ChildActModel:Reset()
    self.illact_id_list = {772, 776, 777}
    self.illinfo_list = {}
    self.illtheme_cf_list = {}
    self.illrewa_cf_list = {}
    self.rewa_cf_list = {}
    self.act_end_list = {}
    self.petRedPoints = {}
end

function ChildActModel.GetInstance()
    if ChildActModel.Instance == nil then
        ChildActModel()
    end
    return ChildActModel.Instance
end


function ChildActModel:IsSelcet(id)
    for i, v in pairs(self.illact_id_list) do
        if OperateModel:GetInstance():GetActIdByType(v) == id then
            return  true
        end
    end
    return false
end

function ChildActModel:IsSelcetTarget(id)
    if OperateModel:GetInstance():GetActIdByType(773) == id then
        return  true
    end
    return false
end

function ChildActModel:SetActIllInfo(info)
    self.illinfo_list[info.id] = info
    self:GetIllAllCf()
end


function ChildActModel:GetAcIllRewaCf()
    if table.isempty(self.illsorted_achi_cf_list) then
        self:SortIllAchiRewaCf()
    end
    return self.illsorted_achi_cf_list
end

function ChildActModel:GetIllRewaCfByActId(id)
    return self.illrewa_cf_list[id]
end

function ChildActModel:GetIllAllCf()
    local list = self.illact_id_list
    for _, type in pairs(list) do
        local id = OperateModel.GetInstance():GetActIdByType(type)
        local theme_cf = OperateModel.GetInstance():GetConfig(id)
        self:SetIllThemeCf(theme_cf)
    end
    self:GetIllRewaCf()
end

function ChildActModel:SetIllThemeCf(cf)
    if (not cf) or (not cf.id) then
        return
    end
    self.illtheme_cf_list[cf.id] = cf
end

function ChildActModel:GetIllThemeCfById(id)
    return self.illtheme_cf_list[id]
end

function ChildActModel:GetIllRewaCfByActId(id)
    return self.illrewa_cf_list[id]
end

function ChildActModel:GetActIllInfoByActId(id)
    return self.illinfo_list[id]
end

function ChildActModel:GetIllRewaCf()
    for act_id, info_list in pairs(self.illinfo_list) do
        local list = {}
        for idx, task_info in pairs(info_list.tasks) do
            list[task_info.id] = OperateModel.GetInstance():GetRewardConfig(act_id, task_info.id)
        end
        self.illrewa_cf_list[act_id] = list
    end
end

function ChildActModel:GetSingleTaskInfo(act_id, task_id)
    local act_info = self:GetActIllInfoByActId(act_id)
    if not act_info then
        return
    end
    local result = {}
    for i, v in pairs(act_info.tasks) do
        if v.id == task_id then
            result = v
            break
        end
    end

    return result
end

function ChildActModel:SortIllAchiRewaCf()
    local  id = OperateModel:GetInstance():GetActIdByType(772)
    local cf = self:GetIllRewaCfByActId(id)
    if not cf then
        self.illsorted_achi_cf_list = {}
        return
    end
    local grade_list = {}
    for _, cf_list in pairs(cf) do
        local task_tbl = String2Table(cf_list.task)
        local day = task_tbl[2]
        local grade = task_tbl[3]
        if not grade_list[grade] then
            grade_list[grade] = {}
        end
        cf_list.grade = grade
        cf_list.day = day
        grade_list[grade][#grade_list[grade] + 1] = cf_list
    end
    local list = {}
    local interator = table.pairsByKey(grade_list)
    for grade, cf in interator do
        list[#list + 1] = cf
    end
    self.illsorted_achi_cf_list = list
end

function ChildActModel:GetExchangeTaskInfo(info, id)
	if not info then
		return
	end
	local result
	for i = 1, #info do
		local data = info[i]
		if data.id == id then
			result = data
			break
		end
	end
	return result
end
