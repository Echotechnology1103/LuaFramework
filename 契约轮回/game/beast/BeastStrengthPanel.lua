--- 神兽强化UI
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 18/12/04 16:10
---

BeastStrengthPanel = BeastStrengthPanel or class("BeastStrengthPanel", WindowPanel)
local this = BeastStrengthPanel

function BeastStrengthPanel:ctor()
    self.abName = "beast";
    self.image_ab = "beast_image";
    self.assetName = "BeastStrengthPanel"
    self.layer = "UI"
    self.items = {};
    self.panel_type = 2;
    self.model = BeastModel.GetInstance()
    self.model.maxColor = 6;
    self.events = {};
    self.selectedList = {};
    self.schedules = {};

    self.model:DelectedEmptyItem()
end

function BeastStrengthPanel:dctor()
    self.model.ItemsUid = {}
    self.model = nil;

    GlobalEvent:RemoveTabListener(self.events);
    self:StopAllSchedules()
    self.selectedList = nil;

    if self.blood then
        self.blood:destroy();
    end

    if self.scrollViewScp ~= nil then
        self.scrollViewScp:OnDestroy()
    end
    self.scrollViewScp = nil;

    self.values = nil;
    self.preSelectItem = nil;

    destroyTab(self.items);
    self.items = nil;
    self.starimgs = nil;
end

function BeastStrengthPanel:Open(data)
    self.data = data;
    WindowPanel.Open(self)
end

function BeastStrengthPanel:LoadCallBack()
    self.nodes = {
        "webBtn", "blueblood", "us_item", "percent", "equipcon", "prop_2", "prop_1", "strengthbtn", "jie_drop",
        "power/arrow", "power/pre", "power/next", "selectall", "bag", "ScrollView/Viewport",
        "ScrollView/Viewport/Content", "bag/Viewport/BagContent", "bag_selected", "light", "dark",
        "equipbg",
        "stars","stars/star_3","stars/star_2","stars/star_1",
    }
    self:GetChildren(self.nodes);
    self.ScrollView = GetRectTransform(self.bag)

    SetLocalPosition(self.transform, 0, 0, 0);

    self:InitUI();

    self:AddEvent();
    --print2(self.model:defaultStrengthSelect());
    self:InitDefaultSelected();
    --
    self:SetTileTextImage(self.image_ab, "beast_strength_text");
    --self:SetTileTextImage(self.image_ab, "");
    --AddBgMask(self.gameObject,20,20,20,185);
end

function BeastStrengthPanel:AddEvent()
    AddClickEvent(self.webBtn.gameObject, handler(self, self.HandleHelp));
    AddValueChange(self.selectall.gameObject, handler(self, self.HandleSelectAll));
    AddClickEvent(self.strengthbtn.gameObject, handler(self, self.HandleStrength));

    for k, v in pairs(self.items) do
        AddClickEvent(v.gameObject, handler(self, self.HandleScrollClick, v))
    end

    AddEventListenerInTab(BeastEvent.BEAST_STRENGTH, handler(self, self.HandleStrengthResult), self.events);

    AddEventListenerInTab(BagEvent.ClickItem, handler(self, self.CalcExp), self.events);
    --AddEventListenerInTab(GoodsEvent.DelItems, handler(self, self.HandleDeleteItems), self.events);
end

function BeastStrengthPanel:InitUI()
    self.starimgs = {};
    for i = 1, 3 do
        self.starimgs[i] = GetImage(self["star_" .. i]);
    end

    self.webBtn = GetButton(self.webBtn);--问号

    self.pre = GetText(self.pre);
    self.next = GetText(self.next);
    self.pre.text = "0";
    self.next.text = "0";
    self.percent = GetText(self.percent);

    self.prop_1 = GetText(self.prop_1);
    self.prop_2 = GetText(self.prop_2);
    self.values = {};
    self.values[1] = self.prop_1;
    self.values[2] = self.prop_2;

    self.light = GetImage(self.light);
    self.light.fillAmount = 0;
    self.dark = GetImage(self.dark);
    SetSizeDeltaX(self.light.transform, 0);

    self.equipcon = GetImage(self.equipcon);

    self.equipbg = GetImage(self.equipbg);
    --self.blood = BossBloodItem(self.blood , 0);
    --self.blood = BossBloodItem(self.blueblood, 0);
    --self.blood:UpdateCurrentBloodImmi(0,100);

    --self.bag_selected = GetImage(self.bag_selected);
    self.bagimgs = {};

    self.selectall = GetToggle(self.selectall);

    self:InitTogs();
    self:InitDropDown();

    self:HandleBagItems();


end

function BeastStrengthPanel:InitTogs()
    destroyTab(self.items);
    self.items = {};
    SetGameObjectActive(self.us_item, true);
    local allEquips = BeastModel:GetInstance():GetAllEquips();

    local selectedIndex = 1;
    local minStrenLevel = 100;
    for i = 1, #allEquips, 1 do
        local tab = allEquips[i];
        local item = BeastScrollItem(newObject(self.us_item), tab);
        self.items[i] = item;
        --item:SetScoreText("强化等级 : " .. tab.equip.stren_lv)
        item:SetScoreText("");
        item:SetIsAssist(false);
        SetParent(item.transform, self.Content.transform);
        SetLocalPosition(item.transform, 0, 0, 0);
        SetLocalScale(item.transform, 1, 1, 1);

        if self.data then
            if tab.uid == self.data then
                selectedIndex = i;
            end
        elseif tab.extra < minStrenLevel then
            minStrenLevel = tab.extra;
            selectedIndex = i;
        end
    end

    local rt = GetRectTransform(self.Content);
    SetSizeDeltaY(rt, #self.items * 92)
    if selectedIndex <= 3 then
        SetLocalPositionY(rt, 0);
    else
        SetLocalPositionY(rt, (selectedIndex - 3) * 92);
    end

    if #self.items > 0 then
        self:HandleScrollClick(nil, nil, nil, self.items[selectedIndex]);
    end

    SetGameObjectActive(self.us_item, false);
end
BeastStrengthPanel.preSelectItem = nil;
--点击ScrollItem事件
function BeastStrengthPanel:HandleScrollClick(go, x, y, v)
    if self.preSelectItem then
        self.preSelectItem:SetIsSelected(false);
    end
    self.preSelectItem = v;
    v:SetIsSelected(true);
    self:RefreshItem(v);
    self:CalcExp();
    if v and v.data then
        local item = Config.db_beast_equip[v.data.id];
        self:SetStarNum(item.star)
    else
        self:SetStarNum(0);
    end
end

function BeastStrengthPanel:RefreshItem(item)
    local data = item.data;
    local equipConfig = Config.db_beast_equip[data.id];
    if data.equip.stren_lv == 0 then
        data.equip.stren_lv = 1;
    end
    local currentEquipConfig = Config.db_beast_reinforce[equipConfig.slot .. "@" .. data.equip.stren_lv];
    if not currentEquipConfig then
        self.percent.text = "";
        self.pre.text = "+" .. data.equip.stren_lv;
        self.next.text = "+" .. data.equip.stren_lv;
        self.light.fillAmount = 0;
        for k, v in pairs(self.values) do
            v.text = "";
        end
        return ;
    end
    self:CalcExp();

    local itemConfig = Config.db_item[data.id];

    if itemConfig then
        if self.preIcon ~= itemConfig.icon then
            lua_resMgr:SetImageTexture(self, self.equipcon, "iconasset/icon_beast", itemConfig.icon, false, nil, false);
            self.preIcon = itemConfig.icon;
        end
        lua_resMgr:SetImageTexture(self, self.equipbg, self.image_ab, "color_" .. itemConfig.color, false, nil, false);
    end
end

function BeastStrengthPanel:InitDropDown()
    self.jie_drop = GetDropDown(self.jie_drop);

    self.jie_drop.options:Clear();
    local od = UnityEngine.UI.Dropdown.OptionData();
    od.text = "<color=#" .. ColorUtil.GetColor(ColorUtil.ColorType.Red) .. ">Red</color> and lower";
    self.jie_drop.options:Add(od);
    od = UnityEngine.UI.Dropdown.OptionData();
    od.text = "<color=#" .. ColorUtil.GetColor(ColorUtil.ColorType.Orange) .. ">Orange</color> and lower";
    self.jie_drop.options:Add(od);
    od = UnityEngine.UI.Dropdown.OptionData();
    od.text = "<color=#D63BFF>Purple</color> and lower";--" .. ColorUtil.GetColor(ColorUtil.ColorType.Purple) .. "
    self.jie_drop.options:Add(od);
    od = UnityEngine.UI.Dropdown.OptionData();
    od.text = "<color=#" .. ColorUtil.GetColor(ColorUtil.ColorType.Blue) .. ">Blue</color> and lower";
    self.jie_drop.options:Add(od);
    --od = UnityEngine.UI.Dropdown.OptionData();
    --od.text = "<color=#" .. ColorUtil.GetColor(ColorUtil.ColorType.Green) .. ">绿色</color>及以下";
    --self.jie_drop.options:Add(od);

    self.jie_drop.value = BeastModel:GetInstance():defaultStrengthColor();

    AddValueChange(self.jie_drop.gameObject, handler(self, self.HandleColorSelected));
end

function BeastStrengthPanel:LoadItems()
    self.model:SetItemsByLessQuality(self.model.maxColor - self.jie_drop.value)

    local param = {}
    local cellSize = { width = 76, height = 76 }
    param["scrollViewTra"] = self.ScrollView
    param["cellParent"] = self.BagContent
    param["cellSize"] = cellSize
    param["cellClass"] = BeastBagItemSettor
    param["begPos"] = Vector2(5, -5)
    param["spanX"] = 5
    param["spanY"] = 5
    param["createCellCB"] = handler(self, self.CreateCellCB)
    param["updateCellCB"] = handler(self, self.UpdateCellCB)
    param["totalColumn"] = 4;
    param["cellCount"] = Config.db_bag[BagModel.beast].cap
    self.scrollViewScp = ScrollViewUtil.CreateItems(param)
end

function BeastStrengthPanel:CreateCellCB(itemCLS)
    self:UpdateCellCB(itemCLS)
end

function BeastStrengthPanel:UpdateCellCB(itemCLS)
    if self.model.beastItemDatas ~= nil then
        local itemBase = self.model.beastItemDatas[itemCLS.__item_index]
        if itemBase ~= nil then
            local configItem = Config.db_item[itemBase.id]
            if configItem ~= nil then
                --配置表存该物品
                local param = {}
                --type,uid,id,num,bag,bind,outTime
                param["type"] = configItem.type
                param["uid"] = itemBase.uid
                param["id"] = configItem.id
                param["num"] = itemBase.num
                param["bag"] = itemBase.bag
                param["bind"] = itemBase.bind
                param["cellSize"] = { x = 80, y = 80 };
                param["itemBase"] = itemBase;
                param["outTime"] = itemBase.etime
                param["multy_select"] = true
                param["model"] = self.model
                param["get_item_cb"] = handler(self, self.GetItemDataByIndex)
                param["selectItemCB"] = handler(self, self.SelectItemCB)
                param["get_item_select_cb"] = handler(self, self.GetItemSelect)

                itemCLS:DeleteItem()
                itemCLS:UpdateItem(param)
                --itemCLS:SelectItem(itemBase.bag, self:GetItemSelect(itemBase.uid))
            end
        else
            local param = {}
            param["bag"] = BagModel.beast
            param["multy_select"] = true
            param["get_item_cb"] = handler(self, self.GetItemDataByIndex)
            param["selectItemCB"] = handler(self, self.SelectItemCB)
            param["get_item_select_cb"] = handler(self, self.GetItemSelect)
            param["model"] = self.model;
            param["cellSize"] = { x = 80, y = 80 };
            itemCLS:InitItem(param)
        end

    end
end

function BeastStrengthPanel:DelItemCB(uid)
    self.model:DelSelectItemByUid(uid)
end

function BeastStrengthPanel:GetItemDataByIndex(idx)
    return self.model.beastItemDatas[idx]
end
function BeastStrengthPanel:GetItemDataByUid(uid)
    return self.model:GetItemDataByUid(uid);
end

function BeastStrengthPanel:SelectItemCB(uid, is_select)
    self.model:SetItemSelect(uid, is_select)
end

function BeastStrengthPanel:GetItemSelect(uid)
    local select = self.model:GetItemSelect(uid)
    return select ~= nil and select == true or false
end


--刷新背包
function BeastStrengthPanel:HandleBagItems()
    self:LoadItems()


    --destroyTab(self.bagItems);
    --self.bagItems = {};
    --local allbagequip = BeastModel:GetInstance():GetSortBeastBag();
    --local delList = {};
    --for i = 1, #allbagequip, 1 do
    --    local itemConfig = Config.db_item[allbagequip[i].id];
    --    if itemConfig.color > 5 then
    --        table.insert(delList, i);
    --    end
    --end
    --table.RemoveByIndexList(allbagequip, delList);
    --
    --
    --for k, v in pairs(self.bagimgs) do
    --    GameObject.Destroy(v.gameObject);
    --end
    --SetGameObjectActive(self.bag_selected, true);
    --for i = 1, #allbagequip, 1 do
    --    local bagSelectedImg = newObject(self.bag_selected);
    --    SetParent(bagSelectedImg.transform, self.BagContent);
    --    SetLocalScale(bagSelectedImg.transform, 1, 1, 1);
    --    SetLocalPosition(bagSelectedImg.transform, 0, 0, 0);
    --    local baseIcon = BaseIconSettor(bagSelectedImg.transform, LayerManager.BuiltinLayer.UI);
    --    bagSelectedImg.enabled = false;
    --    local callback = function()
    --        self:HandleSelectItem(nil, nil, nil, bagSelectedImg);
    --    end
    --    baseIcon.data = allbagequip[i];
    --    baseIcon:LoadNow();
    --    baseIcon:UpdateIcon(allbagequip[i], 1, nil, callback);--);--
    --    self.bagItems[i] = baseIcon;
    --    self.bagimgs[i] = bagSelectedImg;
    --end
    --local rt = GetRectTransform(self.BagContent);
    --SetSizeDeltaY(rt, math.ceil(#self.bagItems / 4) * 90);
    --self:HandleColorSelected(1, 1);
    --SetGameObjectActive(self.bag_selected, false);
end
BeastStrengthPanel.selectedList = nil;
--@ling autofun
function BeastStrengthPanel:HandleSelectItem(go, x, y, item)
    if not self.selectedList then
        self.selectedList = {};
    end
    local index = table.indexof(self.bagimgs, item);

    if item.enabled then
        item.enabled = false;
    else
        item.enabled = true;
    end
    if not table.indexof(self.selectedList, self.bagItems[index]) then
        table.insert(self.selectedList, self.bagItems[index]);
    end

    --if self.bagimgs[i].enabled then
    --    self.bagimgs[i].enabled = false;
    --else
    --    self.bagimgs[i].enabled = true;
    --end
    --if not table.indexof(self.selectedList, self.bagItems[i]) then
    --    table.insert(self.selectedList, self.bagItems[i]);
    --end
end

--@ling autofun
function BeastStrengthPanel:HandleHelp(go, x, y)
    ShowHelpTip(HelpConfig.Beast.strength , true);
end
--选择全部
function BeastStrengthPanel:HandleSelectAll(go, bool)
    --print2(bool);
    bool = toBool(bool);

    --if self.autoSet then
    --    return;
    --end
    --
    --if bool then
    --    self:HandleColorSelected(nil, self.jie_drop.value);
    --else
    --    self:SetAllSelected(false);
    --end
    local value = bool and 1 or 0;
    self.model.ItemsUid = {};
    self.model:defaultStrengthSelect(value);
    if bool then
        self:SetItemsByLessQuality();
        self.model:Brocast(BagEvent.LoadItemByBagId, BagModel.beast);
    end
    GlobalEvent:Brocast(GoodsEvent.SelectItem, BagModel.beast, bool);
    self:CalcExp();
end

--@ling autofun
function BeastStrengthPanel:HandleStrength(go, x, y)
    if #self.model.ItemsUid > 0 then
        local beastID = self.model:GetBeastIDByItemUid(self.preSelectItem.data.uid);
        if beastID then
            BeastCtrl:GetInstance():RequestEquipReinforce(beastID, self.preSelectItem.data.uid, self.model.ItemsUid, false);
        else
            Notify.ShowText("You selected a wrong beast");
        end

    else

        Notify.ShowText("You didn't select enhancement materials");
    end

end

BeastStrengthPanel.autoSet = false;
--选择颜色1,橙色及以下2,紫色,3,蓝,4绿5白
function BeastStrengthPanel:HandleColorSelected(go, value)
    --self:SetAllSelected(false);
    --if go == self.selectall.gameObject then
    --    return;
    --end
    --if go then
    self.autoSet = true;
    --self.selectall.isOn = true;
    self.autoSet = false;
    --end

    local color = self.model.maxColor - value;
    local defalutColor = self.selectall.isOn and 100 or 3;
    BeastModel:GetInstance():defaultStrengthColor(value);
    self.model:SetItemsByLessQuality(color, defalutColor)
    self.model:Brocast(BagEvent.LoadItemByBagId, BagModel.beast);
    self:CalcExp();
end
--计算所有选中的材料总共能加多少经验,顺便看看能升多少级
function BeastStrengthPanel:CalcExp()
    self.addedExp = 0;
    for k, v in pairs(self.model.ItemsUid) do
        local item = self.model:GetItemByUid(v);
        if item then
            local equipConfig = Config.db_beast_equip[item.id];
            if equipConfig then
                self.addedExp = self.addedExp + equipConfig.exp;

                if item.extra and item.extra >= 1 then
                    local slot = equipConfig.slot;
                    local total = 0;
                    for i = 1, item.extra do
                        local reinConfig = Config.db_beast_reinforce[slot .. "@" .. item.extra];
                        if reinConfig then
                            total = reinConfig.total;
                        end
                    end
                    self.addedExp = self.addedExp + total;
                end
            end
        end
    end
    --local str = self.percent.text;
    --if not string.isNilOrEmpty(str) and string.find(str , "%%s") then
    --    self.percent.text = string.format(str , self.addedExp);
    --end
    if self.preSelectItem then
        local data = self.preSelectItem.data;
        local equipConfig = Config.db_beast_equip[data.id];
        if data.equip.stren_lv == 0 then
            data.equip.stren_lv = 1;
        end
        local currentEquipConfig = Config.db_beast_reinforce[equipConfig.slot .. "@" .. data.equip.stren_lv];
        self.percent.text = data.equip.stren_phase .. "<color=#ffff00>+" .. self.addedExp .. "</color>/" .. currentEquipConfig.exp;

        self.light.fillAmount = (data.equip.stren_phase / currentEquipConfig.exp);

        local addedExp = self.addedExp + data.equip.stren_phase;
        local nextLevel = data.equip.stren_lv
        for i = nextLevel, 500 do
            local equipConfig = Config.db_beast_reinforce[equipConfig.slot .. "@" .. i];
            if equipConfig.exp <= addedExp then
                addedExp = addedExp - equipConfig.exp;
                nextLevel = i + 1;
            end
        end
        local flag = true;
        if nextLevel >= 500 then
            nextLevel = 500;
            if data.equip.stren_lv == 500 then
                flag = false;
            end

        end
        if nextLevel == data.equip.stren_lv and nextLevel < 500 then
            nextLevel = data.equip.stren_lv + 1;
        end
        self.next.text = "+" .. nextLevel;
        self.pre.text = "+" .. data.equip.stren_lv;

        SetGameObjectActive(self.next , flag);
        SetGameObjectActive(self.pre , flag);
        SetGameObjectActive(self.arrow , flag);
        local nextEquipConfig = nil;
        if flag then
            nextEquipConfig = Config.db_beast_reinforce[equipConfig.slot .. "@" .. (nextLevel)];
        end


        local basePropTab = String2Table(currentEquipConfig.base);

        local index = 1;
        local nextBasePropTab = nil
        if nextEquipConfig then
            nextBasePropTab = String2Table(nextEquipConfig.base);
        end
        for k, v in pairs(basePropTab) do
            local text = PROP_ENUM[v[1]].label .. "+";
            if v[1] >= 13 then
                self.values[index].text = text .. GetPreciseDecimal(tonumber(v[2]) / 100, 2) .. "%";
            else
                self.values[index].text = text .. tostring(v[2]);
            end
            if nextBasePropTab then
                local nv = nextBasePropTab[k];
                if nv then
                    if v[1] >= 13 then
                        self.values[index].text = self.values[index].text .. "<color=#399E10>→" .. GetPreciseDecimal(tonumber(nv[2]) / 100, 2) .. "%</color>";-- - v[2]
                    else
                        self.values[index].text = self.values[index].text .. "<color=#399E10>→" .. tostring(nv[2]) .. "</color>";-- - v[2]
                    end
                end
            end

            index = index + 1;
        end
    end

    --local nextStrenLevel = Config.db_beast_reinforce[equipConfig.slot .. "@" .. (data.equip.stren_lv + 1)];
    --self.pre.text = "+" .. data.equip.stren_lv;
    --if not nextStrenLevel then
    --    self.next.text = "+" .. data.equip.stren_lv;
    --else
    --    self.next.text = "+" .. (data.equip.stren_lv + 1);
    --end
    --if self.addedExp then
    --    self.percent.text = data.equip.stren_phase .. "<color=#ffff00>+" .. self.addedExp .. "</color>/" .. currentEquipConfig.exp;
    --else
    --    self.percent.text = data.equip.stren_phase .. "<color=#ffff00>+%s</color>/" .. currentEquipConfig.exp;
    --end


    --self.blood:UpdateCurrentBlood(data.equip.stren_phase,currentEquipConfig.exp);
    --SetSizeDeltaX(self.light.transform, (data.equip.stren_phase / currentEquipConfig.exp) * 274);


end

--@ling autofun
function BeastStrengthPanel:HandleStrengthResult(data)
    local id = data.id;
    local p_item = data.equip;
    local beastData = BeastModel:GetInstance().EmbedEquips[id];

    for k, v in pairs(self.items) do
        if v.data.uid == p_item.uid then
            --v:SetScoreText("强化等级 : " .. p_item.equip.stren_lv);
            v.data = p_item;
        end
    end

    self:RefreshItem(self.preSelectItem);
    self.selectedList = {};
    self:CalcExp();
    if self.preSelectItem then
        self.preSelectItem:Refresh();
    end
    self.model:DelectedEmptyItem();

    --self:InitDefaultSelected(0);
    --self.model:SetItemsByLessQuality(self.model.maxColor - self.model:defaultStrengthColor(), 0);
    self.model:SetItemsByLessQuality(self.model.maxColor - self.model:defaultStrengthColor(), 0);

    --self:SetItemsByLessQuality();
    --GlobalEvent:Brocast(GoodsEvent.SelectItem, BagModel.beast, self.selectall.isOn);
    if self.scrollViewScp then
        self.scrollViewScp:ForceUpdate();
    end
    GlobalEvent:Brocast(GoodsEvent.SelectItem, BagModel.beast, false);
end

function BeastStrengthPanel:SetItemsByLessQuality()
    local color = self.model.maxColor - BeastModel:GetInstance():defaultStrengthColor()
    self.model:SetItemsByLessQuality(color);
end
--@ling autofun
function BeastStrengthPanel:HandleDeleteItems(bagid, uid)
    for k, v in pairs(self.bagItems) do
        if v.data and v.data.uid == uid then
            v:destroy();
            table.remove(self.bagItems, k);
            GameObject.Destroy(self.bagimgs[k].gameObject);
            table.remove(self.bagimgs, k);
        end
    end
end

function BeastStrengthPanel:StopAllSchedules()
    for i = 1, #self.schedules, 1 do
        GlobalSchedule:Stop(self.schedules[i]);
    end
    self.schedules = {};
end

function BeastStrengthPanel:InitDefaultSelected(selectedQuality)
    if self.model:defaultStrengthSelect() == 1 then
        self.selectall.isOn = true;
    else
        self.selectall.isOn = false;
        self.model:SetItemsByLessQuality(self.model.maxColor - self.model:defaultStrengthColor(), selectedQuality or 3);
        if self.scrollViewScp then
            self.scrollViewScp:ForceUpdate();
        end
    end
    self:CalcExp();
end

function BeastStrengthPanel:SetStarNum(num)
    for i = 1, 3 do
        SetGameObjectActive(self.starimgs[i] , false);
    end
    for i = 1, num do
        SetGameObjectActive(self.starimgs[i] , true);
    end
end


--function BeastStrengthPanel:SetAllSelected(bool)
--    bool = toBool(bool);
--    self.selectedList = {};
--    for k, v in pairs(self.bagimgs) do
--        v.enabled = bool;
--    end
--end