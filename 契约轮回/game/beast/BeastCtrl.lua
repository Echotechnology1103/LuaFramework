---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 19/01/02 15:00
---
require('game.beast.RequireBeast')

BeastCtrl = BeastCtrl or class("BeastCtrl", BaseController)
local this = BeastCtrl

function BeastCtrl:ctor()
    BeastCtrl.Instance = self;
    self.model = BeastModel:GetInstance()
    self.events = {};
    self:AddEvents()
    self:RegisterAllProtocal();
end

function BeastCtrl:dctor()
    GlobalEvent:RemoveTabListener(self.events);
end

function BeastCtrl:GetInstance()
    if not BeastCtrl.Instance then
        BeastCtrl()
    end
    return BeastCtrl.Instance;
end

function BeastCtrl:RegisterAllProtocal()
    -- protobuff的模块名字，用到pb一定要写
    self.pb_module_name = "pb_1112_beast_pb";

    self:RegisterProtocal(proto.BEAST_LIST, self.HandleBeastList);
    self:RegisterProtocal(proto.BEAST_ADDSUMMON, self.HandleAddSummon);
    self:RegisterProtocal(proto.BEAST_EQUIP_LOAD, self.HandleEquipLoad);
    self:RegisterProtocal(proto.BEAST_EQUIP_UNLOAD, self.HandleEquipUpLoad);
    self:RegisterProtocal(proto.BEAST_SUMMON, self.HandleSummon);
    self:RegisterProtocal(proto.BEAST_UNSUMMON, self.HandleUnSummon);
    self:RegisterProtocal(proto.BEAST_EQUIP_REINFORCE, self.HandleEquipReinforce);
end

function BeastCtrl:AddEvents()
    AddEventListenerInTab(BeastEvent.BEAST_OPEN, handler(self, self.HandleBeastPanelOpen), self.events);

    AddModelEvent(BagEvent.LoadItemByBagId, handler(self,self.HandleBeastBag) , BagModel:GetInstance());
end

function BeastCtrl:HandleBeastBag(bagid)
    if bagid == BagModel.beast then
        self.model:UpdateReddot();
        self.model:UpdateStengthReddot();
    end
end

function BeastCtrl:GameStart()
    local function step()
        -- 开始游戏请求副本数据
        local mainRoleLevel = RoleInfoModel:GetInstance():GetMainRoleLevel() or 0;
        if Config.db_sysopen["300@1"] then
            local tab = Config.db_sysopen["300@1"];
            if tab.level and tonumber(tab.level) < mainRoleLevel then
                self:RequestBeastList();
                BagController:GetInstance():RequestBagInfo(BagModel.beast);
            end
        end

    end
    self.time_id = GlobalSchedule:StartOnce(step, Constant.GameStartReqLevel.Super)
end


--@ling autofun
function BeastCtrl:HandleBeastPanelOpen(...)
    local jump_param = {...}  -- 跳转参数
    local data = {}
    data.openPanelIndex = jump_param[1]
    lua_panelMgr:GetPanelOrCreate(BeastPanel):Open(data);
end



--以下是协议热更新
--请求神兽列表
function BeastCtrl:RequestBeastList()
    local pb = self:GetPbObject("m_beast_list_tos");
    self:WriteMsg(proto.BEAST_LIST, pb);
end

--处理神兽表列表
function BeastCtrl:HandleBeastList()
    local data = self:ReadMsg("m_beast_list_toc");
    local max_summon = data.max_summon;
    local p_beast_list = data.list;
    BeastModel:GetInstance().max_summon = max_summon;
    for k, v in pairs(p_beast_list) do
        local equips = v.equips;
        local tab = {};
        for k,equip in pairs(equips) do
            local equipConfig = Config.db_beast_equip[equip.id];
            tab[equipConfig.slot] = equip;
        end
        v.equips = tab;
        BeastModel:GetInstance().EmbedEquips[v.id] = v;
    end
    BrocastModelEvent(BeastEvent.BEAST_LIST, nil, data);
end

function BeastCtrl:RequestAddSummon()
    local pb = self:GetPbObject("m_beast_addsummon_tos");
    self:WriteMsg(proto.BEAST_ADDSUMMON, pb);
end

function BeastCtrl:HandleAddSummon()
    local data = self:ReadMsg("m_beast_addsummon_toc");
    local max_summon = data.max_summon;
    BeastModel:GetInstance().max_summon = max_summon;
    BrocastModelEvent(BeastEvent.ADD_MAX_SUMMON);
end

--穿装备
function BeastCtrl:RequestEquipLoad(id, uid)
    local pb = self:GetPbObject("m_beast_equip_load_tos");
    pb.id = id;
    pb.uid = uid;
    self:WriteMsg(proto.BEAST_EQUIP_LOAD, pb);
end

function BeastCtrl:HandleEquipLoad()
    local data = self:ReadMsg("m_beast_equip_load_toc");
    local id = data.id;
    local p_item = data.equip;
    if not BeastModel:GetInstance().EmbedEquips[id] then
        BeastModel:GetInstance().EmbedEquips[id] = ProtoStruct2Lua(self:GetPbObject("p_beast"));--转成table
        BeastModel:GetInstance().EmbedEquips[id].id = id;
        BeastModel:GetInstance().EmbedEquips[id].summon = false;
        BeastModel:GetInstance().EmbedEquips[id].equips = {};
    end
    local equipConfig = Config.db_beast_equip[p_item.id];
    local p_beast = BeastModel:GetInstance().EmbedEquips[id];
    p_beast.equips[equipConfig.slot] = p_item;
    BrocastModelEvent(BeastEvent.BEAST_EQUIP_LOADED, nil, data)
    self.model:UpdateReddot();
end
--卸装备
function BeastCtrl:RequestEquipUnLoad(id, slot)
    local pb = self:GetPbObject("m_beast_equip_unload_tos");
    pb.id = id;
    slot = slot or 0;
    pb.slot = slot;
    self:WriteMsg(proto.BEAST_EQUIP_UNLOAD, pb);
end

function BeastCtrl:HandleEquipUpLoad()
    local data = self:ReadMsg("m_beast_equip_unload_toc");
    local id = data.id;
    local slot = data.slot;

    if slot == 0 then
        if BeastModel:GetInstance().EmbedEquips[id] then
            BeastModel:GetInstance().EmbedEquips[id].equips = {};
        end
    else
        for k, v in pairs(BeastModel:GetInstance().EmbedEquips[id].equips) do
            local equipConfig = Config.db_beast_equip[v.id];
            if equipConfig.slot == slot then
                BeastModel:GetInstance().EmbedEquips[id].equips[k] = nil;
            end
        end
    end
    BrocastModelEvent(BeastEvent.BEAST_EQIUP_UNLOAD, nil, data);
    self.model:UpdateReddot();
end
--助阵
function BeastCtrl:RequestSummon(id)
    local pb = self:GetPbObject("m_beast_summon_tos");
    pb.id = id;
    self:WriteMsg(proto.BEAST_SUMMON, pb);
end

function BeastCtrl:HandleSummon()
    local data = self:ReadMsg("m_beast_summon_toc");
    local id = data.id;
    if BeastModel:GetInstance().EmbedEquips[id] then
        BeastModel:GetInstance().EmbedEquips[id].summon = true;
    end
    BrocastModelEvent(BeastEvent.BEAST_SUMMON, nil, id);
    self.model:UpdateReddot();
end
--召回
function BeastCtrl:RequestUnSummon(id)
    local pb = self:GetPbObject("m_beast_unsummon_tos");
    pb.id = id;

    self:WriteMsg(proto.BEAST_UNSUMMON, pb);
end

function BeastCtrl:HandleUnSummon()
    local data = self:ReadMsg("m_beast_unsummon_toc");
    local id = data.id;
    if BeastModel:GetInstance().EmbedEquips[id] then
        BeastModel:GetInstance().EmbedEquips[id].summon = false;
    end
    BrocastModelEvent(BeastEvent.BEAST_UNSUMMON, nil, id);
    self.model:UpdateReddot();
end
--装备强化
function BeastCtrl:RequestEquipReinforce(id, item_id, uids, use_gold)
    local pb = self:GetPbObject("m_beast_equip_reinforce_tos");
    pb.id = id;
    pb.uid = item_id;
    for i = 1, #uids, 1 do
        pb.cellids:append(uids[i]);
    end
    pb.use_gold = toBool(use_gold);
    self:WriteMsg(proto.BEAST_EQUIP_REINFORCE, pb);
end

function BeastCtrl:HandleEquipReinforce()
    BeastModel:GetInstance().ItemsUid = {}
    local data = self:ReadMsg("m_beast_equip_reinforce_toc");
    local id = data.id;
    local p_item = data.equip;
    if BeastModel:GetInstance().EmbedEquips[id] then
        local equipConfig = Config.db_beast_equip[p_item.id];
        local equips = BeastModel:GetInstance().EmbedEquips[id].equips;
        BeastModel:GetInstance().EmbedEquips[id].equips[equipConfig.slot] = p_item;
    end
    BrocastModelEvent(BeastEvent.BEAST_STRENGTH, nil, data);
end
--local p_beast {
--    required int32      id      = 1;
--    repeated p_item     equips  = 2;
--    required bool       summon  = 3; //是否助阵
--}