---魔法卡融合页
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 18/12/04 16:10
---
MagicCardCombinePanel = MagicCardCombinePanel or class("MagicCardCombinePanel", BaseItem)
local this = MagicCardCombinePanel

MagicCardCombinePanel.isEnoughMat = false;

function MagicCardCombinePanel:ctor(parent_node)
    self.abName = "magiccard";
    self.image_ab = "magiccard_image";
    self.assetName = "MagicCardCombinePanel";
    self.layer = "UI";

    self.model = CardModel.GetInstance()
    self.events = {};
    self.schedules = {};
    self.isEnoughMat = false;
    self.targetCard = nil;
    MagicCardCombinePanel.super.Load(self);
end

function MagicCardCombinePanel:dctor()
    self.model = nil;

    GlobalEvent:RemoveTabListener(self.events);
    self.selectedItemIndex = 1;
    self:StopAllSchedules()

    destroyTab(self.items);
    self.items = {};

    if self.left_menu then
        self.left_menu:destroy();
    end
    self.targetCard = nil;
    self.isEnoughMat = false;
    self.currentFirstID = nil;
    self.currentSubID = nil;

    if self.goodsDetailView then
        self.goodsDetailView:destroy();
    end
    self.currentConfig = nil;

    if self.card2 then
        self.card2:destroy();
    end
    self.card2 = nil;

    if self.card3 then
        self.card3:destroy();
    end
    self.card3 = nil;

    self.values = nil;
end

function MagicCardCombinePanel:Open(data)
    self.data = data;
    WindowPanel.Open(self)
end

function MagicCardCombinePanel:LoadCallBack()
    self.nodes = {
        "wen", "card", "combine_btn", "v/value_1", "v/value_3", "left_bg", "v/value_2", "v/value_4", "mat/text_1", "mat/text_2", "mat/icon_1", "mat/icon_3", "mat/icon_2", "mat/text_3",

        "mat/card_2", "mat/card_3", "card_name_bg_1", "card_name_bg_2", "target_card_name", "card_name_bg_3",
    }
    self:GetChildren(self.nodes)

    SetLocalPosition(self.transform, 0, 0, 0)

    self:InitUI();

    self:AddEvent();
end

function MagicCardCombinePanel:InitUI()
    self.values = {};
    for i = 1, 4, 1 do
        self.values[i] = GetText(self["value_" .. i]);
        SetGameObjectActive(self.values[i], false);
    end
    --self.value_1 = GetText(self.value_1);
    --self.value_2 = GetText(self.value_2);
    --self.value_3 = GetText(self.value_3);
    --self.value_4 = GetText(self.value_4);

    self.icon_1 = GetImage(self.icon_1);
    --self.icon_2 = GetImage(self.icon_2);
    --self.icon_3 = GetImage(self.icon_3);

    self.text_1 = GetText(self.text_1);
    self.text_2 = GetText(self.text_2);
    self.text_3 = GetText(self.text_3);

    self.combine_btn = GetButton(self.combine_btn);

    self.target_card_name = GetText(self.target_card_name);

    self:InitLeftMenu();
end

function MagicCardCombinePanel:InitLeftMenu()
    local firstdata = {};
    local subdata = {};

    for i = 1, #CardModel:GetInstance().combineData, 1 do
        if not firstdata[i] then
            firstdata[i] = {};
        end
        firstdata[i] = { i, CardModel:GetInstance().combineData[i][1].name };
        local subtab = CardModel:GetInstance().combineData[i];
        for j = 1, #subtab, 1 do
            if not subdata[i] then
                subdata[i] = {};
            end
            local tab = subtab[j];
            subdata[i][j] = { tab.sub_type_id, tab.sname };
        end
    end

    self.left_menu = FoldMenu(self.left_bg.transform, nil, self);
    self.left_menu:SetData(firstdata, subdata, 1);
    self.left_menu:SetDefaultSelected(1, 1);
    self.left_menu:SetViewSize(263, 510);
    self:HandleLeftMenuClick(1, 1);
end

function MagicCardCombinePanel:AddEvent()
    AddClickEvent(self.combine_btn.gameObject, handler(self, self.HandleCombine));

    GlobalEvent.AddEventListenerInTab(CombineEvent.LeftSecondMenuClick .. self.__cname, handler(self, self.HandleLeftMenuClick), self.events);
    AddEventListenerInTab(CardEvent.CARD_COMBINE, handler(self, self.HandleCombineRefresh), self.events);

    AddClickEvent(self.icon_1.gameObject, handler(self, self.HandleTip));
    AddClickEvent(self.icon_2.gameObject, handler(self, self.HandleTip));
    AddClickEvent(self.icon_3.gameObject, handler(self, self.HandleTip));
    AddClickEvent(self.card.gameObject, handler(self, self.HandleTip));

    AddClickEvent(self.wen.gameObject, handler(self, self.HandleWen));
end

function MagicCardCombinePanel:HandleTip(go, x, y)
    if self.currentFirstID and self.currentSubID then
        local combineConfig = CardModel.GetInstance().combineData[self.currentFirstID][self.currentSubID];
        if combineConfig then
            if go == self.icon_1.gameObject then
                local tab = String2Table(combineConfig.cost);
                if #tab > 1 then
                    local itemConfig = Config.db_item[tab[1]];
                    if itemConfig then
                        if self.goodsDetailView then
                            self.goodsDetailView:destroy();
                        end
                        local param = {}
                        param["cfg"] = itemConfig
                        self.goodsDetailView = GoodsTipView(self.transform)
                        self.goodsDetailView:ShowTip(param)
                        self.goodsDetailView:SetOrderByParentMax();
                        --param["p_item"] = self.p_item
                        --param["model"] = self.model
                        --param["operate_param"] = self.operate_param

                        --self.goodsDetailView = GoodsDetailView(self.parent or self.transform);
                        --self.goodsDetailView:UpdateInfoByItemId(itemConfig.id);

                    end
                end
            elseif go == self.icon_2.gameObject then
                local itemConfig = Config.db_item[combineConfig.c_item_id1];
                if itemConfig then
                    if self.goodsDetailView then
                        self.goodsDetailView:destroy();
                    end
                    --self.goodsDetailView = GoodsDetailView(self.parent or self.transform);
                    --self.goodsDetailView:UpdateInfoByItemId(itemConfig.id);
                    --self.goodsDetailView:SetOrderByParentMax();
                    local param = {}
                    param["cfg"] = itemConfig
                    self.goodsDetailView = GoodsTipView(self.transform)
                    self.goodsDetailView:ShowTip(param)
                    self.goodsDetailView:SetOrderByParentMax();
                end
            elseif go == self.icon_3.gameObject then
                local itemConfig = Config.db_item[combineConfig.c_item_id2];
                if itemConfig then
                    if self.goodsDetailView then
                        self.goodsDetailView:destroy();
                    end
                    --self.goodsDetailView = GoodsDetailView(self.parent or self.transform);
                    --self.goodsDetailView:UpdateInfoByItemId(itemConfig.id);
                    --self.goodsDetailView:SetOrderByParentMax();
                    local param = {}
                    param["cfg"] = itemConfig
                    self.goodsDetailView = GoodsTipView(self.transform)
                    self.goodsDetailView:ShowTip(param)
                    self.goodsDetailView:SetOrderByParentMax();
                end
            else
                if self.targetCard then
                    local itemConfig = Config.db_item[self.targetCard.data.id];
                    if itemConfig then
                        if self.goodsDetailView then
                            self.goodsDetailView:destroy();
                        end
                        --self.goodsDetailView = GoodsDetailView(self.parent or self.transform);
                        --self.goodsDetailView:UpdateInfoByItemId(itemConfig.id);
                        --self.goodsDetailView:SetOrderByParentMax();
                        local param = {}
                        param["cfg"] = itemConfig
                        self.goodsDetailView = GoodsTipView(self.transform)
                        self.goodsDetailView:ShowTip(param)
                        self.goodsDetailView:SetOrderByParentMax();
                    end
                end

            end
        end
    end
end

function MagicCardCombinePanel:HandleWen(go, x, y)
    ShowHelpTip(HelpConfig.MAGIC_CARD.HowToFuck, true);
end

--@ling autofun
function MagicCardCombinePanel:HandleCombine(go, x, y)
    --检查各种条件
    if not self.isEnoughMat then
        Notify.ShowText("Not enough material");
        return ;
    end
    local cardConfig = Config.db_magic_card[self.currentConfig.r_item_id];
    local data = DungeonModel:GetInstance().dungeon_info_list[enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MAGICTOWER];
    if data and data.info and cardConfig then
        local curFloor = tonumber(data.info.cur_floor);
        if tonumber(cardConfig.gate) > curFloor then
            Notify.ShowText("You need to clear" .. cardConfig.gate .. "To combine, current:" .. curFloor .. "Floor");
            return ;
        end
    end
    MagicCardCtrl:GetInstance():RequestCardCombine(self.currentConfig.r_item_id);
end

--@ling autofun
function MagicCardCombinePanel:HandleCombineRefresh()
    Notify.ShowText("Combination successful");
    self:HandleLeftMenuClick(self.currentFirstID, self.currentSubID);
end

--@ling autofun
function MagicCardCombinePanel:HandleLeftMenuClick(firtstID, subID)
    self.currentFirstID = firtstID;
    self.currentSubID = subID;
    self.isEnoughMat = false;
    if CardModel.GetInstance().combineData[firtstID] then
        if CardModel.GetInstance().combineData[firtstID][subID] then
            local combineConfig = CardModel.GetInstance().combineData[firtstID][subID];
            self.currentConfig = combineConfig;
            local tab = String2Table(combineConfig.cost);
            if #tab > 1 then
                self:SetIconImage(self.icon_1, tab[1]);--90010014
                local num = CardModel:GetInstance().Value3;
                if num >= tab[2] then
                    self.text_1.text = num .. "/" .. tab[2];
                else
                    self.text_1.text = "<color=#ff0000>" .. num .. "</color>/" .. tab[2];
                end

                if num >= tonumber(tab[2]) then
                    self.isEnoughMat = true;
                end
            end

            --self:SetIconImage(self.icon_2, combineConfig.c_item_id1);
            local card2Config = Config.db_magic_card[combineConfig.c_item_id1];
            if self.card2 then
                self.card2:destroy();
                self.card2 = nil;
            end
            if card2Config then
                self.card2 = CardIcon(self.icon_2.transform, card2Config);
            end
            local num1 = CardModel:GetInstance():GetItemNumByItemID(combineConfig.c_item_id1) + CardModel:GetInstance():GetEmbedNumByItemID(combineConfig.c_item_id1);
            if num1 > 0 then
                self.text_2.text = "Owned: " .. num1;
            else
                self.text_2.text = "Owned: <color=#ff0000>" .. num1 .. "</color>";
            end


            --self:SetIconImage(self.icon_3, combineConfig.c_item_id2);
            local card3Config = Config.db_magic_card[combineConfig.c_item_id2];
            if self.card3 then
                self.card3:destroy();
                self.card3 = nil;
            end
            if card3Config then
                self.card3 = CardIcon(self.icon_3.transform, card3Config);
            end
            local num2 = CardModel:GetInstance():GetItemNumByItemID(combineConfig.c_item_id2) + CardModel:GetInstance():GetEmbedNumByItemID(combineConfig.c_item_id2);
            if num2 > 0 then
                self.text_3.text = "Owned: " .. num2;
            else
                self.text_3.text = "Owned: <color=#ff0000>" .. num2 .. "</color>";
            end

            if num1 > 0 and num2 > 0 and self.isEnoughMat then
                self.isEnoughMat = true
            else
                self.isEnoughMat = false;
            end

            if self.targetCard then
                self.targetCard:destroy();
            end
            local cardConfig = Config.db_magic_card[combineConfig.r_item_id];
            self.targetCard = MagicCard(self.card, cardConfig);
            self.targetCard:ShowCardLV(false);
            self.targetCard:ShowCardName(false);
            self.targetCard:ShowStars(true);

            local data = DungeonModel:GetInstance().dungeon_info_list[enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MAGICTOWER];
            if data and data.info then
                local curFloor = tonumber(data.info.cur_floor);
                if tonumber(cardConfig.gate) > curFloor then
                    self.targetCard:SetCardLock(cardConfig.gate);
                end
            end


            self.target_card_name.text = cardConfig.name;
            local itemConfig = Config.db_item[cardConfig.id];
            if itemConfig then
                SetColor(self.target_card_name, HtmlColorStringToColor("#" .. ColorUtil.GetColor2(itemConfig.color)));
            end

            for i = 1, #self.values do
                SetGameObjectActive(self.values[i].gameObject, false);
            end

            local index = 1;
            local base = String2Table(cardConfig.base);
            local best = String2Table(cardConfig.rare);
            for k, v in pairs(base) do
                --self.labels[index].text = PROP_ENUM[v[1]].label .. ":";
                if v[1] >= 13 then
                    self.values[index].text = PROP_ENUM[v[1]].label .. "+" .. GetPreciseDecimal(tonumber(v[2]) / 100, 2) .. "%";
                else
                    self.values[index].text = PROP_ENUM[v[1]].label .. "+" .. tostring(v[2]);
                end

                SetGameObjectActive(self.values[index].gameObject, true);

                index = index + 1;
            end
            for k, v in pairs(best) do
                --self.labels[index].text = PROP_ENUM[v[1]].label .. ":";
                if v[1] >= 13 then
                    self.values[index].text = PROP_ENUM[v[1]].label .. "+" .. GetPreciseDecimal(tonumber(v[2]) / 100, 2) .. "%";
                else
                    self.values[index].text = PROP_ENUM[v[1]].label .. "+" .. tostring(v[2]);
                end

                SetGameObjectActive(self.values[index].gameObject, true);

                index = index + 1;
            end

        end
    end
end

function MagicCardCombinePanel:SetIconImage(iconImg, item_id)
    local itemConfig = Config.db_item[item_id];
    if not itemConfig then
        Notify.ShowText("Failed to find the indicated configuration" .. item_id);
        return ;
    end
    local abName = GoodIconUtil.GetInstance():GetABNameById(itemConfig.icon);
    abName = "iconasset/" .. abName;
    lua_resMgr:SetImageTexture(self, iconImg, abName, tostring(itemConfig.icon), false);
end

function MagicCardCombinePanel:StopAllSchedules()
    for i = 1, #self.schedules, 1 do
        GlobalSchedule:Stop(self.schedules[i]);
    end
    self.schedules = {};
end