---魔法卡分解页
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 18/12/04 16:10
---

MagicCardDecomposePanel = MagicCardDecomposePanel or class("MagicCardDecomposePanel", BaseItem)
local this = MagicCardDecomposePanel

function MagicCardDecomposePanel:ctor(parent_node)
    self.abName = "magiccard";
    self.image_ab = "magiccard_image";
    self.assetName = "MagicCardDecomposePanel"
    self.layer = "UI"
    self.items = {};
    self.selectedItems = {};

    self.model = CardModel.GetInstance()
    self.events = {};
    self.schedules = {};
    self.separate_frame_schedule_id = nil
    MagicCardDecomposePanel.super.Load(self);
end

function MagicCardDecomposePanel:dctor()
    self.model = nil;

    GlobalEvent:RemoveTabListener(self.events);
    self:StopAllSchedules()

    destroyTab(self.items);
    self.items = {};

    self.selectedItems = {};

    if self.empty_girl then
        self.empty_girl:destroy();
    end
    self.empty_girl = nil;

    self.togs = nil;

    if self.separate_frame_schedule_id then
        GlobalSchedule:Stop(self.separate_frame_schedule_id)
        self.separate_frame_schedule_id = nil
    end
end

function MagicCardDecomposePanel:Open(data)
    self.data = data;
    WindowPanel.Open(self)
end

function MagicCardDecomposePanel:LoadCallBack()
    self.nodes = {
        "ScrollView/Viewport/Content", "prop/stone_text_1", "prop/stone_text_2", "prop/stone_text_3", "prop/stone_add_text_1",
        "decopose_btn", "t/tog_2", "t/tog_3", "t/tog_4", "prop/stone_add_text_2", "prop/stone_add_text_3", "full_auto_tog", "t/tog_1",
        "prop/stonecenter",
    }
    self:GetChildren(self.nodes);

    SetLocalPosition(self.transform, 0, 0, 0);

    self:InitUI();

    self:AddEvent();
end

function MagicCardDecomposePanel:InitUI()
    self.full_auto_tog = GetToggle(self.full_auto_tog);
    self.full_auto_tog.isOn = CardModel:GetInstance().autoBag == 1;
    self.togs = {};
    for i = 1, 4, 1 do
        self.togs[i] = GetToggle(self["tog_" .. i]);
        self.togs[i].isOn = false;
    end
    for k, v in pairs(CardModel:GetInstance().selectedColor) do
        if self.togs[v] then
            self.togs[v].isOn = true;
        end
    end
   -- self:SetColorSelected(CardModel:GetInstance().selectedColor)

    self.stonecenter = GetImage(self.stonecenter);

    local localPos = self.stonecenter.transform.localPosition;

    local moveAction = cc.MoveTo(1, localPos.x, localPos.y - 4, localPos.z)
    local moveAction1 = cc.MoveTo(1, localPos.x, localPos.y + 4, localPos.z)
    local action = cc.Sequence(moveAction, moveAction1)
    local action2 = cc.RepeatForever(action)
    cc.ActionManager:GetInstance():addAction(action2, self.stonecenter.transform);

    self.decopose_btn = GetButton(self.decopose_btn);
    self.stone_text_1 = GetText(self.stone_text_1);
    self.stone_text_2 = GetText(self.stone_text_2);
    self.stone_text_3 = GetText(self.stone_text_3);

    self.stone_text_1.text = tostring(CardModel:GetInstance().Value1);
    self.stone_text_2.text = tostring(CardModel:GetInstance().Value2);
    self.stone_text_3.text = tostring(CardModel:GetInstance().Value3);

    self.stone_add_text_1 = GetText(self.stone_add_text_1);
    self.stone_add_text_2 = GetText(self.stone_add_text_2);
    self.stone_add_text_3 = GetText(self.stone_add_text_3);

    self.stone_add_text_1.text = "+0";
    self.stone_add_text_2.text = "+0";
    self.stone_add_text_3.text = "+0";

    self:InitCards();

    self:HandleTog();
end

function MagicCardDecomposePanel:InitCards()
--[[     local tab = GetSortedBagCardList2();--CardModel.GetInstance().items;
    self.selectedItems = {};
    destroyTab(self.items);
    self.items = {};
    local index = 1;
    --for k,v in pairs(tab) do
    for i = 1, #tab, 1 do
        local carditem = MagicCardItem(self.Content.transform, tab[i], handler(self, self.HandleCardItemClick));
        self.items[i] = carditem;
        carditem:ShowOwn(false);
        carditem:ShowCardLV(true);
        index = index + 1;
        --local itemConfig = Config.db_item[tab[i].id];
        --if itemConfig and itemConfig.color <= 3 then
        --    --白绿蓝默认选中
        --    self.items[i]:SetSelected(true);
        --    table.insert(self.selectedItems, self.items[i]);
        --end
    end
    local rt = GetRectTransform(self.Content);
    rt.sizeDelta = Vector2(rt.sizeDelta.x, math.ceil(#tab / 4) * 200);

    if index == 1 then
        self.empty_girl = EmptyGirl(self.transform, "你没有可分解的魔法卡");
        self.empty_girl:SetPos(-80, -40, 0);
    end

    self:CountDecompose(); ]]

    --分帧实例化
    self.selectedItems = {};
    destroyTab(self.items);
    self.items = {};
    self:SeparateFrameInstantia(GetSortedBagCardList2())
end

function MagicCardDecomposePanel:SeparateFrameInstantia(tab)
    local num = #tab
    if num <= 0 then
        self.empty_girl = EmptyGirl(self.transform, "You don't have magic cards to dismantle");
        self.empty_girl:SetPos(-80, -40, 0);
		return
	end

	local function op_call_back(cur_frame_count,cur_all_count)
		local carditem = MagicCardItem(self.Content.transform, tab[cur_all_count], handler(self, self.HandleCardItemClick));
        self.items[cur_all_count] = carditem;
        carditem:ShowOwn(false);
        carditem:ShowCardLV(true);
	end
	local function all_frame_op_complete()
		self:SeparateFrameInstantiaComplete()
        self:HandleTog();
	end

	self.separate_frame_schedule_id =  SeparateFrameUtil.SeparateFrameOperate(op_call_back,nil,2,num,nil,all_frame_op_complete)
end

function MagicCardDecomposePanel:SeparateFrameInstantiaComplete(  )
    self.separate_frame_schedule_id = nil
    self:CountDecompose();
end

function MagicCardDecomposePanel:CountDecompose()
    local added = {};
    added[CardModel.STONE_ID.STONE_1] = 0;
    added[CardModel.STONE_ID.STONE_2] = 0;
    added[CardModel.STONE_ID.STONE_3] = 0;
    for k, v in pairs(self.selectedItems) do
        local cardConfig = Config.db_magic_card[v.data.id];
        local gain = String2Table(cardConfig.gain);
        for k1, v1 in pairs(gain) do
            local tab = v1;
            if tab[1] == CardModel.STONE_ID.STONE_1 or tab[1] == CardModel.STONE_ID.STONE_2 or tab[1] == CardModel.STONE_ID.STONE_3 then
                added[tab[1]] = added[tab[1]] + tab[2];
            end
        end
        local key = v.data.id .. "@" .. (v.data.extra or 1);
        local cardConfig2 = Config.db_magic_card_strength[key];
        if cardConfig2 then
            local gain = String2Table(cardConfig2.total_cost);
            gain = { gain };
            for k1, v1 in pairs(gain) do
                local tab = v1;
                if tab[1] == CardModel.STONE_ID.STONE_1 or tab[1] == CardModel.STONE_ID.STONE_2 or tab[1] == CardModel.STONE_ID.STONE_3 then
                    added[tab[1]] = added[tab[1]] + tab[2];
                end
            end
        end
    end
    self.stone_add_text_1.text = "+" .. added[CardModel.STONE_ID.STONE_1];
    self.stone_add_text_2.text = "+" .. added[CardModel.STONE_ID.STONE_2];
    self.stone_add_text_3.text = "+" .. added[CardModel.STONE_ID.STONE_3];
end

function MagicCardDecomposePanel:AddEvent()
    AddClickEvent(self.decopose_btn.gameObject, handler(self, self.HandleDecompose));
    for i = 1, #self.togs, 1 do
        AddValueChange(self.togs[i].gameObject, handler(self, self.HandleTog, self.togs[i]));
    end
    AddValueChange(self.full_auto_tog.gameObject, handler(self, self.SaveTog));

    AddEventListenerInTab(CardEvent.CARD_DECOMPOSE, handler(self, self.HandleDecomposeRefresh), self.events);
end

--@ling autofun
function MagicCardDecomposePanel:HandleDecomposeRefresh()
    self.stone_text_1.text = tostring(CardModel:GetInstance().Value1);
    self.stone_text_2.text = tostring(CardModel:GetInstance().Value2);
    self.stone_text_3.text = tostring(CardModel:GetInstance().Value3);
    self:InitCards();
end
--@ling autofun
function MagicCardDecomposePanel:SaveTog(go, bool)
    local bag = self.full_auto_tog.isOn and 1 or 0;
    local selectedColors = {};
    for i = 1, #(self.togs), 1 do
        selectedColors[i] = self.togs[i].isOn;
    end
    MagicCardCtrl:GetInstance():RequestDecomposeSet(bag, selectedColors)
end

--@ling autofun
function MagicCardDecomposePanel:HandleTog(go, bool, tog)
    local selectedColors = { [1] = true };
    for i = 1, #self.togs, 1 do
        selectedColors[(i + 1)] = self.togs[i].isOn;
        --if v == tog then
        --if bool then
        --    self:SetColorSelected((k + 1));--把k转换为color
        --else
        --    self:SetColorSelected((k + 1));--把k转换为color
        --end
        --end
    end
    self:SetColorSelected(selectedColors);
    if go then
        --真实点击才保存
        self:SaveTog();
    end

end
MagicCardDecomposePanel.defaultSelect = {
    [20001] = true,
    [20002] = true,
    [20003] = true,
    [20004] = true,
    [20005] = true,
    [20006] = true,
}
function MagicCardDecomposePanel:SetColorSelected(colors)
    self.selectedItems = {};
    for k, v in pairs(self.items) do
        v:SetSelected(false);
        local itemConfig = Config.db_item[v.data.id];
        local cardConfig = Config.db_magic_card[v.data.id];
        if (itemConfig and colors[itemConfig.color]) or itemConfig.color <= 1 or cardConfig.slot == 0 then
            --MagicCardDecomposePanel.defaultSelect[v.data.id]
            v:SetSelected(true);
            table.removebyvalue(self.selectedItems, v);
            table.insert(self.selectedItems, v);
        end
    end
    self:CountDecompose();
end

function MagicCardDecomposePanel:HandleCardItemClick(item)
    item:SetSelected(not item.isselected);
    if item.isselected then
        local b = table.indexof(self.selectedItems, item);
        if not b then
            table.insert(self.selectedItems, item);
        end
    else
        table.removebyvalue(self.selectedItems, item);
    end

    self:CountDecompose();
end

--@ling autofun
function MagicCardDecomposePanel:HandleDecompose(go, x, y)
    if self.selectedItems and #self.selectedItems > 0 then
        local uidTab = {};
        local isPrecious = false;
        table.sort(self.selectedItems, function(item1, item2)
            return item1.data.id > item2.data.id;
        end)
        local decomposeTab = {};
        for i = 1, #self.selectedItems, 1 do
            local item = self.selectedItems[i];
            local cardData = item.data;
            if cardData then
                table.insert(uidTab, cardData.uid);

                local color = GetCardColor(cardData);

                if color >= enum.COLOR.COLOR_ORANGE and GetCardstype(cardData) ~= 10012 then
                    isPrecious = true;
                end
                if IsFusionCard(cardData.id) then
                    isPrecious = true;
                end
                local gain = LString2Table(Config.db_magic_card[cardData.id].gain);
                for k1, v1 in pairs(gain) do
                    local key = v1[1];
                    local value = v1[2];
                    decomposeTab[key] = decomposeTab[key] or 0;
                    decomposeTab[key] = decomposeTab[key] + value;
                end
            end
        end
        local ok_fun = function()
            MagicCardCtrl:GetInstance():RequestCardDecompose(uidTab);
        end

        if isPrecious then
            local decomposeStr = "";
            if decomposeTab[enum.ITEM.ITEM_MC_FUSE] and decomposeTab[enum.ITEM.ITEM_MC_FUSE] ~= 0 then
                decomposeStr = string.format("%s X %s,%s", enumName.ITEM[enum.ITEM.ITEM_MC_FUSE], decomposeTab[enum.ITEM.ITEM_MC_FUSE], decomposeStr);
            end
            if decomposeTab[enum.ITEM.ITEM_MC_EXCH] and decomposeTab[enum.ITEM.ITEM_MC_EXCH] ~= 0 then
                decomposeStr = string.format("%s X %s,%s", enumName.ITEM[enum.ITEM.ITEM_MC_EXCH], decomposeTab[enum.ITEM.ITEM_MC_EXCH], decomposeStr);
            end
            if decomposeTab[enum.ITEM.ITEM_MC_EXP] and decomposeTab[enum.ITEM.ITEM_MC_EXP] ~= 0 then
                decomposeStr = string.format("%s X %s,%s", enumName.ITEM[enum.ITEM.ITEM_MC_EXP], decomposeTab[enum.ITEM.ITEM_MC_EXP], decomposeStr);
            end

            decomposeTab[enum.ITEM.ITEM_MC_EXP] = nil;
            decomposeTab[enum.ITEM.ITEM_MC_EXCH] = nil;
            decomposeTab[enum.ITEM.ITEM_MC_FUSE] = nil;
            local otherstr = "";
            for k2, v2 in pairs(decomposeTab) do
                local cardConfig = Config.db_magic_card[k2];
                if cardConfig then
                    local color = GetCardColor(cardConfig);
                    local colorStr = ColorUtil.GetColor(color)
                    otherstr = string.format("<color=#%s>%s</color> X %s ,%s", colorStr, cardConfig.name, v2, otherstr);
                end
            end
            local all = "You are dismantling one or more rare soul cards, after dismantling, you will get:" .. otherstr .. decomposeStr .. "Proceed?";
            --print2(decomposeStr);
            Dialog.ShowTwo("Tip", all, "Confirm", ok_fun, nil, "Cancel", nil, nil);
            --
            --for i = 1, #self.selectedItems, 1 do
            --
            --end

        else
            ok_fun();
        end
    else
        Notify.ShowText("No card is available for dismantling")
    end
end

function MagicCardDecomposePanel:StopAllSchedules()
    for i = 1, #self.schedules, 1 do
        GlobalSchedule:Stop(self.schedules[i]);
    end
    self.schedules = {};
end

