---魔法卡卡片UI
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 18/12/04 16:18
---
MagicCardItem = MagicCardItem or class("MagicCardItem", BaseItem)
local this = MagicCardItem

--[[
cardData = {

}
]]


function MagicCardItem:ctor(parent_node, cardData, clickCall_back)
    self.abName = "magiccard";
    self.image_ab = "magiccard_image";
    self.assetName = "card_item";
    self.layer = "UI";
    self.gameobjectactive = true;
    self.data = cardData;
    self.clickCall_back = clickCall_back;

    self.model = CardModel.GetInstance();
    self.events = {};
    self.schedules = {};
    MagicCardItem.super.Load(self);
end

function MagicCardItem:dctor()
    self.model = nil;

    GlobalEvent:RemoveTabListener(self.events);
    self:StopAllSchedules()

    if self.card then
        self.card:destroy();
    end
    self.card = nil;
    self.values = nil;
    self.texts = nil;
end

function MagicCardItem:LoadCallBack()
    self.nodes = {
        "selected", "cardcon", "item_bg", "ScrollView/Viewport/Content", "ScrollView";

        "value_1", "value_1/text", "own_prop", "nolabel",
    }
    self:GetChildren(self.nodes)

    SetLocalPosition(self.transform, 0, 0, 0)

    self:InitUI();

    --self.item_bg = GetImage(self.item_bg);

    self:AddEvent();
    self:SetGameObjectActive(self.gameobjectactive);
end

function MagicCardItem:InitUI()
    self.selected = GetImage(self.selected);
    self.values = {};
    self.texts = {};
    for i = 1, 4 do
        --local value = newObject(self.value_1);
        --self.values[i] = value;
        --self.texts[i] = GetText(GetChild(value.transform, "text"));
        --if i > 1 then
        --    SetGameObjectActive(self.values[i].gameObject, false);
        --end
    end

    self.own_prop = GetImage(self.own_prop);
    SetGameObjectActive(self.own_prop, false);
    self.ScrollView = GetScrollRect(self.ScrollView)
    --self.item_bg = GetText(self.item_bg);

    self.selected = GetImage(self.selected);

    if self.data then
        self:InitData();
    end

    self:SetSelected(self.isselected);

    if self.showown ~= nil then
        self:ShowOwn(self.showown);
    end
end

function MagicCardItem:AddEvent()
    AddClickEvent(self.gameObject, handler(self, self.HandleClick));
end

function MagicCardItem:InitData()
    local cardConfig = Config.db_magic_card[self.data.id];
    self.card = CardIcon(self.cardcon, cardConfig);
    self.card.cardData = self.data;
    if self.data.extra or self.isShowCardlv then
        self.card:ShowCardLV(self.isShowCardlv);
        self.card:SetCardLv(self.data.extra or 1);
    else
        self.card:ShowCardLV(false);
    end

    if self.isShowCardlv ~= nil then
        self:ShowCardLV(self.isShowCardlv);
    end

    local base = String2Table(cardConfig.base);
    local best = String2Table(cardConfig.rare);
    for k, v in pairs(best) do
        table.insert(base, v);
    end
    local index = 1;
    local len = #base;
    for k, v in pairs(base) do
        local value = newObject(self.value_1);
        self.values[index] = value;
        self.texts[index] = GetText(GetChild(value.transform, "text"));

        if index > 1 then
            SetGameObjectActive(self.values[index].gameObject, false);
        end

        if tonumber(v[1]) > 12 then
            self.texts[index].text = PROP_ENUM[v[1]].label .. ":" .. GetPreciseDecimal(tonumber(v[2]) / 100, 2) .. "%";
        else
            self.texts[index].text = PROP_ENUM[v[1]].label .. ":" .. tostring(v[2]);
        end
        SetGameObjectActive(self.values[index].gameObject, true);
        --if len > 2 then
        self.values[index].transform:SetParent(self.Content.transform);
        SetLocalScale(self.texts[index].transform, 1, 1, 1);
        SetLocalScale(self.values[index].transform, 1, 1, 1);
        --end

        index = index + 1;

        SetLocalPositionZ(value.transform,0)
    end
    if index > 2 then
        --self.ScrollView.enabled = true;
        self.ScrollView.vertical = true;
        SetGameObjectActive(self.nolabel, false);
    else
        --self.ScrollView.enabled = false;
        self.ScrollView.vertical = false;
        SetGameObjectActive(self.nolabel, true);
    end
    SetGameObjectActive(self.value_1, false);
    local rt = GetRectTransform(self.Content);
    rt.sizeDelta = Vector2(rt.sizeDelta.x, len * 22);
    rt.anchoredPosition = Vector2(0, 0);
end

function MagicCardItem:UpdateData(data)
    self.data = data;
    if self.data and self.is_loaded then
        self:InitData();
    end
end

--@ling autofun
function MagicCardItem:HandleClick(go, x, y)
    if self.clickCall_back then
        self.clickCall_back(self);
    else
        print2("MagicCardItem no callback");
    end

end
MagicCardItem.isselected = false;
function MagicCardItem:SetSelected(bool)
    bool = toBool(bool);
    self.isselected = bool;
    if self.selected then
        self.selected.gameObject:SetActive(bool);
    end
end

function MagicCardItem:SetGameObjectActive(bool)
    bool = toBool(bool);
    self.gameobjectactive = bool;
    if self.gameObject then
        SetGameObjectActive(self.gameObject, bool);
    end
end

function MagicCardItem:StopAllSchedules()
    for i = 1, #self.schedules, 1 do
        GlobalSchedule:Stop(self.schedules[i]);
    end
    self.schedules = {};
end

function MagicCardItem:ShowOwn(bool)
    bool = toBool(bool);
    self.showown = bool;
    if self.own_prop then
        SetGameObjectActive(self.own_prop, bool);
    end
end

function MagicCardItem:ShowCardLV(bool)
    if self.card then
        self.card:ShowCardLV(bool);
    else
        self.isShowCardlv = toBool(bool);
    end
end