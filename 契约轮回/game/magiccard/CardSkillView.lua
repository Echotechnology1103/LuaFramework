---魔法卡技能树
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 18/12/05 16:57
---
CardSkillView = CardSkillView or class("CardSkillView", BaseItem);
local this = CardSkillView

function CardSkillView:ctor(parent_node)
    self.abName = "magiccard";
    self.image_ab = "magiccard_image";
    self.assetName = "CardSkillView";
    self.layer = "TOP"
    self.model = CardModel.GetInstance()
    self.events = {};
    self.schedules = {};

    self.items = {};
    CardSkillView.super.Load(self)
end

function CardSkillView:dctor()
    GlobalEvent:RemoveTabListener(self.events);
    if self.schedule then
        GlobalSchedule:Stop(self.schedule);
    end

    destroyTab(self.items);
    self.items = nil;
    self:DestroyEffect();
end
function CardSkillView:DestroyEffect()
    if  self.effect then
        self.effect:destroy();
    end
    self.effect = nil;
end

function CardSkillView:LoadCallBack()
    self.nodes = {
        "close_btn", "skill_title", "bg", "Scroll View/Viewport/Content", "skill_item",
        "lines", "lines/line3", "lines/line1", "lines/line2",
    }
    self:GetChildren(self.nodes)

    SetLocalPosition(self.transform, 0, 0, 0);

    self:InitUI();

    self:AddEvents();

    AddBgMask(self.gameObject, 20, 20, 20, 185);
    --self:SetOrderByParentMax();
end

function CardSkillView:InitUI()
    self.close_btn = GetImage(self.close_btn);

    self.lines = {};

    self.line1 = GetImage(self.line1);
    self.lines[1] = self.line1;
    self.line2 = GetImage(self.line2);
    self.lines[2] = self.line2;
    self.line3 = GetImage(self.line3);
    self.lines[3] = self.line3;

    self:InitSkills();
end

--@ling autofun
function CardSkillView:InitSkills()
    local cardskills = CardModel:GetInstance().cardskills;
    destroyTab(self.items);
    self.items = {};
    SetGameObjectActive(self.skill_item, true);
    local isActive = false;
    for i = #cardskills, 1, -1 do
        local skillData = Config.db_magic_card_suite[i];
        local skillitem = CardSkillViewItem(newObject(self.skill_item), skillData, cardskills[i]);
        self.items[i] = skillitem;
        if self.model.suite_id == i or isActive then
            skillitem:ShowLock(false);
            skillitem:SetOpenText("<color=#61E03A>Opened</color>");
            isActive = true;
            if self.model.suite_id == i then
                self.effect = UIEffect(skillitem.transform , 20427 , false);
                self.effect:SetConfig({ pos = { x = -90, y = 8, z = 0 } })
            end
        else
            skillitem:ShowLock(true);
            --skillitem:SetOpenText("<color=#61E03A>" .. skillData.desc .. "</color>");
            skillitem:SetOpenText(skillData.desc .. "Open");
            --skillitem:SetOpenText("未开启");
        end
        skillitem.transform:SetParent(self.Content.transform);
        SetLocalScale(skillitem.transform, 1, 1, 1);
        SetLocalPosition(skillitem.transform, 0, 0, 0);
    end

    local rt = GetRectTransform(self.Content);
    SetLocalPosition(self.Content.transform, 0, 0, 0);
    --self:SetItemSelected(self.items[1]);

    SetGameObjectActive(self.skill_item, false);
end

function CardSkillView:AddEvents()
    AddClickEvent(self.close_btn.gameObject, handler(self, self.HandleChangeScene));

    for k, v in pairs(self.items) do
        AddClickEvent(v.gameObject, handler(self, self.HandleClickItem, v));
    end

    AddEventListenerInTab(EventName.ChangeSceneEnd, handler(self, self.HandleChangeScene), self.events);
end

--@ling autofun
function CardSkillView:HandleChangeScene()
    self:destroy();
end

--@ling autofun
function CardSkillView:HandleClickItem(go, x, y, v)
    --self:SetItemSelected(v);
    --Notify.ShowText("技能点击");
    local skillID = v.skillid;
    local skillConfig = Config.db_skill[skillID];
    if skillConfig then
        local tipsPanel = lua_panelMgr:GetPanelOrCreate(TipsSkillPanel, "Top")
        tipsPanel:Open();
        --tipsPanel:SetId(skillConfig.id, self.transform , Vector3(0,0,0) , "TOP" , true);
        tipsPanel:SetId(skillConfig.id, self.transform , Vector3(0,0,0), "", true);
    end
end

CardSkillViewItem = CardSkillViewItem or class("CardSkillViewItem", Node)
local this = CardSkillViewItem

function CardSkillViewItem:ctor(obj, tab, skillid)
    self.transform = obj.transform
    self.gameObject = self.transform.gameObject;
    self.data = tab;
    self.skillid = skillid;
    self.image_ab = "magiccard_image";
    self.transform_find = self.transform.Find;
    self.events = {};
    self:Init();
end

function CardSkillViewItem:Init()
    self.is_loaded = true;
    self.nodes = {
        "icon", "skillopenlevel", "bg_3", "bg_1", "skillname", "bg_2", "locker", "close_btn",
    }
    self:GetChildren(self.nodes);

    self:InitUI();
end

function CardSkillViewItem:InitUI()
    self.skillname = GetText(self.skillname);
    self.skillopenlevel = GetText(self.skillopenlevel);
    self.icon = GetImage(self.icon);

    local skillConfig = Config.db_skill[self.skillid];
    if skillConfig then
        self.skillname.text = skillConfig.name;
        lua_resMgr:SetImageTexture(self, self.icon, "iconasset/icon_skill", tostring(skillConfig.icon), true);
    end
end

function CardSkillViewItem:ShowLock(bool)
    bool = toBool(bool);
    SetGameObjectActive(self.locker, bool);
end

function CardSkillViewItem:SetOpenText(str)
    self.skillopenlevel.text = tostring(str);
end

function CardSkillViewItem:dctor()
    GlobalEvent:RemoveTabListener(self.events);
    if self.schedule then
        GlobalSchedule:Stop(self.schedule);
    end
end
