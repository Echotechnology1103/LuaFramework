---魔法卡图鉴
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 18/12/05 16:57
---
MagicCardHandBookPanel = MagicCardHandBookPanel or class("MagicCardHandBookPanel", BaseItem);
local this = MagicCardHandBookPanel

function MagicCardHandBookPanel:ctor(parent_node)
    self.abName = "magiccard";
    self.image_ab = "magiccard_image";
    self.assetName = "MagicCardHandBook";
    self.layer = "Top"
    self.model = CardModel.GetInstance()
    self.events = {};
    self.schedules = {};

    self.items = {};

    self.separate_frame_schedule_id = nil

    MagicCardHandBookPanel.super.Load(self)
end

function MagicCardHandBookPanel:dctor()
    GlobalEvent:RemoveTabListener(self.events);
    if self.schedule then
        GlobalSchedule:Stop(self.schedule);
    end

    destroyTab(self.items);
    self.items = nil;

    if self.preSelectedItem then
        self.preSelectedItem:destroy();
    end
    self.preSelectedItem = nil;
    MagicCardCtrl:GetInstance().handbook = nil;

    self.values = nil;
    self.labels = nil;

    if self.carditem then
        self.carditem:destroy();
    end
    self.carditem = nil;

    if self.separate_frame_schedule_id then
        GlobalSchedule:Stop(self.separate_frame_schedule_id)
        self.separate_frame_schedule_id = nil
    end
end

function MagicCardHandBookPanel:LoadCallBack()
    self.nodes = {
        "props/value_3", "props/value_1", "props/card_des", "props/card", "props/value_2", "props/value_4", "hb_item", "ScrollView/Viewport/Content", "windowCloseBtn",
        "props/l/label_4", "props/l/label_2", "props/l/label_3", "props/l/label_1", "isHaveBest", "props/card_name",

        "tog/tog_btn_1", "tog", "tog/tog_btn_3", "tog/tog_btn_2", "tog/tog_btn_4",
    }
    self:GetChildren(self.nodes)

    SetLocalPosition(self.transform, 0, 0, 0);

    self:InitUI();

    self:InitTog();

    self:AddEvents();

    AddBgMask(self.gameObject, 20, 20, 20, 185);
end

function MagicCardHandBookPanel:InitUI()
    self.windowCloseBtn = GetButton(self.windowCloseBtn);
    self.values = {};
    self.labels = {};
    self.value_1 = GetText(self.value_1);
    self.values[1] = self.value_1;
    self.value_2 = GetText(self.value_2);
    self.values[2] = self.value_2;
    self.value_3 = GetText(self.value_3);
    self.values[3] = self.value_3;
    self.value_4 = GetText(self.value_4);
    self.values[4] = self.value_4;

    self.label_1 = GetText(self.label_1);
    self.labels[1] = self.label_1;
    self.label_2 = GetText(self.label_2);
    self.labels[2] = self.label_2;
    self.label_3 = GetText(self.label_3);
    self.labels[3] = self.label_3;
    self.label_4 = GetText(self.label_4);
    self.labels[4] = self.label_4;

    self.card_des = GetText(self.card_des);

    self.card_name = GetText(self.card_name);

    self:InitCards();
end

function MagicCardHandBookPanel:InitTog()
    self.togLabels = { "Purple", "Orange", "Red", "Fuse" };
    self.togbtns = {};
    for i = 1, 4 do
        self.togbtns[i] = HandBookTogBtn(self["tog_btn_" .. i]);

        if i == 1 then
            self.togbtns[i]:SetSelected(true);
        else
            self.togbtns[i]:SetSelected(false);
        end
       

        self.togbtns[i]:SetTxt(self.togLabels[i]);
    end
  
end

function MagicCardHandBookPanel:HandleTog(go, x, y, pos)
    for i = 1, 4 do
        self.togbtns[i]:SetSelected(false);
    end
    self.togbtns[pos]:SetSelected(true);
    self.selected_card_type = pos;
    self:FilterCards();
end

--@ling autofun
function MagicCardHandBookPanel:InitCards()
    local handbookData = CardModel:GetInstance().handbookData;

    destroyTab(self.items);
    self.items = {};
    SetGameObjectActive(self.hb_item, true);

   --[[  for i = 1, #handbookData, 1 do
        local handbook_item = HandBookItem(newObject(self.hb_item), handbookData[i]);
        self.items[i] = handbook_item;
        handbook_item.transform:SetParent(self.Content.transform);
        SetLocalScale(handbook_item.transform, 1, 1, 1);
        SetLocalPosition(handbook_item.transform, 0, 0, 0);
    end

    local rt = GetRectTransform(self.Content);
    rt.sizeDelta = Vector2(rt.sizeDelta.x, #handbookData / 4 * 170);
    self:SetItemSelected(self.items[1]);

    SetGameObjectActive(self.hb_item, false); ]]

    self:SeparateFrameInstantia(handbookData)
end

--分帧实例化
function MagicCardHandBookPanel:SeparateFrameInstantia(handbookData)
   
    local num = #handbookData
    if num <= 0 then
		return
	end
    local function op_call_back(cur_frame_count,cur_all_count)
        local handbook_item = HandBookItem(newObject(self.hb_item), handbookData[cur_all_count]);
        self.items[cur_all_count] = handbook_item;
        handbook_item.transform:SetParent(self.Content.transform);
        SetLocalScale(handbook_item.transform, 1, 1, 1);
        SetLocalPosition(handbook_item.transform, 0, 0, 0);

        if cur_all_count == 1 then
            self:SetItemSelected(self.items[1]);
        end
	end
	local function all_frame_op_complete()
		self:SeparateFrameInstantiaComplete(num)
	end


	self.separate_frame_schedule_id =  SeparateFrameUtil.SeparateFrameOperate(op_call_back,nil,3,num,nil,all_frame_op_complete)
end

--分帧实例化结束
function MagicCardHandBookPanel:SeparateFrameInstantiaComplete(num)
    self.separate_frame_schedule_id = nil

    local rt = GetRectTransform(self.Content);
    rt.sizeDelta = Vector2(rt.sizeDelta.x, num / 4 * 170);
   

    SetGameObjectActive(self.hb_item, false);

    --等实例化结束再注册点击
    for k, v in pairs(self.items) do
        AddClickEvent(v.gameObject, handler(self, self.HandleClickItem, v));
    end

    for i = 1, 4 do
        AddClickEvent(self.togbtns[i].gameObject, handler(self, self.HandleTog, i));
    end

    self:HandleTog(nil, nil, nil, 1);
end

function MagicCardHandBookPanel:FilterCards()
    if not self.items then
        return ;
    end
    local count = 0;
    local flag = false;
    for i = 1 , #self.items do
        local handbook_item = self.items[i];
        if handbook_item:IsType(self.selected_card_type) then
            --print2(handbook_item.data.id);
            --local itemconfig = Config.db_item[handbook_item.data.id];
            --print2(itemconfig.name);
            if not flag then
                flag = true;
                self:SetItemSelected(handbook_item);
            end
            SetGameObjectActive(handbook_item.gameObject, true);
            count = count + 1;
        else
            SetGameObjectActive(handbook_item.gameObject, false);
        end
    end

    local rt = GetRectTransform(self.Content);
    rt.sizeDelta = Vector2(rt.sizeDelta.x, count / 4 * 170);
end

function MagicCardHandBookPanel:AddEvents()
    AddClickEvent(self.windowCloseBtn.gameObject, handler(self, self.destroy));

   

    AddEventListenerInTab(EventName.ChangeSceneEnd, handler(self, self.HandleChangeScene), self.events);
end

--@ling autofun
function MagicCardHandBookPanel:HandleChangeScene()
    self:destroy();
end

--@ling autofun
function MagicCardHandBookPanel:HandleClickItem(go, x, y, v)
    self:SetItemSelected(v);
end

MagicCardHandBookPanel.preSelectedItem = nil;
--@ling autofun
function MagicCardHandBookPanel:SetItemSelected(item)
    if self.preSelectedItem then
        self.preSelectedItem:SetSelected(false);
    end
    self.preSelectedItem = item;
    item:SetSelected(true);
    self:HideAllText();
    for i = 1, 4 do
        SetGameObjectActive(self.labels[i], false);
        SetGameObjectActive(self.values[i], false);
    end
    local hbData = item.data;
    if hbData then
        local cardID = hbData.id;
        local cardData = Config.db_magic_card[cardID];
        if cardData then
            local basePropTab = String2Table(cardData.base);
            local bestPropTab = String2Table(cardData.rare);
            local index = 1;
            local value;
            for k, v in pairs(basePropTab) do
                SetGameObjectActive(self.labels[index], true);
                SetGameObjectActive(self.values[index], true);
                local label = PROP_ENUM[v[1]].label;
                if string.utf8len(label) == 2 then
                    label = table.concat(string.utf8list(label), "zz") .. "：";
                else
                    label = PROP_ENUM[v[1]].label .. "：";
                end

                self.labels[index].text = label;
                --self.labels[index].text = PROP_ENUM[v[1]].label .. "：";
                if v[1] >= 13 then
                    value = GetPreciseDecimal(tonumber(v[2]) / 100, 2) .. "%";
                else
                    value = tostring(v[2]);
                end
                value = string.gsub(value, "%.", "d");
                self.values[index].text = value;
                index = index + 1;
            end
            index = 3;
            for k, v in pairs(bestPropTab) do
                SetGameObjectActive(self.labels[index], true);
                SetGameObjectActive(self.values[index], true);
                local label = PROP_ENUM[v[1]].label;
                if string.utf8len(label) == 2 then
                    label = table.concat(string.utf8list(label), "zz") .. "：";
                else
                    label = PROP_ENUM[v[1]].label .. "：";
                end

                self.labels[index].text = label;
                --self.labels[index].text = PROP_ENUM[v[1]].label .. "：";
                if v[1] >= 13 then
                    value = GetPreciseDecimal(tonumber(v[2]) / 100, 2) .. "%";
                else
                    value = tostring(v[2]);
                end
                value = string.gsub(value, "%.", "d");
                self.values[index].text = value;
            end

            if #bestPropTab > 0 then
                SetGameObjectActive(self.isHaveBest, false);
            else
                SetGameObjectActive(self.isHaveBest, true);
            end
            index = index + 1;
        end

        if self.carditem then
            self.carditem:destroy();
        end
        self.carditem = MagicCard(self.card, cardData);
        self.carditem:ShowStars(false);
        self.carditem:ShowCardLV(false);
        self.carditem:ShowCardName(false);

        self.card_des.text = hbData.dec;
        local itemConfig = Config.db_item[cardData.id];
        if itemConfig then
            self.card_name.text = cardData.name;
            SetColor(self.card_name, HtmlColorStringToColor("#" .. ColorUtil.GetColor(itemConfig.color)));
        end

    end
end
function MagicCardHandBookPanel:HideAllText()
    for i = 1, 4, 1 do
        SetGameObjectActive(self.values[i], false);
    end
end





