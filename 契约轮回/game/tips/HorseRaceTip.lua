---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 18/11/19 17:33
---
HorseRaceTip = HorseRaceTip or class("HorseRaceTip", BaseItem)

local this = HorseRaceTip

local ConfigLanguage = require('game.config.language.CnLanguage');

HorseRaceTip.__cache_count = 2
function HorseRaceTip:ctor(parent_node, tab)
    self.abName = "tips"
    self.image_ab = "tips_image";
    self.assetName = "HorseRaceTip"
    self.layer = "Top"
    self.data = tab;
    self.events = {};
    HorseRaceTip.super.Load(self);
end

function HorseRaceTip:dctor()
    destroyTab(self.items);
    self.items = nil;
    GlobalEvent:RemoveTabListener(self.events);
    self.events = nil;
    if self.oneSchedule then
        GlobalSchedule.StopFun(self.oneSchedule);
    end
    self.oneSchedule = nil;
end

function HorseRaceTip:__clear()
    HorseRaceTip.super.__clear(self)
end

function HorseRaceTip:__reset(parent_node, tab)
    HorseRaceTip.super.__reset(self, parent_node, tab)
    self.data = tab
    SetLocalPosition(self.transform, 0, 242, 0)
    self:InitUI()
end

function HorseRaceTip:LoadCallBack()
    self.nodes = {
        "bg", "content",
    }
    self:GetChildren(self.nodes)

    SetLocalPosition(self.transform, 0, 242, 0);
    self.bg = GetImage(self.bg.transform);
    self.content = GetText(self.content.transform);
    self:AddEvent();
    self:InitUI();
end

function HorseRaceTip:InitUI()

    self.content.text = "";

    if self.data then
        self.content.text = self.data.msg;
        if self.data.show_type == 1 then
            SetAlpha(self.bg, 0);
            SetAlpha(self.content, 0);

            local alphaAction = cc.FadeTo(1, 1, self.bg);
            cc.ActionManager:addAction(alphaAction, self.bg);
            alphaAction = cc.FadeTo(1, 1, self.content);
            cc.ActionManager:addAction(alphaAction, self.content);
        elseif self.data.show_type == 2 then
            SetLocalScale(self.transform, 0.95, 0.95, 0.95);

            local scaleAction2 = cc.ScaleTo(0.2, 1, 1, 1);
            local scaleAction1 = cc.ScaleTo(0.1, 1, 1, 1);
            local scaleAction = cc.Sequence(scaleAction2, scaleAction1);
            cc.ActionManager:GetInstance():addAction(scaleAction, self.transform);
        else
            SetLocalScale(self.transform, 0.95, 0.95, 0.95);

            local scaleAction2 = cc.ScaleTo(0.2, 1, 1, 1);
            local scaleAction1 = cc.ScaleTo(0.1, 1, 1, 1);
            local scaleAction = cc.Sequence(scaleAction2, scaleAction1);
            cc.ActionManager:GetInstance():addAction(scaleAction, self.transform);
        end
        local function call_back()
            if self.oneSchedule then
                GlobalSchedule.StopFun(self.oneSchedule);
            end
            self.oneSchedule = nil
            self:destroy();
        end
        self.oneSchedule = GlobalSchedule.StartFunOnce(call_back, 2.5)
    end
end

function HorseRaceTip:AddEvent()
    --AddClickEvent(self.gameObject, handler(self, self.HandleClick))
end

function HorseRaceTip:HandleClick(go, x, y)
    BrocastModelEvent(ChatEvent.OpenChatPanel, nil, 100);
end

