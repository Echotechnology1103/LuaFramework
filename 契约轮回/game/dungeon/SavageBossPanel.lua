---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2018/10/10 10:53
---
SavageBossPanel = SavageBossPanel or class("SavageBossPanel", BaseItem)
local this = SavageBossPanel
local ConfigLanguage = require('game.config.language.CnLanguage');
function SavageBossPanel:ctor(parent_node, dungeonPanel, selectedBossid)
    self.abName = "dungeon";
    self.image_ab = "dungeon_image";
    --self.assetName = "SavageBossPanel"
    self.layer = "Bottom"

    self.selectedBossid = selectedBossid;

    self.parentPanel = dungeonPanel;
    self.model = DungeonModel.GetInstance()
    self.events = {};
    self.schedules = {};
    self.boss_type = self:GetSelectedBossType()
    self.vip_rights_type = self:GetVipRightsType()
    self.assetName = self:GetAssetName()
    SavageBossPanel.super.Load(self);
    --DungeonCtrl:GetInstance().SavageBossPanel = self;
end

function SavageBossPanel:dctor()
    self.model = nil;

    if self.map_bg then
        self.map_bg.transform:SetParent(self.transform);
    end

    GlobalEvent:RemoveTabListener(self.events);
    self.selectedItemIndex = 1;
    self:StopAllSchedules()

    destroyTab(self.items);
    self.items = {};

    self.parentPanel = nil;
    self.selectedBossid = nil;
    local panel = lua_panelMgr:GetPanel(DungeonSavageEntranceTicketPanel);
    if panel then
        panel:Close();
    end

    self.togItems = nil;
end



function SavageBossPanel:Open(data)
    self.data = data;

    WindowPanel.Open(self)
end

function SavageBossPanel:LoadCallBack()
    self.nodes = {
        "bg_layer/shuoming", "boss_tog_1", "togLayer", "bg_layer/shuomingLabel",
        "pilaoText", "qianwangBtn", "ScrollView/Viewport/Content",
        "bossitem_0", "qianwangBtn/qianwangText",
        "enter_num",--当前进入人数:0
    }
    self:GetChildren(self.nodes)

    SetLocalPosition(self.transform, 0, 0, 0)

    self:InitUI();

    self:AddEvent();

    --请求boss列表
    --DungeonCtrl:GetInstance():RequestBossList(self.boss_type);
    self.parentPanel:DropCallBack();
end

function SavageBossPanel:InitUI()
    --当前选中的层数
    --self.currentFloor = 1;

    self.qianwangBtn = GetButton(self.qianwangBtn);

    self.pilaoText = GetText(self.pilaoText);
    --self.pilaoText.color = Color(59 / 255, 0x2e/255, 12 / 255, 1);
    --玩法说明
    self.shuoming = GetButton(self.shuoming);

    self.shuomingLabel = GetText(self.shuomingLabel);

    self:InitShuoming();

    self.enter_num = GetText(self.enter_num);

    --剩余进入次数:<color=#ffff00>13</color>(提升VIP进加进入次数)
    --DungeonModel:GetInstance().enter
    --self.shuoming.gameObject:SetActive(false);

    self.boss_tog_1 = GetToggle(self.boss_tog_1);

    self.qianwangText = GetText(self.qianwangText);

    --self.care = GetToggle(self.care);


    self:InitTog();
    self:InitBoss(self.currentFloor);
    --初始化掉落icon
    self.selectedItemIndex = 1;
    local ditem = self.items[self.selectedItemIndex];
    self.parentPanel:InitDrops(ditem);
    self.parentPanel:InitModelView(ditem);

    --lua_resMgr:SetImageTexture(self, self.winlose, self.image_ab, "dungeon_result2_win", true);
end

function SavageBossPanel:InitShuoming()
    local vipLevel = RoleInfoModel:GetInstance():GetMainRoleVipLevel();
    local vipRightTab = Config.db_vip_rights[self.vip_rights_type];
    local base = tonumber(vipRightTab.base);
    local added = tonumber(vipRightTab["vip" .. vipLevel]);
    local maxtime = base + added;
    local enterTimes = DungeonModel:GetInstance().enter;
    --self.shuomingLabel.text = "剩余进入次数:<color=#ff00ff>" .. (maxtime - enterTimes) .. "次</color>(提升贵族加进入次数)"
    self.shuomingLabel.text = string.format(ConfigLanguage.Dungeon.SAVAGE_ENTER_TIP , tostring((maxtime - enterTimes)));
end

function SavageBossPanel:InitTog()
    self.togBoss = {};
    local level = RoleInfoModel:GetInstance():GetMainRoleLevel()
    local boss_tab = self:GetBossTab()
    for k, v in pairs(boss_tab) do
        if not self.togBoss[v.floor] then
            self.togBoss[v.floor] = {};
        end
        if self.selectedBossid then
            if v.id == self.selectedBossid then
                self.currentFloor = v.floor;
            end
        else
            local sceneConfig = Config.db_scene[v.scene];
            if sceneConfig then
                local reqs = LString2Table(sceneConfig.reqs);--{vip,4}
                reqs = reqs and reqs[1] or {};
                if reqs and reqs[1] == "level" and SafetoNumber(reqs[2]) <= level and SafetoNumber(self.currentFloor) <= SafetoNumber(v.floor) then
                    self.currentFloor = v.floor;
                end
            end
        end

        table.insert(self.togBoss[v.floor], v);
    end
    self.currentFloor = self.currentFloor or 1;
    self.boss_tog_1.gameObject:SetActive(true);

    destroyTab(self.togItems);
    self.togItems = {};
    for i = 1, #self.togBoss, 1 do
        local tog = newObject(self.boss_tog_1);
        tog.gameObject.name = "boss_tog_" .. i;
        local labelObj = GetChild(tog, "Label");
        if labelObj then
            local labelText = GetText(labelObj);
            labelText.text = string.format("F%s", DungeonModel.NumToChinese[i]);
            SetColor(labelText, 255, 255, 255)
        end
        tog.isOn = false;
        tog.transform:SetParent(self.togLayer.transform);
        SetLocalPosition(tog.transform, 0, 0, 0);
        SetLocalScale(tog.transform, 1, 1, 1);
        self.togItems[i] = tog;
    end
    if self.currentFloor and self.currentFloor ~= 1 and self.togItems[self.currentFloor] then
        self:HandleTogClick(self.togItems[self.currentFloor].gameObject)
        self.togItems[self.currentFloor].isOn = true;
        self:SetToggleColor(self.togItems[self.currentFloor])
    else
        self.togItems[1].isOn = true;
        self:HandleTogClick();
        self:SetToggleColor(self.togItems[1])
    end

    self.boss_tog_1.gameObject:SetActive(false);
end

function SavageBossPanel:InitBoss(floor)
    destroyTab(self.items);

    self.items = {};
    self.selectedItemIndex = 1;
    local bosses = self.togBoss[self.currentFloor];
    if bosses then
        self.bossitem_0.gameObject:SetActive(true);
        table.sort(bosses, SeqCompareFun);
        for i = 1, #bosses, 1 do
            local bossTab = bosses[i];
            local item = self.GetScrollItemClass()(newObject(self.bossitem_0), bossTab);
            item.gameObject.name = "home_boss_" .. i;
            self.items[i] = item;
            --item:SetJie();
            item:ShowCare(false);
            item:ShowPeace(bossTab.peace == 1);
            item.transform:SetParent(self.Content.transform);
            SetLocalScale(item.transform, 1, 1, 1);
            SetLocalPosition(item.transform, 0, 0, 0);
            self:RefreshDungeonScrollItem(item);
            if bossTab.id == self.selectedBossid then
                self.selectedItemIndex = i;
            end

        end
        self.items[self.selectedItemIndex]:SetSelected(true);
        local rt = self.Content:GetComponent("RectTransform");
        rt.sizeDelta = Vector2(rt.sizeDelta.x, #bosses * 103.2);
    end



    self.bossitem_0.gameObject:SetActive(false);

    for i = 1, #self.items, 1 do
        AddClickEvent(self.items[i].gameObject, handler(self, self.HandleSelectItem , self.items[i]));
    end
    self.parentPanel:InitDrops(self.items[self.selectedItemIndex]);
    self.parentPanel:SetBG(self.items[self.selectedItemIndex]);
    self.parentPanel:InitModelView(self.items[self.selectedItemIndex]);

    self:SetQianWangText();

    local rt = self.Content:GetComponent("RectTransform");
    rt.anchoredPosition = Vector2(0, (self.selectedItemIndex - 1) * 60.2);
    self:HandleSelectItem(self.items[self.selectedItemIndex].gameObject)

    DungeonCtrl:GetInstance():RequestBossList(self.boss_type , floor);
end

function SavageBossPanel:AddEvent()
    local qianwang_callback = function(target, x, y)
        local vipLevel = RoleInfoModel:GetInstance():GetMainRoleVipLevel();
        local vipRightTab = Config.db_vip_rights[self.vip_rights_type];
        local base = tonumber(vipRightTab.base);
        local added = tonumber(vipRightTab["vip" .. vipLevel]);
        local maxtime = base + added;--10--
        local enterTimes = DungeonModel:GetInstance().enter;
        if (maxtime - enterTimes) <= 0 then
            Notify.ShowText(self:GetEnterTimeTip() or "Attempts used up, fail to enter!");
            return;
        end


        local item = self.items[self.selectedItemIndex];
        if item then
            if item.data then
                local function ok_func()
                    local okFun = function()
                        local sceneid = item.data.scene;
                        local coord = String2Table(item.data.coord);
                        if sceneid and coord then
                            if type(coord[1]) == "table" then
                                DungeonCtrl:GetInstance():RequestEnterWorldBoss(sceneid);
                            else
                                DungeonCtrl:GetInstance():RequestEnterWorldBoss(sceneid, coord[1], coord[2]);
                            end
                            
                            DungeonModel:GetInstance().SelectedDungeonID = item.data.id;
                        end
                    end

                    local vipLevel = RoleInfoModel:GetInstance():GetMainRoleVipLevel();
                    if (item.data.floor + 3) > vipLevel then
                        local sceneID = item.data.scene;
                        local sceneConfig = Config.db_scene[sceneID];
                        if sceneConfig then
                            if sceneConfig.cost_type == 1 then
                                local cost = String2Table(sceneConfig.cost);
                                for k, v in pairs(cost) do
                                    local min = v[1];
                                    local max = v[2];

                                    if (DungeonModel:GetInstance().enter + 1) >= min and (DungeonModel:GetInstance().enter + 1) <= max then
                                        local costItemTab = v[3][1];--配置就是这么复杂
                                        if costItemTab then
                                            local panel = lua_panelMgr:GetPanel(DungeonSavageEntranceTicketPanel);
                                            if panel then
                                                panel:Close();
                                            end

                                            lua_panelMgr:GetPanelOrCreate(DungeonSavageEntranceTicketPanel):Open({ call_back = okFun, itemID = costItemTab[1], num = costItemTab[2], sceneName = sceneConfig.name });
                                            return ;
                                        else
                                            Notify.ShowText("Failed to find entrance item info");
                                            return;
                                        end
                                    end
                                end
                                Notify.ShowText("Unable to enter for now, please contact admin");
                            else
                                Notify.ShowText("Cost_type error， please check");
                                return;
                            end
                        else
                            Notify.ShowText("Failed to find scene configuration");
                            return ;
                        end
                        --VIP等级不够
                        --Dialog.ShowTwo("提示", "贵族等级不足,是否消费200绑定钻石或钻石进入?", "确定", okFun, nil, "取消", nil, nil);
                    else
                        local sceneID = item.data.scene;
                        local sceneConfig = Config.db_scene[sceneID];
                        if sceneConfig then
                            if sceneConfig.cost_type == 1 then
                                local cost = String2Table(sceneConfig.cost);
                                for k, v in pairs(cost) do
                                    local min = v[1];
                                    local max = v[2];

                                    if (DungeonModel:GetInstance().enter + 1) >= min and (DungeonModel:GetInstance().enter + 1) <= max then
                                        local costItemTab = v[3][1];
                                        if costItemTab then
                                            local panel = lua_panelMgr:GetPanel(DungeonSavageEntranceTicketPanel);
                                            if panel then
                                                panel:Close();
                                            end

                                            lua_panelMgr:GetPanelOrCreate(DungeonSavageEntranceTicketPanel):Open({ call_back = okFun, itemID = costItemTab[1], num = costItemTab[2], sceneName = sceneConfig.name });
                                            return ;
                                        else
                                            Notify.ShowText("Failed to find entrance item info");
                                        end
                                    end
                                end
                            else
                                Notify.ShowText("Cost_type error， please check");
                            end
                        else
                            Notify.ShowText("Failed to find scene configuration");
                            return ;
                        end


                        --okFun();
                    end
                end
                local boss_type = item.data.type
                local boss_drop_limit = String2Table(Config.db_game["boss_drop_limit"].val)[1]
                if table.containValue(boss_drop_limit, boss_type) then
                    local level = RoleInfoModel:GetInstance():GetRoleValue("level")
                    local creep = Config.db_creep[item.data.id]
                    if level-creep.level >= item.data.drop_lv then
                        Dialog.ShowTwo("Tip","\nYour level is X higher than the boss and no loot will be available after defeating it.\nProceed?","Confirm",ok_func,nil,"Cancel",nil,nil,"Don't notice me again today",false,nil,-10010)
                        return
                    end
                end
                local power = RoleInfoModel:GetInstance():GetMainRoleData().power
                if power < item.data.power  then
                    local str = string.format("\n\nThat boss has higher CP<color=#eb0000>(%s)</color> and challenging it might be difficult.Proceed anyway?\n   My CP：%s",item.data.power,power)
                    Dialog.ShowTwo("Tip",str,"Confirm",ok_func,nil,"Cancel",nil,nil,"Don't notice me again today",false,nil,-10011)
                    return
                end
                ok_func()


            end
        end
    end
    AddClickEvent(self.qianwangBtn.gameObject, qianwang_callback)

    local shuomingTip = function(target, x, y)
        ShowHelpTip(self:GetHelpTip() , true);
    end
    AddClickEvent(self.shuoming.gameObject, shuomingTip)

    for k, v in pairs(self.togItems) do
        AddValueChange(v.gameObject, handler(self, self.HandleTogClick , v));
    end

    self.events[#self.events + 1] = GlobalEvent.AddEventListener(DungeonEvent.WORLD_BOSS_LIST, handler(self, self.HaneleBossList));

    self.events[#self.events + 1] = GlobalEvent.AddEventListener(DungeonEvent.WORLD_BOSS_CARE, handler(self, self.HaneleBossCare));
end

function SavageBossPanel:HandleTogClick(target, bool , v)
    if bool then
        for i = 1, #self.togItems, 1 do
            local labelObj = GetChild(self.togItems[i], "Label")
            if labelObj then
                local LabelText = GetText(labelObj)
                SetColor(LabelText, 255, 255, 255)
            end
            if self.togItems[i].gameObject == target then
                self.currentFloor = i;
                self:InitBoss(i);
                local LabelText = GetText(labelObj)
                SetColor(LabelText, 133, 132, 176)
            end
        end
    end
end

function SavageBossPanel:SetToggleColor(target)
    if target then
        local labelObj = GetChild(target, "Label")
        if labelObj then
            local LabelText = GetText(labelObj)
            SetColor(LabelText, 133, 132, 176)
        end
    end
end
function SavageBossPanel:HaneleBossCare(data)
    if self.items then
        for i = 1, #self.items, 1 do
            local bossTab = self.items[i].data;
            if bossTab.id == data.id then
                self.items[i]:SetIsCare(data.op == 1);
            end
        end
    end
end

function SavageBossPanel:HaneleBossList(data)
    if self.items then
        for i = 1, #self.items, 1 do
            self:RefreshDungeonScrollItem(self.items[i]);
        end
        self.parentPanel:RefreshProp(self.items[self.selectedItemIndex]);
        local item = self.items[self.selectedItemIndex]
        local bossinfo = DungeonModel:GetInstance():GetDungeonBossInfo(self.boss_type, item.data.id)
        if bossinfo then
            self.parentPanel:SetIsCare(bossinfo.care)
        end
    end

    if data and data.num then
        self.enter_num.text = "Current players: <color=#00be00>" .. data.num .. "</color>";
    else
        self.enter_num.text = "Current players: <color=#00be00>" .. 0 .. "</color>";
    end


    self:InitShuoming();
    --BOSS 疲劳: 1/3
    --if data.tired then
    --    local tired = 10;
    --    if Config.db_game["boss_tired"] then
    --        tired = tonumber(Config.db_game["boss_tired"].val);
    --    end
    --    self.pilaoText.text = "BOSS 疲劳: " .. data.tired .. "/" .. tired;
    --end
end

function SavageBossPanel:RefreshDungeonScrollItem(item)
    local bossTab = item.data;

    local bossinfo = DungeonModel:GetInstance():GetDungeonBossInfo(self.boss_type, bossTab.id);
    if bossinfo then
        local time = bossinfo.born;--1541494877
        item:StartSechudle(time);
        --item:SetIsCare(bossinfo.care);
        --self.parentPanel:SetIsCare(bossinfo.care);
        --local monsterTab = Config.db_creep[bossTab.id];
        --self.valueTab[1].text = tostring(monsterTab.att);
        --self.valueTab[2].text = tostring(monsterTab.hpmax);
        --self.valueTab[3].text = tostring(monsterTab.def);
        --self.valueTab[4].text = tostring(monsterTab.hit);
        --self.valueTab[5].text = tostring(monsterTab.miss);
    end
end

--处理Bossitem点击
function SavageBossPanel:HandleSelectItem(target, x, y , v)
    local item = nil;
    for i = 1, #self.items, 1 do
        if self.items[i].gameObject == target then
            item = self.items[i];
            self.selectedItemIndex = i;
        end
        self.items[i]:SetSelected(false);
    end
    item:SetSelected(true);
    self.parentPanel:InitDrops(item);
    self.parentPanel:SetBG(item);
    self.parentPanel:InitModelView(item);
    self.parentPanel:RefreshProp(item);

    local tab = DungeonModel:GetInstance():GetDungeonBossInfo(self.boss_type, item.data.id);
    if tab then
        self.parentPanel:SetIsCare(tab.care)
    end
end

function SavageBossPanel:SetQianWangText()
    if self.items then
        local data = self.items[self.selectedItemIndex].data;
        self.qianwangText.text = "Go Now";--"V" .. (data.floor + 3) ..
    end
end

function SavageBossPanel:StopAllSchedules()
    for i = 1, #self.schedules, 1 do
        GlobalSchedule:Stop(self.schedules[i]);
    end
    self.schedules = {};
end

function SavageBossPanel:GetSelectedID()
    if self.items and self.items[self.selectedItemIndex] and self.items[self.selectedItemIndex].data then
        return self.items[self.selectedItemIndex].data.id;
    end
    return 0;
end

function SavageBossPanel:GetAssetName(  )
    return "SavageBossPanel"
end

function SavageBossPanel:GetSelectedBossType()
    return enum.BOSS_TYPE.BOSS_TYPE_WILD
end

function SavageBossPanel:GetVipRightsType(  )
    return enum.VIP_RIGHTS.VIP_RIGHTS_WILD_BOSS
end

function SavageBossPanel:GetBossTab(  )
    return self.model.savageBossTab
end

function SavageBossPanel:GetEnterTimeTip(  )

end

function SavageBossPanel:GetScrollItemClass(  )
    return DungeonScrollItem
end

function  SavageBossPanel:GetHelpTip(  )
    return HelpConfig.Dungeon.savageBoss
end