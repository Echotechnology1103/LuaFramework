---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2018/10/10 10:53
---
BeastIslandPanel = BeastIslandPanel or class("BeastIslandPanel", BaseItem)
local this = BeastIslandPanel
local ConfigLanguage = require('game.config.language.CnLanguage');
function BeastIslandPanel:ctor(parent_node, dungeonPanel, selectedBossid, isCross)
    self.abName = "dungeon";
    self.image_ab = "dungeon_image";
    self.assetName = "BeastIslandPanel"
    self.layer = "Bottom"
    self.isCross = isCross;
    self.selectedBossid = selectedBossid;

    if self.isCross then
        self.bossType = enum.BOSS_TYPE.BOSS_TYPE_BEAST_CROSS;
    else
        self.bossType = enum.BOSS_TYPE.BOSS_TYPE_BEAST;
    end

    self.parentPanel = dungeonPanel;
    self.model = DungeonModel.GetInstance()
    self.events = {};
    self.schedules = {};
    BeastIslandPanel.super.Load(self);
    --DungeonCtrl:GetInstance().BeastIslandPanel = self;
end

function BeastIslandPanel:dctor()
    self.model = nil;

    if self.map_bg then
        self.map_bg.transform:SetParent(self.transform);
    end

    GlobalEvent:RemoveTabListener(self.events);
    self.selectedItemIndex = 1;
    self:StopAllSchedules()

    destroyTab(self.items);
    self.items = {};

    self.parentPanel = nil;
    self.selectedBossid = nil;
    local panel = lua_panelMgr:GetPanel(DungeonSavageEntranceTicketPanel);
    if panel then
        panel:Close();
    end

    self.togItems = nil;

    if self.mission_schedule then
        GlobalSchedule:Stop(self.mission_schedule);
    end
    self.mission_schedule = nil;

    if self.qianwangBtn_reddot then
        self.qianwangBtn_reddot:destroy();
    end
    self.qianwangBtn_reddot = nil;
end

function BeastIslandPanel:Open(data)
    self.data = data;
    WindowPanel.Open(self)
end

function BeastIslandPanel:LoadCallBack()
    self.nodes = {
        "boss_tog_1", "togLayer", -- "bg_layer/shuomingLabel","bg_layer/shuoming","pilaoText",
        "qianwangBtn", "ScrollView/Viewport/Content",
        "bossitem_0", "qianwangBtn/qianwangText",
        "enter_num", --当前进入人数:0

        "low/pilaolabel", "low/beastdatalabel", "low/shuoming", "low/pilao", "low/crystallabel", "low/crystalleft", "low/leftmis", "low/leftmissiontime", "low", "low/beastdate",
        --水晶
        "crystal", "crystal/baoxiang_bt", "crystal/crystal_num", "crystal/crystal_tip",
        --NPC的委托:<color=#27EF6B>1/2</color>
        "mission/mis_text", "mission/mis_btn", "mission/mis_bg", "mission/mis_btn/mis_btn_txt", "mission/mis_head", "mission",
    }
    self:GetChildren(self.nodes)

    SetLocalPosition(self.transform, 0, 0, 0)

    self:InitUI();

    self:AddEvent();

    --请求boss列表,要注释
    --if self.isCross then
    --    DungeonCtrl:GetInstance():RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_BEAST_CROSS, 1);
    --else
    --    DungeonCtrl:GetInstance():RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_BEAST, 1);
    --end

    self.parentPanel:BeastCallBack();
    self:HandleMission();
end

function BeastIslandPanel:InitUI()
    self.qianwangBtn = GetButton(self.qianwangBtn);

    self.pilaolabel = GetText(self.pilaolabel);
    self.beastdatalabel = GetText(self.beastdatalabel);
    self.pilao = GetText(self.pilao);
    self.crystallabel = GetText(self.crystallabel);
    self.crystalleft = GetText(self.crystalleft);
    self.leftmis = GetText(self.leftmis);
    self.leftmissiontime = GetText(self.leftmissiontime);
    self.beastdate = GetText(self.beastdate);

    self.mis_text = GetText(self.mis_text);
    self.mis_btn = GetButton(self.mis_btn);
    self.mis_btn_txt = GetText(self.mis_btn_txt);
    self.mis_head = GetImage(self.mis_head);
    self.mis_bg = GetImage(self.mis_bg);

    self.crystal_num = GetText(self.crystal_num);
    self.crystal_tip = GetText(self.crystal_tip);
    self.baoxiang_bt = GetButton(self.baoxiang_bt);
    SetGameObjectActive(self.baoxiang_bt);
    --玩法说明
    self.shuoming = GetButton(self.shuoming);

    self:InitShuoming();

    self.enter_num = GetText(self.enter_num);
    self.enter_num.text = "";

    self.boss_tog_1 = GetToggle(self.boss_tog_1);

    self.qianwangText = GetText(self.qianwangText);

    self:InitTog();
    self:InitBoss(self.currentFloor);
    --初始化掉落icon
    self.selectedItemIndex = 1;
    local ditem = self.items[self.selectedItemIndex];
    self.parentPanel:InitDrops();
    self.parentPanel:InitModelView(ditem);

    self.qianwangBtn_reddot = RedDot(self.qianwangBtn.transform, nil, RedDot.RedDotType.Nor)
    self.qianwangBtn_reddot:SetPosition(68, 22);
    self:CheckReddot();
end

function BeastIslandPanel:InitShuoming()
    local vipLevel = RoleInfoModel:GetInstance():GetMainRoleVipLevel();
    local vipRightTab = Config.db_vip_rights[enum.VIP_RIGHTS.VIP_RIGHTS_WILD_BOSS];
    local base = tonumber(vipRightTab.base);
    local added = tonumber(vipRightTab["vip" .. vipLevel]);
    local maxtime = base + added;
    local enterTimes = DungeonModel:GetInstance().enter;
end

function BeastIslandPanel:InitTog()
    self.togBoss = {};
    local bosses = self.model.beastBossTab;
    if self.isCross then
        bosses = self.model.crossbeastBossTab;
    end
    for k, v in pairs(bosses) do
        if not self.togBoss[v.floor] then
            self.togBoss[v.floor] = {};
        end
        if v.id == self.selectedBossid then
            self.currentFloor = v.floor;
        end
        table.insert(self.togBoss[v.floor], v);
    end
    self.currentFloor = self.currentFloor or 1;
    self.boss_tog_1.gameObject:SetActive(true);

    destroyTab(self.togItems);
    self.togItems = {};
    for i = 1, #self.togBoss, 1 do
        local tog = newObject(self.boss_tog_1);
        tog.gameObject.name = "boss_tog_" .. i;
        local labelObj = GetChild(tog, "Label");
        if labelObj then
            local labelText = GetText(labelObj);
            labelText.text = string.format("F%s", DungeonModel.NumToChinese[i]);
            SetColor(labelText, 255, 255, 255)
        end
        tog.isOn = false;
        tog.transform:SetParent(self.togLayer.transform);
        SetLocalPosition(tog.transform, 0, 0, 0);
        SetLocalScale(tog.transform, 1, 1, 1);
        self.togItems[i] = tog;
    end
    if self.currentFloor and self.currentFloor ~= 1 and self.togItems[self.currentFloor] then
        self:HandleTogClick(self.togItems[self.currentFloor].gameObject)
        self.togItems[self.currentFloor].isOn = true;
        self:SetToggleColor(self.togItems[self.currentFloor])
    else
        self.togItems[1].isOn = true;
        self:HandleTogClick();
        self:SetToggleColor(self.togItems[1])
    end

    self.boss_tog_1.gameObject:SetActive(false);
end

function BeastIslandPanel:InitBoss(floor)
    destroyTab(self.items);

    self.items = {};
    self.selectedItemIndex = 1;
    local bosses = self.togBoss[self.currentFloor];
    if bosses then
        self.bossitem_0.gameObject:SetActive(true);
        table.sort(bosses, SeqCompareFun);
        for i = 1, #bosses, 1 do
            local bossTab = bosses[i];
            local isBeast = i <= 2;
            local item = DungeonScrollItem(newObject(self.bossitem_0), bossTab, isBeast);
            item.gameObject.name = "beastisland_item" .. i;
            self.items[i] = item;
            --item:SetJie();
            item:ShowCare(false);
            if i <= 2 then
                item:ShowPeace(false);
                item:ShowJie(false);
            else
                item:ShowPeace(bossTab.peace == 1);
            end

            item.transform:SetParent(self.Content.transform);
            SetLocalScale(item.transform, 1, 1, 1);
            SetLocalPosition(item.transform, 0, 0, 0);
            self:RefreshDungeonScrollItem(item);
            if bossTab.id == self.selectedBossid then
                self.selectedItemIndex = i;
            end
        end
        --self.items[self.selectedItemIndex]:SetSelected(true);
        local rt = self.Content:GetComponent("RectTransform");
        rt.sizeDelta = Vector2(rt.sizeDelta.x, #bosses * 103.2);
    end

    self.bossitem_0.gameObject:SetActive(false);

    for i = 1, #self.items, 1 do
        AddClickEvent(self.items[i].gameObject, handler(self, self.HandleSelectItem, self.items[i]));
    end

    self:HandleSelectItem(self.items[self.selectedItemIndex].gameObject, nil, nil, self.items[self.selectedItemIndex])
    --self.parentPanel:InitDrops(self.items[self.selectedItemIndex]);
    --self.parentPanel:SetBG(self.items[self.selectedItemIndex]);
    --self.parentPanel:InitModelView(self.items[self.selectedItemIndex]);

    self:SetQianWangText();

    local rt = self.Content:GetComponent("RectTransform");
    rt.anchoredPosition = Vector2(0, (self.selectedItemIndex - 1) * 60.2);

    if self.isCross then
        DungeonCtrl:GetInstance():RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_BEAST_CROSS, floor);
    else
        DungeonCtrl:GetInstance():RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_BEAST, floor);
    end

end

function BeastIslandPanel:AddEvent()

    AddClickEvent(self.mis_btn.gameObject, handler(self, self.HandleMissionBtn));

    local move_call_back = function()
        if not AutoFightManager:GetInstance():GetAutoFightState() then
            GlobalEvent:Brocast(FightEvent.AutoFight)
        end
    end
    local qianwang_callback = function(target, x, y)

    end
    AddClickEvent(self.qianwangBtn.gameObject, handler(self, self.HandleQianwang))

    local shuomingTip = function(target, x, y)
        if self.isCross then
            ShowHelpTip(HelpConfig.Dungeon.crossbeastIsland, true);
        else
            ShowHelpTip(HelpConfig.Dungeon.beastIsland, true);
        end
    end
    AddClickEvent(self.shuoming.gameObject, shuomingTip)

    for k, v in pairs(self.togItems) do
        AddValueChange(v.gameObject, handler(self, self.HandleTogClick, v));
    end

    self.events[#self.events + 1] = GlobalEvent.AddEventListener(DungeonEvent.WORLD_BOSS_LIST, handler(self, self.HaneleBossList));

    self.events[#self.events + 1] = GlobalEvent.AddEventListener(DungeonEvent.WORLD_BOSS_CARE, handler(self, self.HaneleBossCare));

    local update_task_call_back = function()
        self:HandleMission(true);
        --print2("update_task_call_back");
    end
    AddEventListenerInTab(TaskEvent.GlobalUpdateTask, update_task_call_back, self.events);

    AddEventListenerInTab(DungeonEvent.UpdateReddot, handler(self, self.CheckReddot), self.events);
end

function BeastIslandPanel:HandleQianwang(go, x, y)
    local beastInfo = nil;
    if self.isCross then
        beastInfo = DungeonModel:GetInstance().BossInfo[enum.BOSS_TYPE.BOSS_TYPE_BEAST_CROSS];
    else
        beastInfo = DungeonModel:GetInstance().BossInfo[enum.BOSS_TYPE.BOSS_TYPE_BEAST];
    end
    --local enterTimes = beastInfo.enter;

    local main_role = SceneManager:GetInstance():GetMainRole()
    local main_pos = main_role:GetPosition();

    local item = self.items[self.selectedItemIndex];
    if item then
        if item.data then
            local beasttiredConfig = Config.db_game["beast_tired"];
            if beasttiredConfig then
                local maxTired = String2Table(beasttiredConfig.val);
                if true then
                    --maxTired and maxTired[1] > self.model.beast_tired
                    if item.data then
                        local function ok_func()
                            local sceneid = item.data.scene;
                            local coord = String2Table(item.data.coord);
                            if sceneid then
                                if SceneManager:GetInstance():GetSceneId() == sceneid then
                                    local panel = lua_panelMgr:GetPanel(DungeonPanel);
                                    if panel then
                                        panel:Close();
                                    end
                                    if coord and #coord == 2 then
                                        OperationManager:GetInstance():TryMoveToPosition(nil, main_pos, { x = coord[1], y = coord[2] }, move_call_back);
                                    else
                                        if self.selectedItemIndex == 1 then
                                            Notify.ShowText("It needs to be explored by yourself");
                                        elseif self.selectedItemIndex == 2 then
                                            Notify.ShowText("It needs to be explored by yourself");
                                        end
                                    end
                                else
                                    DungeonCtrl:GetInstance():RequestEnterWorldBoss(sceneid);
                                    if coord and #coord == 2 then
                                        DungeonModel:GetInstance().SelectedDungeonID = item.data.id;
                                    end
                                end
                            end
                        end
                        if self.selectedItemIndex ~=1 and self.selectedItemIndex ~= 2  then
                            local boss_type = item.data.type
                            local boss_drop_limit = String2Table(Config.db_game["boss_drop_limit"].val)[1]
                            if table.containValue(boss_drop_limit, boss_type) then
                                local level = RoleInfoModel:GetInstance():GetRoleValue("level")
                                local creep = Config.db_creep[item.data.id]
                                if level-creep.level >= item.data.drop_lv then
                                    Dialog.ShowTwo("Tip","\nYour level is X higher than the boss and no loot will be available after defeating it.\nProceed?\nDaily fatigue left:"..self.curTired,"Confirm",ok_func,nil,"Cancel",nil,nil,"Don't notice me again today",false,nil,-10020)
                                    return
                                end
                            end
                            local power = RoleInfoModel:GetInstance():GetMainRoleData().power
                            if power < item.data.power  then
                                local str = string.format("\n\nThat boss has higher CP<color=#eb0000>(%s)</color> and challenging it might be difficult.Proceed anyway?\n   My CP：%s",item.data.power,power)
                                Dialog.ShowTwo("Tip",str,"Confirm",ok_func,nil,"Cancel",nil,nil,"Don't notice me again today",false,nil,-10021)
                                return
                            end
                        end

                        ok_func()

                    end
                else
                    Notify.ShowText("Fatigue is full");
                    return ;
                end
            else
                Notify.ShowText("Fatigue is full");
                return ;
            end
        end
    end
end

function BeastIslandPanel:CheckGoCondition()
    
end

function BeastIslandPanel:HandleTogClick(target, bool, v)
    if bool then
        for i = 1, #self.togItems, 1 do
            local labelObj = GetChild(self.togItems[i], "Label")
            if labelObj then
                local LabelText = GetText(labelObj)
                SetColor(LabelText, 255, 255, 255)
            end
            if self.togItems[i].gameObject == target then
                self.currentFloor = i;
                self:InitBoss(i);
                local LabelText = GetText(labelObj)
                SetColor(LabelText, 133, 132, 176)
            end
        end
    end
end

function BeastIslandPanel:SetToggleColor(target)
    if target then
        local labelObj = GetChild(target, "Label")
        if labelObj then
            local LabelText = GetText(labelObj)
            SetColor(LabelText, 133, 132, 176)
        end
    end
end
function BeastIslandPanel:HaneleBossCare(data)
    if self.items then
        for i = 1, #self.items, 1 do
            local bossTab = self.items[i].data;
            if bossTab.id == data.id then
                self.items[i]:SetIsCare(data.op == 1);
            end
        end
    end
end

function BeastIslandPanel:HaneleBossList(data)
    if self.items then
        self:RefreshCrystal(self.items[1]);
        self:RefreshMission(self.items[2]);
        for i = 1, #self.items, 1 do
            self:RefreshDungeonScrollItem(self.items[i]);
        end
        if self.selectedItemIndex >= 2 then
            self.parentPanel:RefreshProp(self.items[self.selectedItemIndex]);
        end
    end
    local main_role_data = RoleInfoModel:GetInstance():GetMainRoleData()
    --这个是疲劳值
    local beasttiredConfig = Config.db_game["beast_tired"];
    if beasttiredConfig then
        local maxTired = String2Table(beasttiredConfig.val);
        if maxTired then
            local main_role_data = RoleInfoModel:GetInstance():GetMainRoleData()
            if main_role_data then
                local buffer = main_role_data:GetBuffByID(enum.BUFF_ID.BUFF_ID_BEAST_BOSS_KILL_TIRED)
                local value = (buffer and buffer.value or 0)
                --local tired = 10;
                --if Config.db_game["boss_tired"] then
                --    local val = String2Table(Config.db_game["boss_tired"].val);
                --    tired = tonumber(val[1]);
                --end
                local curTired = SafetoNumber(maxTired[1]) - SafetoNumber(value)

                self.pilao.text = curTired .. "/" .. maxTired[1];

            end

            --if self.model.beast_tired >= maxTired[1] then
            --    self.pilao.text = (SafetoNumber(maxTired[1]) - SafetoNumber(self.model.beast_tired)) .. "/" .. maxTired[1];
            --else
            --    self.pilao.text = "<color=#15A144>" .. (SafetoNumber(maxTired[1]) - SafetoNumber(self.model.beast_tired)) .. "/" .. maxTired[1] .. "</color>";
            --end
        else
            self.pilao.text = self.model.beast_tired;
        end
        self.curTired = SafetoNumber(maxTired[1]) - SafetoNumber(self.model.beast_tired)
    else
        self.pilao.text = self.model.beast_tired;
    end

    --local main_role_data = RoleInfoModel:GetInstance():GetMainRoleData()
    --if main_role_data then
    --    local buffer = main_role_data:GetBuffByID(enum.BUFF_ID.BUFF_ID_BEAST_BOSS_KILL_TIRED)
    --    local value = (buffer and buffer.value or 0)
    --    local tired = 10;
    --    if Config.db_game["boss_tired"] then
    --        local val = String2Table(Config.db_game["boss_tired"].val);
    --        tired = tonumber(val[1]);
    --    end
    --    local curTired = SafetoNumber(tired) - SafetoNumber(value)
    --    if self.currentFloor > 0 then
    --        self.pilaoText.text = "首领疲劳: " .. curTired .. "/" .. tired;
    --    else
    --        self.pilaoText.text = "不减少疲劳值"
    --    end
    --end

    --这个是大水晶
    local beastcollectConfig = Config.db_game["beast_collect"];
    if beastcollectConfig then
        local maxCollect = String2Table(beastcollectConfig.val);
        if maxCollect then
            local main_role_data = RoleInfoModel:GetInstance():GetMainRoleData()
            if main_role_data then
                local buffer = main_role_data:GetBuffByID(enum.BUFF_ID.BUFF_ID_BEAST_BOSS_COLL_TIRED)
                local value = (buffer and buffer.value or 0)
                --local tired = 10;
                --if Config.db_game["boss_tired"] then
                --    local val = String2Table(Config.db_game["boss_tired"].val);
                --    tired = tonumber(val[1]);
                --end
               -- local curTired = SafetoNumber(maxCollect[1]) - SafetoNumber(value)

               -- self.pilao.text = curTired .. "/" .. maxCollect[1];
                self.crystalleft.text = SafetoNumber(value) .. "/" .. maxCollect[1];

            end

           -- self.crystalleft.text = self.model.beast_coll .. "/" .. maxCollect[1];
        else
            self.crystalleft.text = self.model.beast_coll;
        end
    else
        self.crystalleft.text = self.model.beast_coll;
    end



    --这个是小水晶的
    --local beastcollectConfig2 = Config.db_game["beast_collect2"];
    --if beastcollectConfig2 then
    --    local maxCollect = String2Table(beastcollectConfig2.val);
    --    if maxCollect then
    --        self.crystalleft.text = self.model.beast_coll .. "/" .. maxCollect[1];
    --    else
    --        self.crystalleft.text = self.model.beast_coll;
    --    end
    --else
    --    self.crystalleft.text = self.model.beast_coll;
    --end


    self.beastdatalabel.text = "Next mirage island distribution:";

    self:InitShuoming();

end

function BeastIslandPanel:RefreshDungeonScrollItem(item)
    local bossTab = item.data;

    local bossinfo = DungeonModel:GetInstance():GetDungeonBossInfo(self.bossType, bossTab.id);
    if bossinfo then
        local time = bossinfo.born;--1541494877
        item:StartSechudle(time);
        item:SetIsCare(bossinfo.care);
        item:RefreshBeastIslandNum();
    end
end

function BeastIslandPanel:RefreshCrystal(item)
    if item then
        local bossTab = item.data;

        local bossinfo = DungeonModel:GetInstance():GetDungeonBossInfo(self.bossType, bossTab.id);
        if bossinfo then
            local time = bossinfo.born;--1541494877
            self:StartSechudle(time);
            item:SetIsCare(bossinfo.care);
            item:RefreshBeastIslandNum();
            self.crystal_num.text = "Left" .. tostring(bossTab.name) .. "Amount：<color=#27EF6B>" .. (bossinfo.num or 0) .. "</color>";
        end
    end
end
function BeastIslandPanel:StartSechudle(time)
    self.time = time;
    self.beastdate.text = "";
    local timeTab = TimeManager:GetLastTimeData(os.time(), time);
    if timeTab then
        if self.mission_schedule then
            GlobalSchedule:Stop(self.mission_schedule);
        end
        self.mission_schedule = GlobalSchedule.StartFun(handler(self, self.CountTime), 1, -1);
        self:CountTime();
    else
        self.beastdate.text = "Refreshed";
    end
end

function BeastIslandPanel:CountTime()
    local timeTab = TimeManager:GetLastTimeData(os.time(), self.time);
    local timestr = "";
    if timeTab then
        timeTab.min = timeTab.min or 0;
        timeTab.hour = timeTab.hour or 0;
        if timeTab.hour then
            timestr = timestr .. string.format("%02d", timeTab.hour) .. ":";
        end
        if timeTab.min then
            timestr = timestr .. string.format("%02d", timeTab.min) .. ":";
        end
        if timeTab.sec then
            timestr = timestr .. string.format("%02d", timeTab.sec);
        end
        self.beastdate.text = timestr;
    else
        if self.mission_schedule then
            GlobalSchedule:Stop(self.mission_schedule);
        end
        --self.beastdate.gameObject:SetActive(false);
        self.mission_schedule = nil;
        self.beastdate.text = "Refreshed";
    end
end

function BeastIslandPanel:RefreshMission()

end

function BeastIslandPanel:HandleSelectItem(target, x, y, v)
    local item = nil;
    for i = 1, #self.items, 1 do
        if self.items[i].gameObject == target then
            item = self.items[i];
            self.selectedItemIndex = i;
        end
        self.items[i]:SetSelected(false);
    end
    item:SetSelected(true);
    self:ShowCrystal(false);
    self:ShowMission(false);
    self.parentPanel:InitModelView(item);
    if self.selectedItemIndex == 1 then
        self:HandleCrystal();
        self:ShowCrystal(true);
    elseif self.selectedItemIndex == 2 then
        self.parentPanel:BeastCallBack();
        self:HandleMission();
        self:ShowMission(true);
    else
        self.parentPanel:DropCallBack();
        self.parentPanel:InitDrops(item);
        self.parentPanel:SetBG(item);

        self.parentPanel:RefreshProp(item);
    end

    local tab = DungeonModel:GetInstance():GetDungeonBossInfo(self.bossType, item.data.id);
    if tab then
        self.parentPanel:SetIsCare(tab.care)
    else
        self.parentPanel:SetIsCare(false);
    end
end

function BeastIslandPanel:SetQianWangText()
    if self.items then
        local data = self.items[self.selectedItemIndex].data;
        self.qianwangText.text = "Go Now";--"V" .. (data.floor + 3) ..
    end
end

function BeastIslandPanel:StopAllSchedules()
    for i = 1, #self.schedules, 1 do
        GlobalSchedule:Stop(self.schedules[i]);
    end
    self.schedules = {};
end

function BeastIslandPanel:HandleCrystal()
    print2("BeastIslandPanel:HandleCrystal");
    self.parentPanel:BeastCallBack();
end

function BeastIslandPanel:ShowCrystal(bool)
    bool = toBool(bool);
    SetGameObjectActive(self.crystal, bool);
    SetGameObjectActive(self.mission, not bool);
    local data = self.items[self.selectedItemIndex].data;
    if data then
        self.crystal_tip.text = data.name .. "Refresh randomly\nCollect so you can get beast gear";
        if data.seq == 1 then
            self.crystallabel.text = "Crystal Essence:";--data.name
        end
    end

end

function BeastIslandPanel:ShowMission(bool)
    bool = toBool(bool);
    SetGameObjectActive(self.mission, bool);
end

function BeastIslandPanel:HandleMission()
    print2("BeastIslandPanel:HandleMission");

    local task_type = nil;
    local task_type2 = nil;
    if self.isCross then
        task_type = enum.TASK_TYPE.TASK_TYPE_PREV4;
        task_type2 = enum.TASK_TYPE.TASK_TYPE_LOOP4;
    else
        task_type = enum.TASK_TYPE.TASK_TYPE_PREV3;
        task_type2 = enum.TASK_TYPE.TASK_TYPE_LOOP3;
    end
    local taskID = TaskModel:GetInstance():GetTaskIdByType(task_type);
    local taskID2 = TaskModel:GetInstance():GetTaskIdByType(task_type2);
    local taskConfig;
    local info;
    if taskID then
        taskConfig = Config.db_task[taskID];
        info = TaskModel:GetInstance():GetTask(taskID)
        if taskConfig then
            self.mis_text.text = taskConfig.name .. "<color=#27EF6B>(0/10)</color>";
            self.leftmis.text = 10;
        end
    elseif taskID2 then
        local realTaskID = TaskModel:GetInstance():GetTaskIdByType(enum.TASK_TYPE.TASK_TYPE_BEAST);
        local realTaskConfig = Config.db_task[realTaskID];
        taskConfig = Config.db_task[taskID2];
        local goals = String2Table(taskConfig.goals)
        local maxNum = tonumber(goals[1][3]);
        info = TaskModel:GetInstance():GetTask(taskID2);
        local current = info.count or 0;
        if taskConfig and realTaskConfig then
            self.mis_text.text = string.format("%s<color=#27EF6B>(%s/%s)</color>", realTaskConfig.name, current, maxNum);
        elseif taskConfig then
            self.mis_text.text = string.format("%s<color=#27EF6B>(%s/%s)</color>", taskConfig.desc, current, maxNum);
        end
        self.leftmis.text = maxNum - current;
    end
end

function BeastIslandPanel:HandleMissionBtn(go, x, y)
    if self.isCross then
        local task_type = enum.TASK_TYPE.TASK_TYPE_PREV4
        local task_type2 = enum.TASK_TYPE.TASK_TYPE_LOOP4;
        local taskID2 = TaskModel:GetInstance():GetTaskIdByType(task_type2);
        local taskID = TaskModel:GetInstance():GetTaskIdByType(task_type);
        if taskID then
            TaskModel:GetInstance():DoTaskByType(task_type)
        elseif taskID2 then
            self:HandleQianwang();
        end
    else
        local task_type = enum.TASK_TYPE.TASK_TYPE_PREV3
        local task_type2 = enum.TASK_TYPE.TASK_TYPE_LOOP3
        --TaskModel:GetInstance():DoTaskByType(task_type)
        local taskID = TaskModel:GetInstance():GetTaskIdByType(task_type);
        local taskID2 = TaskModel:GetInstance():GetTaskIdByType(task_type2);
        if taskID then
            TaskModel:GetInstance():DoTaskByType(task_type)
        elseif taskID2 then
            self:HandleQianwang();
        end
    end
end

function BeastIslandPanel:GetSelectedID()
    if self.items and self.items[self.selectedItemIndex] and self.items[self.selectedItemIndex].data then
        return self.items[self.selectedItemIndex].data.id;
    end
    return 0;
end

function BeastIslandPanel:GetSelectedBossType()
    if self.isCross then
        return enum.BOSS_TYPE.BOSS_TYPE_BEAST_CROSS;
    else
        return enum.BOSS_TYPE.BOSS_TYPE_BEAST;
    end
end

function BeastIslandPanel:CheckReddot()
    local tab = DungeonModel:GetInstance().red_dot_list;

    if self.isCross then
        if tab[enum.BOSS_TYPE.BOSS_TYPE_BEAST_CROSS] and self.qianwangBtn_reddot then
            self.qianwangBtn_reddot:SetRedDotParam(true);
        else
            self.qianwangBtn_reddot:SetRedDotParam(false);
        end
    else
        if tab[enum.BOSS_TYPE.BOSS_TYPE_BEAST] and self.qianwangBtn_reddot then
            self.qianwangBtn_reddot:SetRedDotParam(true);
        else
            self.qianwangBtn_reddot:SetRedDotParam(false);
        end
    end

end