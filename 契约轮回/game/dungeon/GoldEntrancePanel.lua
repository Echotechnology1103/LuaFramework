---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 18/11/19 17:34
---
GoldEntrancePanel = GoldEntrancePanel or class("GoldEntrancePanel", BaseItem)
local this = GoldEntrancePanel

GoldEntrancePanel.MAX_BUY_TIMES = 2;

function GoldEntrancePanel:ctor(parent_node, layer)
    self.abName = "dungeon"
    self.image_ab = "dungeon_image";
    self.assetName = "GoldEntrancePanel"
    self.layer = "UI"
    self.panel_type = 2;
    self.events = {};
    self.currentSelect = nil;
    GoldEntrancePanel.super.Load(self);
    self.model = DungeonModel:GetInstance()

    self.dungeon_type = enum.SCENE_STYPE.SCENE_STYPE_DUNGE_COIN
    DungeonCtrl:GetInstance():RequestDungeonPanel(self.dungeon_type)
end

function GoldEntrancePanel:dctor()
    destroyTab(self.items);

    GlobalEvent:RemoveTabListener(self.events);
    self.staritems = nil;
    --if self.award then
    --    self.award:destroy();
    --end
    --self.award = nil;
    destroyTab(self.awards);
    self.awards = nil;

    if self.enter_btn_reddot then
        self.enter_btn_reddot:destroy();
    end
    self.enter_btn_reddot = nil;
end

function GoldEntrancePanel:Open(tabIndex)

end

function GoldEntrancePanel:LoadCallBack()
    self.nodes = {
        "prop/txt/text_2", "prop/txt/text_1", "prop/icon", "prop/txt/level", "prop/stars/star_1", "scroll/scroll_item",
        "scroll/ScrollView/Viewport/Content", "prop/txt/text_3", "prop/txt/saodang_times", "prop/txt/left_time",
        "prop/stars/star_3", "saodang_btn", "enter_btn", "prop/stars/star_2", "entrance_bg", "prop/input_bg_2/add_left_btn",
    }
    self:GetChildren(self.nodes);

    SetLocalPosition(self.transform, 0, 0, 0);

    self:InitUI();
    self:AddEvent();

    if self.model.dungeon_info_list[self.dungeon_type] then
        self:UpdateData(self.model.dungeon_info_list[self.dungeon_type]);
    end
    local res = "dungeon_gold_map_bg";
    lua_resMgr:SetImageTexture(self, self.entrance_bg, "iconasset/icon_big_bg_" .. res, res, false);
end

function GoldEntrancePanel:InitUI()
    self.entrance_bg = GetImage(self.entrance_bg);
    self.level = GetText(self.level);
    self.text_1 = GetText(self.text_1);
    self.text_2 = GetText(self.text_2);
    self.text_3 = GetText(self.text_3);

    self.saodang_btn = GetButton(self.saodang_btn);
    self.enter_btn = GetButton(self.enter_btn);

    self.left_time = GetText(self.left_time);
    self.saodang_times = GetText(self.saodang_times);

    self.staritems = {};--三颗星
    for i = 1, 3, 1 do
        self.staritems[i] = GetToggle(self["star_" .. i]);
        self.staritems[i].isOn = false;
    end

    self:InitTogs();


    --self.award = AwardItem(self.icon);
    --self.award:SetData(90010005, 0);

    self.enter_btn_reddot = RedDot(self.enter_btn.transform, nil, RedDot.RedDotType.Nor)
    self.enter_btn_reddot:SetPosition(68, 22)
    --self.enter_btn_reddot:SetRedDotParam(true);

    self:InitAwards();
end

function GoldEntrancePanel:InitAwards()
    destroyTab(self.awards);
    self.awards = {};

    if self.currentSelect then
        local data = self.currentSelect.data

        if data then
            local tab = LString2Table(data.show);

            for k,v in pairs(tab) do
                local aitem = GoodsIconSettorTwo(self.icon.transform)
                local param = {}
                param["item_id"] = v[1];
                param["num"] = v[2];
                param["can_click"] = true;
                param["bind"] = true;
                param["size"] = { x = 80, y = 80 }
                aitem:SetIcon(param);
                table.insert(self.awards , aitem);
            end
        end
    end

end

function GoldEntrancePanel:InitTogs()
    destroyTab(self.items);
    self.items = {};

    self.scroll_item.gameObject:SetActive(true);

    local selectedItemIndex = 1;
    local level = RoleInfoModel:GetInstance():GetMainRoleLevel();

    for i = 1, #Config.db_dunge_coin, 1 do
        local item = GoldEntranceItem(newObject(self.scroll_item), Config.db_dunge_coin[i]);
        item.gameObject.name = "GoldEntranceItem_" .. i;

        if Config.db_dunge_coin[i].level and level >= tonumber(Config.db_dunge_coin[i].level) then
            selectedItemIndex = i;
        end
        self.items[i] = item;
        item.transform:SetParent(self.Content.transform);
        SetLocalScale(item.transform, 1, 1, 1);
        SetLocalPosition(item.transform, 18, 0, 0);
        self:RefreshDungeonCoinItem(self.items[i]);
        self.items[i]:SetSelected(false);
    end
    self.items[selectedItemIndex]:SetSelected(true);
    self.currentSelect = self.items[selectedItemIndex];
    self:UpdateProp(self.items[selectedItemIndex]);
    local rt = self.Content:GetComponent("RectTransform");
    rt.sizeDelta = Vector2(rt.sizeDelta.x, #Config.db_dunge_coin * 79);
    SetAnchoredPosition(rt, 0, 0)
    --暂时只有5个,不用帮忙移位
    --if selectedItemIndex <= 3 then
    --    SetLocalPositionY(self.Content.transform , 0);
    --else
    --    SetLocalPositionY(self.Content.transform , (50 + (selectedItemIndex - 3) * 80));
    --end
    self.scroll_item.gameObject:SetActive(false);
end

function GoldEntrancePanel:AddEvent()
    AddClickEvent(self.saodang_btn.gameObject, handler(self, self.HandleSaoDang));

    AddClickEvent(self.enter_btn.gameObject, handler(self, self.HandleEnter));

    AddClickEvent(self.add_left_btn.gameObject, handler(self, self.HandleAddLeft));

    for k, v in pairs(self.items) do
        AddClickEvent(v.gameObject, handler(self, self.HandleItemClick))
    end

    GlobalEvent.AddEventListenerInTab(DungeonEvent.DUNGEON_SWEEP_REFRESH, handler(self, self.UpdateTimes), self.events);

    local function call_back(dungeon_type, data)
        if dungeon_type == self.dungeon_type then
            self:UpdateData(data)
        end
    end
    self.events[#self.events + 1] = GlobalEvent:AddListener(DungeonEvent.UpdateDungeonData, call_back)

    -- 后面改
    local function call_back(dungeon_type, data)
        if dungeon_type == self.dungeon_type then
            self:UpdateInfo(data)
        end
    end
    self.events[#self.events + 1] = GlobalEvent:AddListener(DungeonEvent.UpdateDungeonTime, call_back)

    AddEventListenerInTab(DungeonEvent.UpdateReddot, handler(self, self.UpdateReddot), self.events);
end

--@ling autofun
function GoldEntrancePanel:HandleAddLeft()
    local data = self.model.dungeon_info_list[self.dungeon_type]
    if data then
        lua_panelMgr:GetPanelOrCreate(DungeonEntranceBuyTip):Open(data.info, enum.VIP_RIGHTS.VIP_RIGHTS_DUNGE_COIN_BUY);
    end
end

--@ling autofun
function GoldEntrancePanel:HandleItemClick(target, x, y)
    for k, v in pairs(self.items) do
        if v.gameObject == target then
            v:SetSelected(true);
            self:UpdateProp(v);
            self.currentSelect = v;
            self:InitAwards();
        else
            v:SetSelected(false);
        end
    end
end

function GoldEntrancePanel:RefreshDungeonCoinItem(item)
    local data = item.data;

    local roleLevel = RoleInfoModel:GetInstance():GetMainRoleLevel();
    if data.level > roleLevel then
        item:SetOpen(false);
    else
        item:SetOpen(true);
    end

    local allData = self.model.dungeon_info_list[self.dungeon_type]
    if allData then
        local leveltab = allData.level or {};
        if leveltab[data.floor] then
            item:SetStar(leveltab[data.floor]);
        end
    end

end
--收到后端数据更新
function GoldEntrancePanel:UpdateData(allData)
    local leveltab = allData.level or {};
    for k, v in pairs(self.items) do
        local item = v;
        local data = item.data;
        if leveltab[data.floor] then
            item:SetStar(leveltab[data.floor]);
        end
    end
    local data = self.model.dungeon_info_list[self.stype]
    local info = allData.info;
    if info.info then
        info = info.info;
    end
    if info.rest_times > 0 then
        self.left_time.text = "Attempts left:" .. info.rest_times .. "/" .. info.max_times;
    else
        self.left_time.text = "Attempts left:<color=#ff0000>" .. info.rest_times .. "</color>/" .. info.max_times;
    end

    if self.currentSelect then
        self:UpdateProp(self.currentSelect);
    end

end
--收到后端数据更新
function GoldEntrancePanel:UpdateInfo(info)
    if info then
        if info.info then
            info = info.info;
        end
        if info.rest_times > 0 then
            self.left_time.text = "Attempts left:" .. info.rest_times .. "/" .. info.max_times;
        else
            self.left_time.text = "Attempts left:<color=#ff0000>" .. info.rest_times .. "</color>/" .. info.max_times;
        end
    end
end

function GoldEntrancePanel:UpdateTimes()
    local allData = self.model.dungeon_info_list[self.dungeon_type]
    if not allData then
        return
    end
    local tab = Config.db_dunge[allData.id];
    if tab then
        local sweep = String2Table(tab.sweep_cost);
        if sweep and #sweep > 1 then
            local num = BagModel:GetInstance():GetItemNumByItemID(sweep[1]);
            if num >= sweep[2] then
                self.saodang_times.text = num .. "/" .. sweep[2];
            else
                self.saodang_times.text ="<color=#ff0000>" .. num .. "</color>/" .. sweep[2]
            end
        end
    end
    local info = allData.info;
    if info then
        if info.info then
            info = info.info;
        end
        if info.rest_times > 0 then
            self.left_time.text = "Attempts left:" .. info.rest_times .. "/" .. info.max_times;
        else
            self.left_time.text = "Attempts left:<color=#ff0000>" .. info.rest_times .. "</color>/" .. info.max_times;
        end
    end

end
--[[
等级要求 : <color=#DA38DC>440</color>级以上

--]]
function GoldEntrancePanel:UpdateProp(item)
    self.level.text = "Level Required : <color=#DA38DC>" .. item.data.level .. "At least Lv.</color>";
    local tab = String2Table(item.data.rating);
    self.text_1.text = "Clear Dungeon";
    if tab and #tab > 1 then
        self.text_2.text = "Defeat<color=#13C110>" .. tostring(tab[1]) .. "</color>Vault guards";
        self.text_3.text = "Defeat<color=#13C110>" .. tostring(tab[2]) .. "</color>Vault guards";
    end
    self:SetStar(0);

    local allData = self.model.dungeon_info_list[self.dungeon_type]
    if not allData then
        return
    end
    local tab = Config.db_dunge[allData.id];
    if tab then
        local sweep = String2Table(tab.sweep_cost);
        if sweep and #sweep > 1 then
            local num = BagModel:GetInstance():GetItemNumByItemID(sweep[1]);
            if num >= sweep[2] then
                self.saodang_times.text = num .. "/" .. sweep[2];
            else
                self.saodang_times.text ="<color=#ff0000>" .. num .. "</color>/" .. sweep[2]
            end
        end
    end

    if allData then
        local leveltab = allData.level or {};
        if leveltab[item.data.floor] then
            self:SetStar(leveltab[item.data.floor]);

            --if leveltab[item.data.floor] == 3 then
            --    self.saodang_btn.enabled = true;
            --    self.saodang_btn.interactable = true;
            --else
            --    self.saodang_btn.enabled = false;
            --    self.saodang_btn.interactable = false;
            --end
        else
            --self.saodang_btn.enabled = false;
            --self.saodang_btn.interactable = false;
        end
    else
        --self.saodang_btn.enabled = false;
        --self.saodang_btn.interactable = false;
    end


end
GoldEntrancePanel.star = 0;
function GoldEntrancePanel:SetStar(num)
    self.star = num;
    for i = 1, 3, 1 do
        if self.staritems[i] then
            self.staritems[i].isOn = false;
        end
    end
    local bs = BitState(num);
    for i = 1, 3, 1 do
        self.staritems[i].isOn = bs:Contain(BitState.State[i]);
    end
end
--
function GoldEntrancePanel:HandleSaoDang(target, x, y)
    --if self.saodang_btn.enabled then
   --[[ if RoleInfoModel:GetInstance():GetMainRoleLevel() < 300 then
        Notify.ShowText("300级开放扫荡功能");
        return;
    end--]]
    if self.star < 3 then
        Notify.ShowText("Farm available after earning a 3-star rating");
        return ;
    end
    local data = self.model.dungeon_info_list[self.dungeon_type]
    if not data then
        return
    end

    local tab = Config.db_dunge[data.id];
    if tab then
        local sweep = String2Table(tab.sweep_cost);
        if sweep and #sweep > 1 then
            local num = BagModel:GetInstance():GetItemNumByItemID(sweep[1]);
            if sweep[2] > num then
                Notify.ShowText("Not enough tickets");
                return ;
            end
        end
    end
    if self.currentSelect then
        DungeonCtrl:GetInstance():RequestSweep(data.stype, self.currentSelect.data.floor);
    else
        DungeonCtrl:GetInstance():RequestSweep(data.stype, 1);
    end

    --end
end

--@ling autofun
function GoldEntrancePanel:HandleEnter(target, x, y)
    local data = self.model.dungeon_info_list[self.dungeon_type]
    if data then
        if data.info.rest_times <= 0 then
            Notify.ShowText("Not enough attempts left");
            return ;
        end

        if not self.currentSelect then
            Notify.ShowText("Please select a dungeon");
            return ;
        end

        local tab = self.currentSelect.data;
        local roleLevel = RoleInfoModel:GetInstance():GetMainRoleLevel();
        if tab.level > roleLevel then
            Notify.ShowText("Insufficient level, active dungeon first");
            return ;
        end
        local levelTab = data.level;
        if not levelTab then
            Notify.ShowText("Please start from stage 1");
            return ;
        else
            if tab.floor > 1 then
                if not levelTab[tab.floor - 1] then
                    Notify.ShowText("Please clear the previous stage first");
                    return ;
                else
                    if levelTab[tab.floor - 1] == 0 then
                        Notify.ShowText("Please clear the previous stage first");
                        return ;
                    end
                end
            end
        end

        local config = Config.db_dunge[data.id];
        local okFun = function()
            --服务端定一个协议
            DungeonCtrl:GetInstance():RequestEnterDungeon(self.dungeon_type, tab.floor)
        end

        okFun();
    else
        Notify.ShowText("Unable to find Gold Dungeon configuration, please contact engineer");
    end
end

function GoldEntrancePanel:UpdateReddot()
    local tab = DungeonModel:GetInstance().red_dot_list;
    if tab and tab[self.dungeon_type] then
        self.enter_btn_reddot:SetRedDotParam(true);
    else
        self.enter_btn_reddot:SetRedDotParam(false);
    end
end

