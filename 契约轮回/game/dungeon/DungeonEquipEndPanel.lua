---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2018/10/10 10:53
---
DungeonEquipEndPanel = DungeonEquipEndPanel or class("DungeonEquipEndPanel", BasePanel)
local this = DungeonEquipEndPanel

function DungeonEquipEndPanel:ctor()
    self.abName = "dungeon";
    self.image_ab = "dungeon_image";
    self.assetName = "DungeonEquipEndPanel"
    self.layer = "UI"

    self.model = DungeonModel.GetInstance()
    self.events = {};
    self.schedules = {};


    --DungeonCtrl:GetInstance().DungeonEquipEndPanel = self;
end

function DungeonEquipEndPanel:dctor()
    GlobalEvent:RemoveTabListener(self.events);
    if self.event_id_1 then
        self.model:RemoveListener(self.event_id_1)
        self.event_id_1 = nil
    end
    self:StopAllSchedules()
    self.model = nil;
    if self.enditem then
        self.enditem:destroy();
    end
    destroyTab(self.items);
    self.items = nil;
end

function DungeonEquipEndPanel:Open(data)
    self.data = data;
    WindowPanel.Open(self)
end

function DungeonEquipEndPanel:LoadCallBack()
    self.nodes = {
        "endCon", "awardCon", "zhandoujiangli",
    }
    self:GetChildren(self.nodes)
    local orderIndex = LayerManager:GetInstance():GetLayerOrderByName(self.layer)
    self:SetOrderIndex(orderIndex + 5)

    SetLocalPosition(self.transform, 0, 0, 0)
    --AddBgMask(self.gameObject, 0, 0, 0, 230);
    self:Init();

    self:AddEvent();

    if AutoFightManager:GetInstance():GetAutoFightState() then
        GlobalEvent:Brocast(FightEvent.AutoFight)
    end
end

--[[
{
	["coin"]=0,
	["star"]=0,
	["floor"]=1,
	["isClear"]=false
}



--]]
function DungeonEquipEndPanel:Init()
    print2(Table2String(self.data));
    self.enditem = DungeonEndItem(self.transform, self.data);
    self.enditem:StartAutoClose(50);

    self.grid = GetGridLayoutGroup(self.awardCon);
    self.grid.cellSize = { x = 80, y = 80 };
    self.grid.spacing = { x = 12, y = 10 };
    if self.data then
        local index = 1;
        destroyTab(self.items);
        self.items = {};

        local rewards1 = {};
        local rewards2 = {};

        for k, v in pairs(self.data.reward) do
            local itemConfig = Config.db_item[k];
            if itemConfig and itemConfig.type == enum.ITEM_TYPE.ITEM_TYPE_EQUIP then
                table.insert(rewards1, k);
            else
                table.insert(rewards2, k);
            end
        end
        --print2(Table2String(rewards1));
        table.sort(rewards1, function(a, b)
            local color1 = string.sub(a, -1, -1);
            local color2 = string.sub(b, -1, -1);
            local star1 = string.sub(a, -2, -2);
            local star2 = string.sub(b, -2, -2);

            if color1 + star1 == color2 + star2 then
                if color1 == color2 and star1 == star2 then
                    return false;
                else
                    return star1 > star2
                end

            elseif color1 > color2 then
                return true;
            else
                return false;
            end

        end);
        --print2(Table2String(rewards1));

        for i = 1, #rewards1 < 4 and #rewards1 or 4 do
            local k = rewards1[i];
            local v = self.data.reward[k];
            --local item = AwardItem(self.awardCon);
            --item:SetData(k, 0);
            --item:AddClickTips(self.transform);

            local item = GoodsIconSettorTwo(self.awardCon)
            local param = {}
            --param["model"] = self.model;
            param["item_id"] = k;
            param["num"] = v;
            param["can_click"] = true;
            param["size"] = { x = 60, y = 60 }
            item:SetIcon(param);
            self.items[index] = item;
            index = index + 1;
        end

        for i = 1, #rewards2 < 4 and #rewards2 or 4 do
            local k = rewards2[i];
            local v = self.data.reward[k];
            --local item = AwardItem(self.awardCon);
            --item:SetData(k, 0);
            --item:AddClickTips(self.transform);
            local item = GoodsIconSettorTwo(self.awardCon)
            local param = {}
            --param["model"] = self.model;
            param["item_id"] = k;
            param["num"] = v;
            param["can_click"] = true;
            param["size"] = { x = 60, y = 60 }
            item:SetIcon(param);
            self.items[index] = item;
            index = index + 1;
        end

        --for k, v in pairs(self.data.reward) do
        --    local itemConfig = Config.db_item[k];
        --    if k ~= 90010008 then
        --        local item = AwardItem(self.awardCon);
        --        item:SetData(k, v);
        --        item:AddClickTips(self.transform);
        --        self.items[index] = item;
        --        index = index + 1;
        --    end
        --end
        -- 成功界面
        if self.data.isClear == true then
            if self.data.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EQUIP then

            end
            -- 失败界面
        else
            if self.data.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EQUIP then

            end
        end
    end
end

local closeTime = 5;
function DungeonEquipEndPanel:AddEvent()

    local function closeCallBack()
        SceneControler:GetInstance():RequestSceneLeave();
        self:Close();
    end
    self.enditem:SetAutoCloseCallBack(closeCallBack);

    local time = 5;
    local dungeTab = Config.db_dunge[SceneManager:GetInstance():GetSceneId()];
    if dungeTab then
        time = dungeTab.exit_cd;
    end
    time = time or 5;
    self.enditem:StartAutoClose(time);

    local function call_back()
        SceneControler:GetInstance():RequestSceneLeave();
        self:Close()
    end

    self.enditem:SetCloseCallBack(closeCallBack);

    self.events[#self.events + 1] = GlobalEvent:AddListener(DungeonEvent.LEAVE_DUNGEON_SCENE, call_back)

    self.event_id_1 = self.model:AddListener(DungeonEvent.ResEnterDungeonInfo, call_back)
end

function DungeonEquipEndPanel:StopAllSchedules()
    for i = 1, #self.schedules, 1 do
        GlobalSchedule:Stop(self.schedules[i]);
    end
    self.schedules = {};
end