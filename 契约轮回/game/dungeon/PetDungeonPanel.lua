---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2018/10/9 17:34
--- 经验副本的UI
PetDungeonPanel = PetDungeonPanel or class("PetDungeonPanel", DungeonMainBasePanel)
local this = PetDungeonPanel

PetDungeonPanel.Position = {
    { x = 2522, y = 1559 },
    { x = 3730, y = 1735 },
    { x = 5075, y = 1611 },
}

function PetDungeonPanel:ctor()
    self.abName = "dungeon"
    self.imageAb = "dungeon_image";
    self.assetName = "PetDungeonPanel"
    self.level = 1;
    self.events = {};
    self.schedules = {};
end

function PetDungeonPanel:dctor()
    self.model = nil;
    GlobalEvent:RemoveTabListener(self.events);
    self:StopAllSchedules();
    self.level = nil;
    self.cur_wave = nil;
    self.max_wave = nil;
    self.end_time = nil;
    self.wave_etime = nil;

    if self.startSchedule then
        GlobalSchedule.StopFun(self.startSchedule);
    end
    self.startSchedule = nil;
    self.startDungeonTime = nil;
    destroyTab(self.crystals);
    self.crystals = nil;

    self:KillSchedules();

    if self.petschedules then
        GlobalSchedule.StopFun(self.petschedules);
    end
    self.petschedules = nil;
end

function PetDungeonPanel:Open(data)
    WindowPanel.Open(self)
    self.data = data;
end

function PetDungeonPanel:LoadCallBack()
    self.nodes = {
        "endTime/endTitleTxt", "endTime", "hardshow",
        "hardshow/round", "hardshow/dun_name", "hardshow/killcd", "hardshow/current", --"hardshow/kill_tip_bg1",
        "hardshow/nextAwardCon", "hardshow/more_gain_label", "hardshow/currentAwardCon", "hardshow/current_gain_label",
        "hardshow/nextAwardCon/Viewport/Content2", "hardshow/currentAwardCon/Viewport/Content",
        "startTime", "startTime/time",
        "crystal", "crystal/crystal_item_2", "crystal/crystal_item_1", "crystal/crystal_item_3",
        "killtip", "killtip/kill_tip_num", "killtip/kill_tip", "killtip/kill_tip_bg",
    }
    self:GetChildren(self.nodes);

    SetLocalPosition(self.transform, 0, 0, 0)

    self:Init();
    self:AddEvent();

    SceneManager:GetInstance():SetMainRoleRotateY(45);

    SetAlignType(self.hardshow.transform, bit.bor(AlignType.Left, AlignType.Top))


    SetAlignType(self.crystal.transform,bit.bor(AlignType.Right, AlignType.Null))


    self:StartDungeonCD();

    --为了红点
    DungeonCtrl:GetInstance():RequestDungeonPanel(enum.SCENE_STYPE.SCENE_STYPE_DUNGE_PET);
end

function PetDungeonPanel:StartDungeonCD()
    SetGameObjectActive(self.startTime, true);
    SetGameObjectActive(self.endTime.gameObject, false);
    local sceneInfo = SceneManager:GetInstance():GetSceneInfo();
    if sceneInfo then
        local dungeConfig = Config.db_dunge[sceneInfo.scene];
        if dungeConfig then
            local prep = dungeConfig.prep;
            self.startDungeonTime = os.time() + prep;

            if self.startSchedule then
                GlobalSchedule.StopFun(self.startSchedule);
            end
            self.endDungeonStartCountDownFun = function()
                if self.startSchedule then
                    GlobalSchedule.StopFun(self.startSchedule);
                end
                self.startSchedule = nil;
                SetGameObjectActive(self.endTime.gameObject, true);
            end
            self.startSchedule = GlobalSchedule.StartFun(handler(self, self.HandleDungeonStartCountDown), 0.2, -1);
        end
    end
end

function PetDungeonPanel:RequestInfo()
    --print2("请求经验副本信息");
    DungeonCtrl:GetInstance():RequeseExpDungeonInfo();
end



--killcd
--<color=#5BD022>58</color>秒内击败敌人
--首领难度将提升到:<color=#5BD022>普通</color>
function PetDungeonPanel:Init()
    self.level = 1;
    self.endTitleTxt = GetText(self.endTitleTxt);--副本倒计时: 07:21
    self.round = GetText(self.round);--当前回合:    <color=#5BD022>1/5</color>
    self.dun_name = GetText(self.dun_name);
    self.killcd = GetText(self.killcd);
    self.current = GetText(self.current);--首领难度:    <color=#ff0000>炼狱</color>
    self.kill_tip_num = GetText(self.kill_tip_num);
    self.kill_tip_bg = GetImage(self.kill_tip_bg);
    SetGameObjectActive(self.kill_tip_bg.gameObject, false);
    self.time = GetText(self.time);

    self.more_gain_label = GetText(self.more_gain_label);
    self.more_gain_label.text = "Clear current wave you have a chance to get:"
    self.current_gain_label = GetText(self.current_gain_label);
    self.current_gain_label.text = "Clear current wave you will be guaranteed:";

    self.kill_tip = GetImage(self.kill_tip);
    self.killcd.text = "";
    SetGameObjectActive(self.killtip, false);
    self.crystals = {};

    if self.model.curDungeonID then
        local config = Config.db_dunge[self.model.curDungeonID];
        if config then
            self.dun_name.text = config.name;
        end

    end
    --self:SetHardLevel(2);
end
--设置boss的头像
--服务端更新难度等级
function PetDungeonPanel:SetHardLevel(num)
    --num = num or 2;
    --lua_resMgr:SetImageTexture(self, self.kill_level, self.imageAb, "dungeon_equip_" .. (num - 1), false);
    --SetColor(self.kill_tip, 255, 255, 255, 255);
    --SetColor(self.kill_level, 255, 255, 255, 255);
    --SetGameObjectActive(self.killtip, true);
    --local finishFun = function()
    --    SetColor(self.kill_tip, 255, 255, 255, 255);
    --    SetColor(self.kill_level, 255, 255, 255, 255);
    --    SetGameObjectActive(self.killtip, false);
    --end
    --local moveAction = cc.FadeOut(3, self.kill_tip);
    --local moveAction2 = cc.FadeOut(3, self.kill_level);
    --cc.ActionManager:GetInstance():addAction(moveAction, self.kill_tip.transform);
    --local fincall = cc.CallFunc(finishFun);
    --local finAction = cc.Sequence(moveAction2, fincall);
    --cc.ActionManager:GetInstance():addAction(finAction, self.kill_level.transform);
end

function PetDungeonPanel:StartLeftTime(leftTime)
    leftTime = leftTime or os.time() + 59;
    if self.leftSchedule then
        StopSchedule(self.leftSchedule);
        self.leftSchedule = nil;
    end
    self.leftSchedule = GlobalSchedule.StartFun(handler(self, self.WaveEnd), 0.2, -1);
end

function PetDungeonPanel:WaveEnd()

end

function PetDungeonPanel:EndDungeon()
    local timeTab = nil;
    local timestr = "";
    local formatTime = "%02d";
    --整个副本的结束时间
    if self.end_time then
        local aaa = not self.startSchedule;
        local bbb = not self.hideByIcon;
        if not self.startSchedule and not self.hideByIcon then
            SetGameObjectActive(self.endTime.gameObject, true);
        else
            SetGameObjectActive(self.endTime.gameObject, false);
        end

        timeTab = TimeManager:GetLastTimeData(os.time(), self.end_time);
        if table.isempty(timeTab) then
            --Notify.ShowText("副本结束了,需要做清理了");
            GlobalSchedule.StopFun(self.petschedules);
        else
            if timeTab.min then
                timestr = timestr .. string.format(formatTime, timeTab.min) .. ":";
            end
            if timeTab.sec then
                timestr = timestr .. string.format(formatTime, timeTab.sec);
            end
            self.endTitleTxt.text = timestr;--"副本倒计时: " ..
        end
    end
    if self.dungeon_is_exit then
        SetGameObjectActive(self.endTime.gameObject, false);
    end
end

function PetDungeonPanel:AddEvent()
    --开一个定时器固定时间请求副本信息
    self:RequestInfo();
    self.schedules[1] = GlobalSchedule:Start(handler(self, self.RequestInfo), 2, -1);

    local enterData = DungeonModel:GetInstance():GetCurrentEnter();
    if enterData then
        self.end_time = enterData.etime;
    end
    --结束副本时间
    self.petschedules = GlobalSchedule:Start(handler(self, self.EndDungeon), 0.2, -1);

    self.events[#self.events + 1] = GlobalEvent:AddListener(DungeonEvent.DUNGEON_EXP_GOLD_INFO, handler(self, self.HandleData))

    self:InitScene();

    GlobalEvent.AddEventListenerInTab(EventName.NewSceneObject, handler(self, self.HandleNewCreate), self.events);

    local call_back = function()
        SetGameObjectActive(self.crystal.gameObject, false);
        SetGameObjectActive(self.endTime.gameObject, false);
        self.hideByIcon = true;
    end

    self.events[#self.events + 1] = GlobalEvent.AddEventListener(MainEvent.ShowTopRightIcon, call_back);

    local call_back1 = function()
        SetGameObjectActive(self.crystal.gameObject, true);
        SetGameObjectActive(self.endTime.gameObject, true);
        self.hideByIcon = nil;
    end

    self.events[#self.events + 1] = GlobalEvent.AddEventListener(MainEvent.HideTopRightIcon, call_back1);

    AddEventListenerInTab(SceneEvent.UPDATE_ACTOR_HP, handler(self, self.HandleActorHp), self.events);
    AddEventListenerInTab(DungeonEvent.DUNGEON_AUTO_EXIT, handler(self, self.HandleAutoExit), self.events);
end

function PetDungeonPanel:HandleAutoExit()
    self.dungeon_is_exit = true;
    SetGameObjectActive(self.endTime.gameObject, false);
    --SetGameObjectActive(self.killtip.gameObject, false);

    SetGameObjectActive(self.killtip.gameObject, false);
    SetGameObjectActive(self.kill_tip_bg.gameObject, false);
    SetGameObjectActive(self.kill_tip.gameObject, false);
    self:RemoveActions();
    self:KillSchedules();
    SetColor(self.kill_tip_num, 255, 255, 255, 255);
    SetColor(self.kill_tip, 255, 255, 255, 255);
    SetColor(self.kill_tip, 255, 255, 255, 255);

    SetLocalPosition(self.killtip.transform, 0, 250, 0)
    --lua_resMgr:SetImageTexture(self, self.kill_tip, self.imageAb, "pet_dungeon_end_tip", false, nil, false);
end

function PetDungeonPanel:InitScene()
    local createdMonTab = SceneManager:GetInstance():GetObjectListByType(enum.ACTOR_TYPE.ACTOR_TYPE_CREEP);
    if createdMonTab then
        for k, monster in pairs(createdMonTab) do
            self:HandleNewCreate(monster);
        end
    end
end
--8010001
--8010002
--8010003
function PetDungeonPanel:HandleNewCreate(monster)
    local crystalIDTab = Config.db_creep_born[80001];
    local cid1 = 8010001;
    local cid2 = 8010002;
    local cid3 = 8010003;
    if crystalIDTab then
        local creeps = String2Table(crystalIDTab["creeps"]);
        for k, v in pairs(creeps) do
            if k == 1 then
                cid1 = v[1];
            elseif k == 2 then
                cid2 = v[1];
            elseif k == 3 then
                cid3 = v[1];
            end
        end
    end
    if monster and monster.object_type == enum.ACTOR_TYPE.ACTOR_TYPE_CREEP then
        local object_info = monster.object_info;
        local config = Config.db_creep[object_info.id];
        if object_info.id == cid1 then
            --print2(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
            --print2(object_info.uid);
            if self.crystals[1] then
                self.crystals[1]:UpdateData(object_info);
            else
                self.crystals[1] = PetCrystalItem(self.crystal_item_1, object_info, 1);
            end
        elseif object_info.id == cid2 then
            --print2(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
            --print2(object_info.uid);
            if self.crystals[2] then
                self.crystals[2]:UpdateData(object_info);
            else
                self.crystals[2] = PetCrystalItem(self.crystal_item_2, object_info, 2);
            end
        elseif object_info.id == cid3 then
            --print2(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
            --print2(object_info.uid);
            if self.crystals[3] then
                self.crystals[3]:UpdateData(object_info);
            else
                self.crystals[3] = PetCrystalItem(self.crystal_item_3, object_info, 3);
            end
        elseif monster.creep_kind == enum.CREEP_KIND.CREEP_KIND_COLLECT and self.cur_wave and tonumber(self.cur_wave) <= 3 then
            monster.advance_container = AdvanceDungeonItem();
            monster.advance_container:ShowDes(true, "Tap to collect");
            monster.advance_container:UpdateLockPos(-monster:GetBodyHeight() / 2);
            monster:SetAdvanceItemPos();
        end

        local config = Config.db_creep[object_info.id];
        local dungeonConfig = Config.db_dunge[monster.config.scene_id];
        --这段是boss出现,改成配置
        --if config.rarity == enum.CREEP_RARITY.CREEP_RARITY_BOSS2 or config.rarity == enum.CREEP_RARITY.CREEP_RARITY_BOSS3 then
        --    self.isBoss = true;
        --    lua_resMgr:SetImageTexture(self, self.kill_tip, self.imageAb, "pet_dungeon_boss_tip", false, nil, false);
        --    SetGameObjectActive(self.kill_tip_num, false);
        --    self:KillSchedules();
        --    --self:RemoveActions();
        --
        --    self:StartActions();
        --end
        if monster.object_info and monster.object_info["ext"] and monster.object_info["ext"]["disappear"] then
            local time = monster.object_info["ext"]["disappear"];
            SetGameObjectActive(self.boom_exit.gameObject, true);

            local call_back = function()
                SetGameObjectActive(self.boom_exit.gameObject, false);
            end
            if self.boom_exit_schedule then
                GlobalSchedule.StopFun(self.boom_exit_schedule);
            end
            self.boom_exit_schedule = GlobalSchedule.StartFunOnce(call_back, 15);

            local call_back1 = function()
                if monster and monster.object_info and monster.object_info.hp <= 0 then
                    call_back();
                    monster.object_info:RemoveListener(self.update_blood);
                end
            end

            self.update_blood = monster.object_info:BindData("hp", call_back1);
        end
    end
end

local temptab = {
    ["stype"] = 301,
    ["info"] = {
        ["prep_time"] = 1550056487,
        ["cur_wave"] = 0,
        ["world_level"] = 50,
        ["exp_activity"] = 40,
        ["coin_inspire"] = 5,
        ["end_time"] = 1550056852,
        ["max_wave"] = 3,
        ["inspire"] = 0,
        ["gold_inspire"] = 5,
        ["exp_team"] = 30,
        ["exp_elixir"] = 20,
        ["exp_gain"] = 0
    },
    ["id"] = 30101
}
function PetDungeonPanel:HandleData(data)
    --print2(Table2String(data));
    if data.stype ~= enum. SCENE_STYPE.SCENE_STYPE_DUNGE_PET then
        return ;
    end
    local prep_time = data.prep_time;
    if data.level ~= self.level and data.level ~= 1 then
        self:SetHardLevel(data.level);
    end
    self.level = data.level;
    local flag = false;
    if self.cur_wave ~= data.cur_wave then
        flag = true;
    end
    self.cur_wave = data.cur_wave;
    self.max_wave = data.max_wave;
    self.end_time = data.end_time;
    self.wave_etime = data.wave_etime;
    self.curDungeonID = data.dunge;

    if flag then
        self:InitWaveAward();
    end

    --if self.wave_etime < os.time() then
    --    self.wave_etime = nil;
    --end

    --self:StartLeftTime(self.wave_etime);

    self.round.text = "Current round:    <color=#5BD022>" .. self.cur_wave .. "/" .. self.max_wave .. "</color>";
end

function PetDungeonPanel:InitWaveAward()
    if self.cur_wave == 0 or self.curDungeonID == 0 or self.curDungeonID == nil then
        return ;
    end
    local waveConfig = Config.db_dunge_wave[self.curDungeonID .. "@" .. self.cur_wave];
    local broadcast = {};
    if waveConfig then
        local broadcastTab = String2Table(waveConfig.broadcast);
        for k, v in pairs(broadcastTab) do
            broadcast[v] = true;
        end
        if broadcast[self.cur_wave] then
            lua_resMgr:SetImageTexture(self, self.kill_tip, self.imageAb, "pet_dungeon_boss_tip", false, nil, false);
            SetGameObjectActive(self.kill_tip_num, false);
        else
            lua_resMgr:SetImageTexture(self, self.kill_tip, self.imageAb, "pet_dungeon_wave_tip", false, nil, false);
            self.kill_tip_num.text = self.cur_wave;
            SetGameObjectActive(self.kill_tip_num, true);
        end
        self:KillSchedules();
        self:StartActions();
    end

    destroyTab(self.currentItems);
    self.currentItems = {};

    if waveConfig then
        local reward = LString2Table(waveConfig.reward);
        if reward then
            for i = 1, #reward do
                local tab = reward[i];
                local aitem = GoodsIconSettorTwo(self.Content.transform)
                local param = {}
                --param["model"] = self.model;
                param["item_id"] = tab[1];
                param["num"] = tab[2];
                param["can_click"] = true;
                param["bind"] = true;
                param["size"] = { x = 80, y = 80 }
                aitem:SetIcon(param);
                --local item = AwardItem(self.Content);
                --item:SetData(tab[1], tab[2]);
                --item:AddClickTips(self.hardshow.transform);
                table.insert(self.currentItems, aitem);
            end
        end

        reward = LString2Table(waveConfig.reward_pr);
        if reward then
            for i = 1, #reward do
                local tab = reward[i];
                --local item = AwardItem(self.Content2);
                --item:SetData(tab[1], tab[2]);
                --item:AddClickTips(self.hardshow.transform);
                local aitem = GoodsIconSettorTwo(self.Content2.transform)
                local param = {}
                --param["model"] = self.model;
                param["item_id"] = tab[1];
                param["num"] = tab[2];
                param["can_click"] = true;
                param["bind"] = true;
                param["size"] = { x = 80, y = 80 }
                aitem:SetIcon(param);
                table.insert(self.currentItems, aitem);
            end
        end
        self.more_gain_label.text = "Clear current wave you have a chance to get:"--"通过第<color=#5BD022>" .. (self.cur_wave + 1) .. "</color>波可能获得:"
    end

    --local nextwaveConfig = Config.db_dunge_wave[self.curDungeonID .. "@" .. self.cur_wave + 1];
    --if nextwaveConfig then
    --    local reward = String2Table(nextwaveConfig.reward);
    --    if reward then
    --        for i = 1, #reward do
    --            local tab = reward[i];
    --            local item = AwardItem(self.Content2);
    --            item:SetData(tab[1], tab[2]);
    --            item:AddClickTips(self.hardshow.transform);
    --            table.insert(self.currentItems, item);
    --        end
    --    end
    --    self.more_gain_label.text = "通关当前波数概率获得："--"通过第<color=#5BD022>" .. (self.cur_wave + 1) .. "</color>波可能获得:"
    --else
    --    local reward = String2Table(waveConfig.reward);
    --    if reward then
    --        for i = 1, #reward do
    --            local tab = reward[i];
    --            local item = AwardItem(self.Content2);
    --            item:SetData(tab[1], tab[2]);
    --            item:AddClickTips(self.hardshow.transform);
    --            table.insert(self.currentItems, item);
    --        end
    --    end
    --    self.more_gain_label.text = "通关当前波数概率获得："--"通过<color=#5BD022>" .. (self.cur_wave) .. "</color>波可能获得:"
    --end
end

function PetDungeonPanel:HandleActorHp(data)
    local uid = data.uid;--uid
    local hp = data.hp;--当前血量
    local hpmax = data.hpmax;--最大血量

    for i = 1, #self.crystals do
        if self.crystals[i] and self.crystals[i].data and self.crystals[i].data.uid == uid then
            self.crystals[i]:UpdateHP(hp, hpmax);
        end
    end
end

function PetDungeonPanel:StopAllSchedules()
    for i = 1, #self.schedules, 1 do
        GlobalSchedule:Stop(self.schedules[i]);
    end
    if self.petschedules then
        GlobalSchedule:Stop(self.petschedules);
    end
    self.petschedules = nil;
    self.schedules = {};
end

function PetDungeonPanel:RemoveActions()
    cc.ActionManager:GetInstance():removeAllActionsFromTarget(self.kill_tip)
    cc.ActionManager:GetInstance():removeAllActionsFromTarget(self.kill_tip_bg);
    cc.ActionManager:GetInstance():removeAllActionsFromTarget(self.kill_tip_num);
end

function PetDungeonPanel:StartActions(delayTime, fadeTime)
    self:RemoveActions();
    delayTime = delayTime or 3;
    fadeTime = fadeTime or 3;

    if self.startTime and self.startTime.gameObject and self.startTime.gameObject.activeSelf then
        SetLocalPosition(self.killtip.transform, 0, 154, 0)
    else
        SetLocalPosition(self.killtip.transform, 0, 200, 0)
    end

    SetGameObjectActive(self.killtip, true);
    local finishFun = function()
        SetGameObjectActive(self.killtip, false);
    end
    SetColor(self.kill_tip, 255, 255, 255, 255);
    local value_action = cc.FadeTo(fadeTime, 0.5, self.kill_tip);
    local delay = cc.DelayTime(delayTime);
    local action = cc.Sequence(delay, value_action)
    cc.ActionManager:GetInstance():addAction(action, self.kill_tip)

    self.killtipschedule = GlobalSchedule.StartFunOnce(finishFun, delayTime + fadeTime);

    finishFun = function()
        SetGameObjectActive(self.kill_tip_bg, false);
        --SetColor(self.kill_tip, 255, 255, 255, 255);
    end

    value_action = cc.FadeTo(fadeTime, 0.5, self.kill_tip_bg);
    delay = cc.DelayTime(delayTime);
    action = cc.Sequence(delay, value_action)
    cc.ActionManager:GetInstance():addAction(action, self.kill_tip_bg)

    self.killtipschedule = GlobalSchedule.StartFunOnce(finishFun, delayTime + fadeTime);

    finishFun = function()
        SetGameObjectActive(self.kill_tip_num, false);

    end
    SetColor(self.kill_tip_num, 255, 255, 255, 255);
    value_action = cc.FadeTo(fadeTime, 0.5, self.kill_tip_num);
    delay = cc.DelayTime(delayTime);
    action = cc.Sequence(delay, value_action)
    cc.ActionManager:GetInstance():addAction(action, self.kill_tip_num)

    self.killtipschedule = GlobalSchedule.StartFunOnce(finishFun, delayTime + fadeTime);
end

function PetDungeonPanel:KillSchedules()
    if self.killtipschedule then
        GlobalSchedule.StopFun(self.killtipschedule);
    end
    self.killtipschedule = nil;

    if self.killtipschedule_bg then
        GlobalSchedule.StopFun(self.killtipschedule_bg);
    end
    self.killtipschedule_bg = nil;

    if self.killtipschedule_num then
        GlobalSchedule.StopFun(self.killtipschedule_num);
    end
    self.killtipschedule_num = nil;
end
