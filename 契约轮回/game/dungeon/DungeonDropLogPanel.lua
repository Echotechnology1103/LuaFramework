---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2018/10/10 10:53
---
DungeonDropLogPanel = DungeonDropLogPanel or class("DungeonDropLogPanel", BaseItem)
local this = DungeonDropLogPanel

function DungeonDropLogPanel:ctor(parent_node, layer,isCross)
    self.abName = "dungeon";
    self.image_ab = "dungeon_image";
    self.assetName = "DropLogPanel"
    self.layer = "UI"
    self.panel_type = 3;
    self.isCross = isCross;
    self.model = DungeonModel.GetInstance()
    self.events = {};
    self.schedules = {};
    DungeonDropLogPanel.super.Load(self)
end

---@param1 1=宠物Boss 2=非宠物Boss
function DungeonDropLogPanel:SetLogType(logType)
    self.logType = logType
end

function DungeonDropLogPanel:dctor()
    self.model = nil;
    GlobalEvent:RemoveTabListener(self.events);
    self:StopAllSchedules()
    if self.itemList then
        for k, v in pairs(self.itemList) do
            v:destroy();
        end
    end
    self.itemList = nil;

    GlobalEvent:RemoveTabListener(self.events)
    self.events = {}
end

function DungeonDropLogPanel:LoadCallBack()
    self.nodes = {
        "killlogItem_0", "ScrollView/Viewport/Content", --"killlogItem_0/log", "killlogItem_0/time",
    }
    self:GetChildren(self.nodes)
    SetLocalPosition(self.transform, 0, 0, 0)
    self.killlogItem_0.gameObject:SetActive(false);
    if self.isCross then
        TimeBossController.GetInstance():RequestDropped()
        DungeonCtrl:GetInstance():RequestBossDrop( 3);
    else
        DungeonCtrl:GetInstance():RequestBossDrop( self.logType or 2);
    end

    if self.data then
        self:InitUI();
    end

    self:AddEvent();
end

function DungeonDropLogPanel:RefreshData(data)
    self.data = data;
    self:InitUI();
end

function DungeonDropLogPanel:InitUI()
    self.itemList = {};

    --self.killlogItem_0 = GetText(self.killlogItem_0);
    --local today = string.split(tostring(os.date()), " ")[1];
    self.killlogItem_0.gameObject:SetActive(true);
    local function sort_func(a, b)
        return a.time > b.time
    end
    local logs = self.data;
    table.sort(logs, sort_func)
    for i =1, #logs do
        local killLogTab = logs[i];
        local killlogItem = DropLogItem(newObject(self.killlogItem_0), killLogTab);
        killlogItem:SetItemCallBack(handler(self, self.ClickLogItem))
        killlogItem.parent = self.transform;
        killlogItem.transform:SetParent(self.Content.transform);
        self.itemList[i] = killlogItem;
        SetLocalScale(killlogItem.transform, 1, 1, 1);
        if i % 2 == 1 then
            killlogItem:HideBg();
        else
            SetLocalPosition(killlogItem.transform, -5.37, -17, 0);
        end
        local rt = self.Content:GetComponent("RectTransform");
        rt.sizeDelta = Vector2(rt.sizeDelta.x, #logs * 80);
        SetAnchoredPosition(rt, 0, 0)
    end
    self.killlogItem_0.gameObject:SetActive(false);
end

function DungeonDropLogPanel:ClickLogItem(logItem)
    self.currLogItem = logItem
    local cacheId = logItem.data.cache_id
    GoodsController:GetInstance():RequestQueryDropped(cacheId)
end

function DungeonDropLogPanel:AddEvent()
    self.events[#self.events + 1] = GlobalEvent:AddListener(GoodsEvent.QueryDroppedEvent, handler(self, self.OnQueryDropped))
end

function DungeonDropLogPanel:OnQueryDropped(pItem)
    BagModel:GetInstance():ShowPItemTip(pItem, self.currLogItem.transform)
end

function DungeonDropLogPanel:StopAllSchedules()
    for i = 1, #self.schedules, 1 do
        GlobalSchedule:Stop(self.schedules[i]);
    end
    self.schedules = {};
end
