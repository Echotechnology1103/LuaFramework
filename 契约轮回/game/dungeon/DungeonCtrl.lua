---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2018/10/9 17:29
---
require('game.dungeon.RequireDungeon')

DungeonCtrl = DungeonCtrl or class("DungeonCtrl", BaseController)
local this = DungeonCtrl

DungeonCtrl.EnterCDTime = 600;--单位秒
--DungeonCtrl
function DungeonCtrl:ctor()
    DungeonCtrl.Instance = self;
    self.model = DungeonModel:GetInstance()
    self.events = {};
    self:AddEvents()
    self:RegisterAllProtocal();
end

function DungeonCtrl:dctor()
    GlobalEvent:RemoveTabListener(self.events);
end

function DungeonCtrl:GetInstance()
    if not DungeonCtrl.Instance then
        DungeonCtrl()
    end
    return DungeonCtrl.Instance
end

function DungeonCtrl:RegisterAllProtocal()
    -- protobuff的模块名字，用到pb一定要写
    self.pb_module_name = "pb_1203_dunge_pb";

    self:RegisterProtocal(proto.DUNGE_INFO, self.HandleDungeonInfo);
    self:RegisterProtocal(proto.DUNGE_INSPIRE, self.HandleDungeonInspire);
    self:RegisterProtocal(proto.DUNGE_OVER, self.HandleDungeonOver);

    self:RegisterProtocal(proto.BOSS_CARE, self.HandleBossCare);
    self:RegisterProtocal(proto.BOSS_DROPPED, self.HandleBossDrop);
    self:RegisterProtocal(proto.BOSS_KILLED, self.HandleBossKilled);
    self:RegisterProtocal(proto.BOSS_LIST, self.HandleBossList);
    self:RegisterProtocal(proto.BOSS_REMIND, self.HandleBossRemind);
    self:RegisterProtocal(proto.BOSS_INFO, self.HandleBossInfo);
    self:RegisterProtocal(proto.BOSS_CHANGE, self.HandleBossChange);
    self:RegisterProtocal(proto.BOSS_WEAKSTOP, self.HandleBossWeakStop);

    self:RegisterProtocal(proto.DUNGE_PANEL, self.HandleDungeonPanel);

    self:RegisterProtocal(proto.DUNGE_BUYTIMES, self.HandleBuyTimes);
    self:RegisterProtocal(proto.DUNGE_CLEARCD, self.HandleClearTimes);

    self:RegisterProtocal(proto.BOSS_ANGER, self.HandleBossAnger);
    self:RegisterProtocal(proto.DUNGE_SWEEP, self.HandleSweep);

    self:RegisterProtocal(proto.DUNGE_ENTER, self.HandleEnterDungeon);

    self:RegisterProtocal(proto.DUNGE_FETCH, self.HandleFetch);
    self:RegisterProtocal(proto.DUNGE_LOTOINFO, self.HandleLotoInfo);
    self:RegisterProtocal(proto.DUNGE_LOTO, self.HandleLoto);

    self:RegisterProtocal(proto.DUNGE_MOUNT_PANEL, self.HandleDungeonMount);

    self:RegisterProtocal(proto.MELEE_INFO, self.HandleMeleeInfo);
    self:RegisterProtocal(proto.MELEE_SELF, self.HandleMeleeSelf);
    self:RegisterProtocal(proto.MELEE_DAMAGE_RANK, self.HandleMeleeDamageRank);
    self:RegisterProtocal(proto.MELEE_SCORE_RANK, self.HandleMeleeScoreRank);
    self:RegisterProtocal(proto.MELEE_ROUND_END, self.HandleMeleeRoundEnd);
    self:RegisterProtocal(proto.MELEE_ROUND_BEGIN, self.HandleMeleeRoundBegin);
    self:RegisterProtocal(proto.MELEE_REWARD, self.HandleMeleeReward);

    --情侣副本etc
    --答题
    self:RegisterProtocal(proto.DUNGE_QUESTION, self.HandleQuestion);
    self:RegisterProtocal(proto.DUNGE_QUESTION_ANSWER, self.HandleSuccessSubmitAnswer);
    self:RegisterProtocal(proto.DUNGE_BUY_TIMES_ASK, self.HandleTimesBuyAsk);

    self:RegisterProtocal(proto.DUNGE_START, self.HandleDungeStart);

    self:RegisterProtocal(proto.BOSS_DAMAGE_RANK, self.HandgeBossDamageRank)

    self:RegisterProtocal(proto.BOSS_SOS, self.HandleSoSInfo)
end

function DungeonCtrl:AddEvents()
    local call_back = function(tab_index, toggle_id, bossid)
        --self:SingleIn();
        self:OpenDungeonEntrancePane(tab_index, toggle_id, bossid);
    end
    GlobalEvent:AddListener(DungeonEvent.REQUEST_ENTER_EXPDUNGEON, call_back)

    local call_back1 = function(tab_index, toggle_id, bossID)
        if toggle_id == 12 then
            self:OpenCrossPanel(tab_index, 1, bossID);
        else
            self:OpenDungeonPanel(tab_index, toggle_id, bossID);
        end

    end
    GlobalEvent:AddListener(DungeonEvent.DUNGEON_PANEL_OPEN, call_back1)

    local call_back2 = function(tab_index, toggle_id, bossID)
        if tab_index == 11101 or tab_index == 11102 or tab_index == 20000 then
            self:OpenCrossPanel(1, 3, nil)
        else
            self:OpenCrossPanel(tab_index, toggle_id, bossID)
        end
    end
    GlobalEvent:AddListener(DungeonEvent.CROSS_PANEL_OPEN, call_back2)

    AddEventListenerInTab(AthleticsEvent.ATHLETICS_OPEN, handler(self, self.OpenAthleticsPanel), self.events);

    --GlobalEvent:AddListener(EventName.ChangeSceneEnd, handler(self, self.HandleSceneChange));
    GlobalEvent:AddListener(EventName.EndHandleTimeline, handler(self, self.HandleSceneChange));

    local call_back3 = function(data)
        --self:HandleDungeonOver();
        local panel = lua_panelMgr:GetPanel(ExpDungeonPanel);
        if panel then
            panel:Close();
        end

        panel = lua_panelMgr:GetPanel(GuwuPanel);
        if panel then
            panel:Close();
        end
    end
    self.events[#self.events + 1] = GlobalEvent:AddListener(DungeonEvent.LEAVE_DUNGEON_SCENE, call_back3)

    self:AddOpenPanelEvent();

    self.events[#self.events + 1] = GlobalEvent.AddEventListener(SceneEvent.GAME_NOTIFY, handler(self, self.HandleGameNotify));
    self.events[#self.events + 1] = GlobalEvent.AddEventListener(DailyEvent.GetMagicTowerInfo, handler(self, self.RequestDungeonPanel))
    local function call_back3()
        if  self.bossdamge_item  then
            self.bossdamge_item:destroy()
            self.bossdamge_item = nil
        end
    end
    self.events[#self.events + 1] = GlobalEvent:AddListener(EventName.GameReset, call_back3)


    local handle_activity_list = function(bool, id)
        --本服乱斗
        if bool and id == DungeonModel.MELEE_SELF_ACTIVITY_ID and ActivityModel:GetInstance():GetActivity(DungeonModel.MELEE_SELF_ACTIVITY_ID) then
            local activityConfig = Config.db_activity[DungeonModel.MELEE_SELF_ACTIVITY_ID];
            if activityConfig and activityConfig.scene then
                local sceneConfig = Config.db_scene[activityConfig.scene];
                if sceneConfig then
                    local reqtab = String2Table(sceneConfig.reqs);
                    for k, reqs in pairs(reqtab) do
                        if #reqs == 2 and reqs[1] == "level" then
                            if RoleInfoModel:GetInstance():GetMainRoleLevel() >= reqs[2] then
                                self:OpenAthleticsPanel(DungeonModel.MELEE_SELF_ACTIVITY_ID, true);
                            end
                        end
                    end
                end
            end
        end
        if bool and id == DungeonModel.MELEE_CROSS_ACTIVITY_ID and ActivityModel:GetInstance():GetActivity(DungeonModel.MELEE_CROSS_ACTIVITY_ID) then
            local activityConfig = Config.db_activity[DungeonModel.MELEE_CROSS_ACTIVITY_ID];
            if activityConfig and activityConfig.scene then
                local sceneConfig = Config.db_scene[activityConfig.scene];
                if sceneConfig then
                    local reqtab = String2Table(sceneConfig.reqs);
                    for k, reqs in pairs(reqtab) do
                        if #reqs == 2 and reqs[1] == "level" then
                            if RoleInfoModel:GetInstance():GetMainRoleLevel() >= reqs[2] then
                                self:OpenAthleticsPanel(DungeonModel.MELEE_CROSS_ACTIVITY_ID, true);
                            end
                        end
                    end
                end
            end
        end
    end
    AddEventListenerInTab(ActivityEvent.ChangeActivity, handle_activity_list, self.events);

    local updateNumCallBack = function()
        for k, v in pairs(self.model.CheckUseGoods) do
            local num = BagModel:GetInstance():GetItemNumByItemID(k);
            if v ~= num then
                self.model.CheckUseGoods[k] = num;

                if k == 10810 then
                    self:RequestDungeonPanel(enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EXP);
                end
                if k == 11101 then
                    self.model:UpdateReddot();
                end

                --if k == 10806 then
                --    self.model:UpdateReddot();
                --end
            end
        end
    end
    AddEventListenerInTab(BagEvent.UpdateGoods, updateNumCallBack, self.events);

    local function call_back()
        local level = RoleInfoModel:GetInstance():GetMainRoleLevel() or 1;
        if tonumber(GetSysOpenDataById("160@7")) <= level and LoginModel:GetInstance():GetOpenTime() >= 8 then
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_PET);
        end
    end
    RoleInfoModel.GetInstance():GetMainRoleData():BindData("viplv", call_back)

    local function call_back()
        local level = RoleInfoModel:GetInstance():GetMainRoleLevel() or 1;
        if tonumber(GetSysOpenDataById("160@7")) <= level and LoginModel:GetInstance():GetOpenTime() >= 8 then
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_PET);
        end
        self.model.isShowRed = true
        CacheManager:GetInstance():SetBool("GodsPanel2225", true) --  神灵之路 每天默认红点
    end
    GlobalEvent:AddListener(EventName.CrossDay, call_back)


    local function call_back(id)
        local sceneId = SceneManager:GetInstance():GetSceneId()
        local config = Config.db_scene[sceneId]
        if not config then
            return
        end
        if id == 11103 then
            if  config.stype == enum.SCENE_STYPE.SCENE_STYPE_BOSS_WORLD then
                lua_panelMgr:GetPanelOrCreate(DungeonTimesPanel):Open(11101)
            elseif config.stype == enum.SCENE_STYPE.SCENE_STYPE_BOSS_BEAST then
                lua_panelMgr:GetPanelOrCreate(DungeonTimesPanel):Open(11102)
            end
        end
    end
    GlobalEvent:AddListener(GoodsEvent.UseGiftSuccess, call_back)

    local function call_back()
        lua_panelMgr:GetPanelOrCreate(ReviveHelpPanel):Open()
    end
    GlobalEvent:AddListener(DungeonEvent.ShowHelpPanel, call_back)

    --打开时空裂缝界面
    local function call_back()
        local level = RoleInfoModel:GetInstance():GetMainRoleLevel() or 1
        if tonumber(GetSysOpenDataById("160@17")) > level then
            Notify.ShowText("Time Rift will be open at peak level 40")
           return
        end
        lua_panelMgr:GetPanelOrCreate(CrossPanel):Open(1,5)
    end
    GlobalEvent:AddListener(DungeonEvent.OpenSpaceTimeCrackDungePanel, call_back)

end

function DungeonCtrl:GameStart()
    local function step()
        -- 开始游戏请求副本数据
        local level = RoleInfoModel:GetInstance():GetMainRoleLevel() or 1;
        --魔法塔
        local dungeon_type = enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MAGICTOWER
        if tonumber(GetSysOpenDataById("150@6")) <= level then
            self:RequestDungeonPanel(dungeon_type)
            self:RequestLotoInfo(dungeon_type)
        end

        ----装备本
        --dungeon_type = enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EQUIP
        --if 70 >= level then
        --    self:RequestDungeonPanel(dungeon_type)
        --end

        --经验副本
        dungeon_type = enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EXP
        if tonumber(GetSysOpenDataById("150@7")) <= level then
            self:RequestDungeonPanel(dungeon_type)
        end

        --金币副本
        dungeon_type = enum.SCENE_STYPE.SCENE_STYPE_DUNGE_COIN
        if tonumber(GetSysOpenDataById("150@10")) <= level then
            self:RequestDungeonPanel(dungeon_type)
        end

        --进阶副本
        if tonumber(GetSysOpenDataById("150@8")) <= level then
            DungeonCtrl:GetInstance():RequestDungeonMount();
        end
        -- 神灵之路
        dungeon_type = enum.SCENE_STYPE.SCENE_STYPE_DUNGE_GOD
        if tonumber(GetSysOpenDataById("150@13")) <= level then
            self:RequestDungeonPanel(dungeon_type);
        end
        --宠物副本
        dungeon_type = enum.SCENE_STYPE.SCENE_STYPE_DUNGE_PET
        if tonumber(GetSysOpenDataById("150@9")) <= level then
            self:RequestDungeonPanel(dungeon_type);
        end
        --装备副本
        dungeon_type = enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EQUIP
        if 100 <= level then
            self:RequestDungeonPanel(dungeon_type);
        end

        --个人boss 目前也是100级
        if 100 <= level then
            self:RequestDungeonPanel(enum.SCENE_STYPE.SCENE_STYPE_DUNGE_ROLE_BOSS)
        end

        --世界Boss副本
        if tonumber(GetSysOpenDataById("160@1")) <= level then
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_WORLD);
        end

        --时空裂缝Boss副本
        if tonumber(GetSysOpenDataById("160@17")) <= level then
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_SPATIOTEMPORAL);
        end

        --幻之岛
        if 350 <= level then
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_BEAST);
        end
        if 370 <= level then
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_BEAST_CROSS);
        end

        --情侣副本
        if OpenTipModel.GetInstance():IsOpenSystem(1200, 5) then
            self:RequestDungeonPanel(enum.SCENE_STYPE.SCENE_STYPE_DUNGE_COUPLE)
        end
        --神灵积分副本
        if OpenTipModel.GetInstance():IsOpenSystem(900, 6) then
            self:RequestDungeonPanel(enum.SCENE_STYPE.SCENE_STYPE_DUNGE_YUNYING_TOWER)
        end

        --宠物Boss
        if tonumber(GetSysOpenDataById("160@7")) <= level and LoginModel:GetInstance():GetOpenTime() >= 8 then
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_PET);
        end
        --巅峰竞技--没有这样请求
        --dungeon_type = enum.SCENE_STYPE.SCENE_STYPE_DUNGE_ARENA
        --self:RequestDungeonPanel(dungeon_type)



        --dungeon_type = enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MAGICTOWER
        --self:RequestDungeonPanel(dungeon_type)
        local role_data = RoleInfoModel:GetInstance():GetMainRoleData()
        if role_data then
            local function update_reddot_call_back(buffs)
                local buffFlag = false;
                for k, v in pairs(buffs) do
                    if v.group == 982 or v.group == 983 or v.group == 980 or v.group == 979 then
                        buffFlag = true;
                    end
                end
                if buffFlag then
                    self.model:UpdateReddot()
                end
            end
            role_data:BindData("buffs", update_reddot_call_back)
        end

    end
    self.time_id = GlobalSchedule:StartOnce(step, Constant.GameStartReqLevel.VLow)
end

--@ling autofun
function DungeonCtrl:HandleSceneChange(sceneId)

    local config = Config.db_scene[sceneId]
    if not config then
        print2("不存在场景配置" .. tostring(sceneId));
        return
    end
    local is_dungeon = true
    if config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE then

    else

    end
    if config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EXP then
        lua_panelMgr:GetPanelOrCreate(ExpDungeonPanel):Open()
        self.isExpDungeon = true;
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_COIN then
        local data = SceneManager:GetInstance():GetSceneInfo()
        lua_panelMgr:GetPanelOrCreate(GoldDungeonPanel):Open(data)
        ----dungeEntertoc
        self.isGoldDungeon = true;
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EQUIP then
        local data = SceneManager:GetInstance():GetSceneInfo()
        lua_panelMgr:GetPanelOrCreate(EquipDungeonPanel):Open(data)
        self.isEquipDungeon = true;
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_PET then
        local data = SceneManager:GetInstance():GetSceneInfo()
        lua_panelMgr:GetPanelOrCreate(PetDungeonPanel):Open(data)
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MAGICTOWER then
        lua_panelMgr:OpenPanel(MagicTowerDungeonPanel)
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_DAILY then
        --日常副本
        local data = SceneManager:GetInstance():GetSceneInfo()
        lua_panelMgr:GetPanelOrCreate(DailyDungeonPanel):Open(data)
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_WORLD_BOSS then
        --世界Boss副本
        local data = SceneManager:GetInstance():GetSceneInfo();
        self.dungeonExit = DungeonExit(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.UI));
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_GUILDGUARD then
        --公会守卫副本
        local data = SceneManager:GetInstance():GetSceneInfo();
        lua_panelMgr:GetPanelOrCreate(GuildGuardLeftCenter):Open(data)
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_NEWBIE then
        --新手副本Boss
        local data = SceneManager:GetInstance():GetSceneInfo()
        lua_panelMgr:GetPanelOrCreate(NoviceDungeonPanel):Open(data)
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MOUNT then
        --新手副本Boss
        local data = SceneManager:GetInstance():GetSceneInfo()
        lua_panelMgr:GetPanelOrCreate(AdvanceDungeonPanel):Open(data)
        self.isAdvanceDungeon = true;
        --elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_NEWBIE_FISSION then --新手副本分裂
        --    local data = SceneManager:GetInstance():GetSceneInfo()
        --    lua_panelMgr:GetPanelOrCreate(NoviceDungeonTwoPanel):Open(data)
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_ROLE_BOSS then
        --新手副本Boss
        lua_panelMgr:GetPanelOrCreate(DungeonPersonalBossPanel):Open()
        local main_role = SceneManager:GetInstance():GetMainRole()
        if main_role then
            main_role:SetRotateY(45)
        end
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_BOSS and config.stype == enum.SCENE_STYPE.SCENE_STYPE_BOSS_PET then
        ---宠物Boss
        --self:RequestBossAnger();
        ---在最下面的Else也有销毁代码，为了不影响现有逻辑，只能复制了运行
        if self.leftCenter then
            self.leftCenter:destroy()
        end
        self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_PET)
        lua_panelMgr:GetPanelOrCreate(PetBossDungeonPanel):Open()
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_ACT and config.stype == enum.SCENE_STYPE.SCENE_STYPE_GUILD_WAR then
        lua_panelMgr:OpenPanel(FactionBattleDungeonPanel)
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_ACT and config.stype == enum.SCENE_STYPE.SCENE_STYPE_WEDDINGPARTY then
        --结婚副本
        local panel = lua_panelMgr:GetPanel(WeddingQingTiePanel)
        if panel then
            panel:Close()
        end
        lua_panelMgr:GetPanelOrCreate(WeddingDungeonPanel):Open()
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_GOD then
        -- 神灵副本
        local panel = lua_panelMgr:GetPanel(GodsDungePanel)
        if panel then
            panel:Close()
        end
        lua_panelMgr:GetPanelOrCreate(GodsDungePanel):Open()
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_SOUL then
        --圣痕秘境
        local panel = lua_panelMgr:GetPanel(StigmasPanel)
        if panel then
            panel:Close()
        end
        lua_panelMgr:GetPanelOrCreate(StigmasDungePanel):Open()
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_COUPLE then
        ---CP副本
        GlobalEvent:Brocast(MarryEvent.CloseMarryPanel)
        self:RequeseExpDungeonInfo()
        if self.cp_left_center then
            self.cp_left_center:Close()
        end
        self.cp_left_center = lua_panelMgr:GetPanelOrCreate(CoupleDungeLeftCenter)
        self.cp_left_center:Open()
        if self.dungeonExit then
            self.dungeonExit:destroy();
        end
        self.dungeonExit = DungeonExit(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.UI));
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_YUNYING_TOWER then
        ---神灵积分副本
        GlobalEvent:Brocast(GodCeleEvent.CloseGodCelePanel)
        self:RequeseExpDungeonInfo()
        self:RequestDungeonPanel(enum.SCENE_STYPE.SCENE_STYPE_DUNGE_YUNYING_TOWER)
        if self.god_score_panel then
            self.god_score_panel:Close()
        end
        self.god_score_panel = lua_panelMgr:GetPanelOrCreate(GodScoreDungePanel)
        self.god_score_panel:Open()
        if self.dungeonExit then
            self.dungeonExit:destroy();
        end
        self.dungeonExit = DungeonExit(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.UI));
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_YUNYING_LIMITTOWER then
        --限时爬塔
        local panel = lua_panelMgr:GetPanel(LimitTowerPanel)
        if panel then
            panel:Close()
        end
        lua_panelMgr:GetPanelOrCreate(LimitTowerDungeonPanel):Open()

    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_NEWBIE_SUMMON then
        --新手人鱼副本
        local data = SceneManager:GetInstance():GetSceneInfo()
        lua_panelMgr:GetPanelOrCreate(NewBeeSummonDungeonPanel):Open(data)
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_DUNGE and config.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_NEWBIE_ANGER then
        --新手恶魔副本
        local data = SceneManager:GetInstance():GetSceneInfo()
        lua_panelMgr:GetPanelOrCreate(NewBeeAngerDungeonPanel):Open(data)
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_ACT and config.stype == enum.SCENE_STYPE.SCENE_STYPE_COMPETE_PREPARE then
        --钻石擂台准备
        local panel = lua_panelMgr:GetPanel(AthleticsPanel)
        if panel then
            panel:Close()
        end
        local panel = lua_panelMgr:GetPanel(CompeteDungelPanel)
        if panel then
            panel:Close()
        end
        local function call_back()
            lua_panelMgr:GetPanelOrCreate(CompeteDungeReadyPanel):Open()
            if self.compete_schedule then
                GlobalSchedule:Stop(self.compete_schedule)
                self.compete_schedule = nil
            end
        end
        if not self.compete_schedule then
            self.compete_schedule = GlobalSchedule:StartOnce(call_back, 1)
        end

    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_ACT and config.stype == enum.SCENE_STYPE.SCENE_STYPE_COMPETE_BATTLE then
        --钻石擂台战斗
        local panel = lua_panelMgr:GetPanel(CompeteDungeReadyPanel)
        if panel then
            panel:Close()
        end
        lua_panelMgr:GetPanelOrCreate(CompeteDungelPanel):Open()
    elseif config.type == enum.SCENE_TYPE.SCENE_TYPE_ACT and config.stype == enum.SCENE_STYPE.SCENE_STYPE_CROSS_GUILDWAR then
        --跨服工会战
        lua_panelMgr:GetPanelOrCreate(FactionSerWardDungePanel):Open()
        if not FactionSerWarModel:GetInstance().isOpenHelp then
            FactionSerWarModel:GetInstance().isOpenHelp = true
            lua_panelMgr:GetPanelOrCreate(FactionSerWarHelpPanel):Open()
        end
        
    elseif config and config.type == 4 then
        self.isBossDungeon = true;
        if self.leftCenter then
            self.leftCenter:destroy();
        end
        --self.leftCenter = DungeonLeftCenter(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.Bottom));
        --SetAlignType(self.leftCenter, bit.bor(AlignType.Left, AlignType.Null))

        if config.stype == enum.SCENE_STYPE.SCENE_STYPE_BOSS_WILD then
            self:RequestBossAnger();
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_WILD);
        elseif config.stype == enum.SCENE_STYPE.SCENE_STYPE_BOSS_HOME then
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_HOME);
        elseif config.stype == enum.SCENE_STYPE.SCENE_STYPE_BOSS_WORLD then
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_WORLD);
        elseif config.stype == enum.SCENE_STYPE.SCENE_STYPE_BOSS_BEAST then
            if config.kind == enum.SCENE_KIND.SCENE_KIND_CROSS then
                self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_BEAST_CROSS);
            else
                self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_BEAST);
            end
        elseif config.stype == enum.SCENE_STYPE.SCENE_STYPE_BOSS_FISSURE then
            --时空裂缝场景
           -- logError("进入时空裂缝场景")
           self:RequestBossAnger();
            self:RequestBossList(enum.BOSS_TYPE.BOSS_TYPE_SPATIOTEMPORAL);
        end
        if self.dungeonExit then
            self.dungeonExit:destroy();
        end
        self.dungeonExit = DungeonExit(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.UI));
    elseif config and config.type == 5 then
        if config.stype == enum.SCENE_STYPE.SCENE_STYPE_MELEEWAR then
            self.isMeleeDungeon = true;
            if self.meleeCenter then
                self.meleeCenter:destroy();
            end
            self.meleeCenter = DungeonMeleeLeftCenter(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.Bottom));
            -- SetAlignType(self.meleeCenter, bit.bor(AlignType.Left, AlignType.Null))
        end
        if config.stype == enum.SCENE_STYPE.SCENE_STYPE_GUILDHOUSE then
            self.isGuildHouse = true
            if self.guildhouseCenter then
                self.guildhouseCenter:destroy()
            end
            self.guildhouseCenter = GuildHouseLeftPanel(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.Bottom))
            SetAlignType(self.guildhouseCenter, bit.bor(AlignType.Left, AlignType.Null))
        end
        if config.stype == enum.SCENE_STYPE.SCENE_STYPE_TIMEBOSS then
            self.isTimeBoss = true
            if self.timebossleft then
                self.timebossleft:destroy()
            end
            self.timebossleft = TimeBossLeftPanel(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.Bottom))
            SetAlignType(self.timebossleft, bit.bor(AlignType.Left, AlignType.Null))
        end
        if config.stype == enum.SCENE_STYPE.SCENE_STYPE_SIEGEWAR then
            self.isBossDungeon = true
            if self.leftCenter then
                self.leftCenter:destroy()
            end
        end
        if self.dungeonExit then
            self.dungeonExit:destroy();
        end
        self.dungeonExit = DungeonExit(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.UI));
    else
        local panel = nil;
        if self.isBossDungeon then
            self.isBossDungeon = nil;
            if self.leftCenter then
                self.leftCenter:destroy();
            end
            DungeonModel:GetInstance().angryData = {};
        end
        if self.isMeleeDungeon then
            self.isMeleeDungeon = nil;
            if self.meleeCenter then
                self.meleeCenter:destroy();
            end
            self.meleeCenter = nil;
        end

        if self.isAdvanceDungeon then
            self.isAdvanceDungeon = nil;
        end

        if self.isGuildHouse then
            if self.guildhouseCenter then
                self.guildhouseCenter:destroy()
            end
            self.guildhouseCenter = nil
            self.isGuildHouse = nil
        end

        if self.isTimeBoss then
            if self.timebossleft then
                self.timebossleft:destroy()
            end
            self.timebossleft = nil
            self.isTimeBoss = nil
        end

        if self.cp_left_center then
            self.cp_left_center:Close()
            self.cp_left_center = nil
        end

        if self.god_score_panel then
            self.god_score_panel:Close()
            self.god_score_panel = nil
        end

        if self.dungeonExit then
            self.dungeonExit:destroy();
        end

        if self.revivePanel then
            self.revivePanel:destroy();
        end
        is_dungeon = false

        local mainrole = SceneManager:GetInstance():GetMainRole();
        if mainrole then
            mainrole.name_container:SetAthleticsScore(false, 0);
        end
    end

    --非蛮荒或者时空裂缝BOSS清除怒气数据
    if config and (config.stype ~= enum.SCENE_STYPE.SCENE_STYPE_BOSS_WILD or config.stype ~= enum.SCENE_STYPE.SCENE_STYPE_BOSS_FISSURE) then
        DungeonModel:GetInstance().angryData = {};
    end

    self.model.cur_scene_is_dungeon = is_dungeon

    --if is_dungeon ~= self.model.cur_scene_is_dungeon then
    if is_dungeon then
        GlobalEvent:Brocast(DungeonEvent.ENTER_DUNGEON_SCENE, sceneId)
    else
        GlobalEvent:Brocast(DungeonEvent.LEAVE_DUNGEON_SCENE, sceneId)
    end
    --end

    local lastSceneID = SceneManager:GetInstance().last_scene_id
    local lastSceneCfg = Config.db_scene[lastSceneID] or {}
    ----从新手副本或者日常副本出来
    --if lastSceneCfg.stype ==  enum.SCENE_STYPE.SCENE_STYPE_DUNGE_NEWBIE or lastSceneCfg.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_DAILY  then --
    --    local auto_task_info = AutoTaskManager:GetInstance():GetTaskInfo()
    --    if table.isempty(auto_task_info) then
    --        return
    --    end
    --    dump(auto_task_info)
    --    dump(auto_task_info)
    --    dump(auto_task_info)
    --    dump(auto_task_info)
    --    dump(auto_task_info)
    --end
    ---从情侣副本出来
    if lastSceneCfg.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_COUPLE then
        GlobalEvent:Brocast(MarryEvent.CloseAnswerPanel)
        if CoupleModel.GetInstance().is_need_show_end_panel then
            CoupleModel.GetInstance().is_need_show_end_panel = false
            lua_panelMgr:GetPanelOrCreate(CPDungeEndPanel):Open(CoupleModel.GetInstance().end_data)
        end
    end

    local function call_back()
        self:CheckFairyUse(config)
    end
    if not self.checkfairy_schedule then
        self.checkfairy_schedule = GlobalSchedule:Start(call_back, 1)
    end

    if sceneId == 20000 then
        if not self.bossdamge_item then
            local UITransform = LayerManager.Instance:GetLayerByName(LayerManager.LayerNameList.Bottom)
            self.bossdamge_item = DungeonWorldBossRightItem(UITransform)
        end
    elseif config and config.stype == enum.SCENE_STYPE.SCENE_STYPE_SIEGEWAR  then
        if not self.bossdamge_item then
            local UITransform = LayerManager.Instance:GetLayerByName(LayerManager.LayerNameList.Bottom)
            self.bossdamge_item = DungeonSiegewarBossRightItem(UITransform)
        end
    else
        if self.bossdamge_item then
            self.bossdamge_item:destroy()
            self.bossdamge_item = nil
        end
    end
    --if config and config.stype == enum.SCENE_STYPE.SCENE_STYPE_SIEGEWAR then
    --    if not self.bossdamge_item then
    --        local UITransform = LayerManager.Instance:GetLayerByName(LayerManager.LayerNameList.Bottom)
    --        self.bossdamge_item = DungeonSiegewarBossRightItem(UITransform)
    --    end
    --else
    --    if self.bossdamge_item then
    --        self.bossdamge_item:destroy()
    --        self.bossdamge_item = nil
    --    end
    --end
end

function DungeonCtrl:AddOpenPanelEvent()
    local function callBack ()
        --print2("asdkjahsdkhaksdj");
        lua_panelMgr:GetPanelOrCreate(ExpDungeonPanel):Open()
    end

    GlobalEvent:AddListener(DungeonEvent.OPEN_EXP_PANEL, callBack)
end

function DungeonCtrl:OpenDungeonPanel(tab_index, toggle_id, bossid)
    if tab_index == 3 then
        if not IsOpenModular(GetSysOpenDataById("160@7"), GetSysOpenTaskById("160@7")) then
            Notify.ShowText(string.format("Demon Caster F1 is unlocked at Lv.%s", GetSysOpenDataById("160@7")))
            return
        end
    end
    lua_panelMgr:GetPanelOrCreate(DungeonPanel):Open(tab_index, toggle_id, bossid)
end

function DungeonCtrl:OpenCrossPanel(tab_index, toggle_id, bossid)
    lua_panelMgr:GetPanelOrCreate(CrossPanel):Open(tab_index, toggle_id, bossid)
end

function DungeonCtrl:OpenDungeonEntrancePane(tab_index, toggle_id, bossid)
    lua_panelMgr:GetPanelOrCreate(DungeonEntrancePanel):Open(tab_index, toggle_id, bossid)
end

--is_show_btn_cd: 是否显示按钮倒计时（活动开启时作为弹窗用 ）
function DungeonCtrl:OpenAthleticsPanel(paramID1, is_show_btn_cd)

    local panel = lua_panelMgr:GetPanel(AthleticsPanel);
    if panel then
        panel:Close();
    end
    if paramID1 == 10111 then
        lua_panelMgr:GetPanelOrCreate(AthleticsPanel):Open(1, 2, false, is_show_btn_cd);
    elseif paramID1 == 10112 then
        lua_panelMgr:GetPanelOrCreate(AthleticsPanel):Open(1, 2, true, is_show_btn_cd);
    else
        lua_panelMgr:GetPanelOrCreate(AthleticsPanel):Open(1, 1, is_show_btn_cd);
    end

end

function DungeonCtrl:OpenDungeonCountDownRevivePanel(time)
    time = time or 5;
    if self.revivePanel then
        self.revivePanel:destroy();
    end
    self.revivePanel = DungeonCountDownRevivePanel(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.Top), { time = time });
end

--单人进入
function DungeonCtrl:SingleIn(merge)
    local today = string.split(tostring(os.date()), " ")[1];

    local main_role = SceneManager:GetInstance():GetMainRole();
    local roleid = "";
    if main_role and main_role.object_info then
        roleid = main_role.object_info.id
    end

    local isTip = PlayerPrefs.GetInt("DungeonCtrl.SingleIn" .. today .. "_" .. roleid, 0);
    --print2(isTip)
    if true then
        --isTip == 1
        --不提示直接进入
        DungeonCtrl:GetInstance():RequestEnterDungeon(enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EXP, nil, nil, nil, merge)
    else
        Dialog.ShowTwo("Tip", "\n\nSolo this?", "Confirm", handler(self, self.SingleInConfirm), nil, "Cancel", nil, nil, "Don't notice me again today");
    end

    local panel = lua_panelMgr:GetPanel(DungeonEntrancePanel);
    if panel then
        panel:Close();
    end
    self.model.exp_merge_count = 0
end

function DungeonCtrl:SingleInConfirm(bool)
    print2(bool);
    local today = string.split(tostring(os.date()), " ")[1];
    local main_role = SceneManager:GetInstance():GetMainRole();
    local roleid = "";
    if main_role and main_role.object_info then
        roleid = main_role.object_info.id
    end
    if bool then
        PlayerPrefs.SetInt("DungeonCtrl.SingleIn" .. today .. "_" .. roleid, 1);
    end
    DungeonCtrl:GetInstance():RequestEnterDungeon(enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EXP)
end

--多人进入
function DungeonCtrl:MultiIn()


end

function DungeonCtrl:HandleGameNotify(data)
    if data.msgno == msgno.MSG_BOSS_BORN then
        local bossid = data.args[1];
        bossid = tonumber(bossid);

        if not OpenTipModel.GetInstance():IsOpenSystem(160, 1) then
            return
        end
        if self.model:IsSemptytired(983) then
            return
        end
        if self.dbriItem then
            self.dbriItem:destroy();
        end

        self.dbriItem = DungeonBottomRightItem(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.Top), bossid)
    end
end

function DungeonCtrl:CheckBeastIslandOpen()
    if RoleInfoModel:GetInstance():GetMainRoleLevel() >= 350 then
        return ;
    end
    return "Mirage Island unlocks at L.350";
end
function DungeonCtrl:CheckCrossBeastIslandOpen()
    if RoleInfoModel:GetInstance():GetMainRoleLevel() >= 371 then
        return ;
    end
    return "Cross-server Mirage Island unlocks at L.371";
end


--以下是协议处理部份

--@ling autofun
function DungeonCtrl:HandleSweep()
    local data = self:ReadMsg("m_dunge_sweep_toc");
    --剩余次数-1次
    local allData = self.model.dungeon_info_list[data.stype]
    if allData and allData.info then
        local info = allData.info;
        info.rest_times = math.max(info.rest_times - 1, 0);
    end
    if data.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_SOUL then
        StigmasModel:GetInstance().dungenInfo["rest_times"] = StigmasModel:GetInstance().dungenInfo["rest_times"] - 1
        StigmasModel:GetInstance():SetTimes(StigmasModel:GetInstance().dungenInfo["rest_times"])
    end
    GlobalEvent.BrocastEvent(DungeonEvent.DUNGEON_SWEEP_REFRESH);
    --print2(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
    --print2(Table2String(data));

    --  神灵之路  单独处理  扫荡
    if data.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_GOD then
        local d = clone(data)
        d.isClear = true
        lua_panelMgr:GetPanelOrCreate(DungeonGodEndPanel):Open(d, true);
    else
        local panel = lua_panelMgr:GetPanel(SweepResultPanel);
        if panel then
            panel:RefreshData(data);
        else
            lua_panelMgr:GetPanelOrCreate(SweepResultPanel):Open(data);
        end
    end
    self.model:UpdateReddot();
end

function DungeonCtrl:RequestSweep(stype, floor, param)
    local pb = self:GetPbObject("m_dunge_sweep_tos");
    pb.stype = stype;
    if floor then
        pb.floor = floor;
    end
    if param then
        for i, v in pairs(param) do
            local item = pb.args:add()
            item.key = i
            item.value = v
        end
        --pb.args = param
    end
    self:WriteMsg(proto.DUNGE_SWEEP, pb);
end

function DungeonCtrl:RequestBossAnger()
    local pb = self:GetPbObject("m_boss_anger_tos", "pb_1204_boss_pb")
    self:WriteMsg(proto.BOSS_ANGER, pb)
end

function DungeonCtrl:HandleBossAnger()
    local data = self:ReadMsg("m_boss_anger_toc", "pb_1204_boss_pb");
    DungeonModel:GetInstance().angryData = data;
    GlobalEvent:Brocast(DungeonEvent.DUNGEON_SAVAGE_ANGRY_DATA);
end

function DungeonCtrl:RequestBuyTimes(stype)
    local pb = self:GetPbObject("m_dunge_buytimes_tos")
    pb.stype = stype
    self:WriteMsg(proto.DUNGE_BUYTIMES, pb)
end

function DungeonCtrl:HandleBuyTimes()
    local data = self:ReadMsg("m_dunge_buytimes_toc");
    local stype = data.stype;--11004

    if self.model.dungeon_info_list[stype] then
        Notify.ShowText("Purchased");
        local tab = self.model.dungeon_info_list[stype].info;
        tab.buy_times = tonumber(tab.buy_times) + 1;
        tab.rest_times = tonumber(tab.rest_times) + 1;
        GlobalEvent:Brocast(DungeonEvent.UpdateDungeonTime, stype, tab)
        self.model:UpdateReddot();
        MarryModel.GetInstance():UpdateRedPoint()
    else
        if stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_SOUL then
            StigmasModel:GetInstance().dungenInfo["rest_times"] = StigmasModel:GetInstance().dungenInfo["rest_times"] + 1
            StigmasModel:GetInstance():SetTimes(StigmasModel:GetInstance().dungenInfo["rest_times"])
            GlobalEvent:Brocast(DungeonEvent.UpdateSoulTimes, data)
        end
    end
end

function DungeonCtrl:RequestClearTimes(stype)
    local pb = self:GetPbObject("m_dunge_clearcd_tos")
    pb.stype = stype
    self:WriteMsg(proto.DUNGE_CLEARCD, pb)
end

function DungeonCtrl:HandleClearTimes()
    local data = self:ReadMsg("m_dunge_clearcd_toc");
    local stype = data.stype
    Notify.ShowText("CD skipped");
    if self.model.dungeon_info_list[stype] then
        local tab = self.model.dungeon_info_list[stype].info;
        tab.enter_cd = 0;
        GlobalEvent:Brocast(DungeonEvent.UpdateDungeonData, stype, tab)
    end
end

function DungeonCtrl:RequestEnterWorldBoss(sceneid, x1, y1)
    --logError("DungeonCtrl:RequestEnterWorldBoss,sceneid-"..sceneid)
    --local pb = self:GetPbObject("m_scene_change_tos", "pb_1200_scene_pb")
    --pb.scene = sceneid;
    --pb.type = enum.SCENE_CHANGE.SCENE_CHANGE_SHOES;
    --pb.coord = {x=x1,y=y1};
    --self:WriteMsg(proto.SCENE_CHANGE, pb)
    if x1 and y1 then
        SceneControler:GetInstance():RequestSceneChange(sceneid, enum.SCENE_CHANGE.SCENE_CHANGE_BOSS, { x = x1, y = y1 }, nil, 0);
    else
        SceneControler:GetInstance():RequestSceneChange(sceneid, enum.SCENE_CHANGE.SCENE_CHANGE_BOSS, nil, nil, 0);
    end

	
    print2('--MountCtrl 请求进入世界BOSS')
end

function DungeonCtrl:RequestEnterDungeon(stype, floor, dungeonID, is_enter_next, merge,param)
    local pb = self:GetPbObject("m_dunge_enter_tos")
    if stype then
        pb.stype = stype
    end
    if floor then
        pb.floor = floor
    end
    if dungeonID then
        pb.id = dungeonID
    end
    if is_enter_next then
        pb.next = is_enter_next
    end
    if merge then
        pb.merge = merge
    end
    if param then
        for i, v in pairs(param) do
            local item = pb.args:add()
            item.key = i
            item.value = v
        end
    end
    self:WriteMsg(proto.DUNGE_ENTER, pb)
end

function DungeonCtrl:HandleEnterDungeon()
    local data = self:ReadMsg("m_dunge_enter_toc")

    DungeonModel.GetInstance().DungeEnter[data.id] = data;
    self.model.curDungeonID = data.id
    self.model:Brocast(DungeonEvent.ResEnterDungeonInfo, data)
    GlobalEvent:Brocast(DungeonEvent.GlobalEnterDungeInfo, data)
end

function DungeonCtrl:RequeseExpDungeonInfo()
    local pb = self:GetPbObject("m_dunge_info_tos");
    self:WriteMsg(proto.DUNGE_INFO, pb);
end

function DungeonCtrl:HandleDungeonInfo()
    local data = self:ReadMsg("m_dunge_info_toc")
    local data1 = data
    local tab = data.info;
    if data.info.cur_wave then
        tab.cur_wave = data.info.cur_wave;
    end
    if data.info.max_wave then
        tab.max_wave = data.info.max_wave;
    end

    if data.count then
        tab.count = data.count
    end
    --print2(Table2String(data));

    tab.id = data.id;
    tab.stype = data.stype;
    --tab
    --for i = 1, #data.info, 1 do
    --    tab[data.info[i].key] = data.info[i].value;
    --end

    --local tab = data.info;
    --鼓舞伤害       inspire
    --药水经验加成   exp_elixir
    --组队经验加成   exp_team
    --活动经验加成   exp_activity
    --世界等级加成   world_level
    --经验获得       exp_gain

    self.model.dungeonInfo = tab;
    if data.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_SOUL then
        self.model.stigmasInfo = data
    end

    if data.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_GOD then
        GlobalEvent:Brocast(DungeonEvent.DUNGEON_EXP_GOLD_INFO, data1);
    else
        GlobalEvent:Brocast(DungeonEvent.DUNGEON_EXP_GOLD_INFO, tab);
    end

end

function DungeonCtrl:RequestInspire(inspireType)
    local pb = self:GetPbObject("m_dunge_inspire_tos");
    pb.type = inspireType;
    self:WriteMsg(proto.DUNGE_INSPIRE, pb);
end

function DungeonCtrl:RequestLeaveDungeon()
    local pb = self:GetPbObject("m_dunge_over_tos");
    self:WriteMsg(proto.DUNGE_OVER, pb);

    --SceneControler:GetInstance():RequestSceneLeave();
end

function DungeonCtrl:HandleDungeonStart()
    local data = self:ReadMsg("")

    GlobalEvent:Brocast(DungeonEvent.EXPDUNGEON_START);
end

function DungeonCtrl:RequestDungeonPanel(stype)
    local pb = self:GetPbObject("m_dunge_panel_tos");
    pb.stype = stype;
    self:WriteMsg(proto.DUNGE_PANEL, pb);
end
--required int32     id   = 1; // 副本id
--map<string, int32> info = 2; // 副本信息
function DungeonCtrl:HandleDungeonPanel()
    local data = self:ReadMsg("m_dunge_panel_toc");
    data.info.enter_cd = tonumber(data.info.enter_cd);
    data.info.id = data.id;
    data.info.stype = data.stype;

    -- 准备去除
    -- DungeonModel:GetInstance().Entrance[id] = data;

    self.model.dungeon_info_list[data.stype] = data
    GlobalEvent:Brocast(DailyEvent.UpdateMagicTowerLayer, data.info.cur_floor)
    self.model:UpdateReddot(data.stype);
    GlobalEvent:Brocast(DungeonEvent.UpdateDungeonData, data.stype, data)
end

function DungeonCtrl:HandleDungeonInspire()
    local data = self:ReadMsg("m_dunge_inspire_toc")
    local inspireType = data.type;
    if inspireType == 1 then
        if self.model.dungeonInfo then
            self.model.dungeonInfo.coin_inspire = self.model.dungeonInfo.coin_inspire - 1;
        end
    else
        if self.model.dungeonInfo then
            self.model.dungeonInfo.gold_inspire = self.model.dungeonInfo.gold_inspire - 1;
        end
    end
    if self.model.dungeonInfo then
        local panel = lua_panelMgr:GetPanel(GuwuPanel);
        if panel then
            panel:UpdateCount(self.model.dungeonInfo.coin_inspire, self.model.dungeonInfo.gold_inspire);
        end
    end
    BrocastModelEvent(DungeonEvent.DUNGEON_GUWU_OR_USEDRUG, nil)
    Notify.ShowText("Inspired, Attack increased!");
end

function DungeonCtrl:HandleDungeonOver()
    local data = self:ReadMsg("m_dunge_over_toc")
    local original_data = {}

    --数据特殊处理
    if data.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_COUPLE then
        original_data = clone(data)
    end
    --做一些副本析构
    local isClear = data.clear;
    local tab = data.stat;
    tab.stype = data.stype
    tab.id = data.id;
    tab.isClear = data.clear;
    tab.count = data.count;


    --for i = 1 , #data.stat , 1 do
    --    tab[data.stat[i].key] = data.stat[i].value;
    --end
    if isClear and data.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MAGICTOWER then
        local dungeon_data = self.model.dungeon_info_list[data.stype]
        if dungeon_data and dungeon_data.info.cur_floor then
            dungeon_data.info.cur_floor = dungeon_data.info.cur_floor + 1
        end
    elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_COUPLE then
        local cp_panel = lua_panelMgr:GetPanelOrCreate(CoupleAnswerPanel)
        if cp_panel.gameObject then
            SetVisible(cp_panel, true)
            --end
            local answer_data = clone(original_data)
            cp_panel:RevealAllAnswer(answer_data)

            return
        else
            local answer_data = clone(original_data)
            CoupleModel.GetInstance().end_data = answer_data
            CoupleModel.GetInstance().is_need_show_end_panel = true
            SceneControler:GetInstance():RequestSceneLeave()
        end
    end

    --print2(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
    --print2(Table2String(data));
    local call_back = function()
        BloodCtrl:GetInstance():CloseBossBloodView();
        if data.clear then
            SoundManager:GetInstance():PlayById(42);
        else
            SoundManager:GetInstance():PlayById(43);
        end
        --print2(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
        --print2(Table2String(data));
        --print2(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
        if tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EXP then
            lua_panelMgr:GetPanelOrCreate(DungeonExpEndPanel):Open(tab);
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_COIN then
            lua_panelMgr:GetPanelOrCreate(DungeonGoldEndPanel):Open(tab);
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MOUNT then
            tab["reward"] = data["reward"];
            lua_panelMgr:GetPanelOrCreate(DungeonAdvanceEndPanel):Open(tab);
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MAGICTOWER then
            tab["reward"] = data["reward"];
            lua_panelMgr:GetPanelOrCreate(DungeonTowerEndPanel):Open(tab);
            GlobalEvent:Brocast(DailyEvent.MagicTowerOver, data.clear)
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_PET then
            tab["reward"] = data["reward"];
            lua_panelMgr:GetPanelOrCreate(DungeonPetEndPanel):Open(tab);
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_GUILDGUARD then
            tab["reward"] = data["reward"];
            lua_panelMgr:GetPanelOrCreate(DungeonGuildGuardEndPanel):Open(tab);
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_EQUIP then
            tab["reward"] = data["reward"];
            if not table.isempty(tab["reward"]) then
                lua_panelMgr:GetPanelOrCreate(DungeonEquipEndPanel):Open(tab);
            else
                SceneControler:GetInstance():RequestSceneLeave();
            end
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_WORLD_BOSS then
            SceneControler:GetInstance():RequestSceneLeave();
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_NEWBIE then
            print2(SceneManager:GetInstance():GetSceneId())
            SceneControler:GetInstance():RequestSceneLeave();
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_DAILY then
            SceneControler:GetInstance():RequestSceneLeave();
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_ROLE_BOSS then
            SceneControler:GetInstance():RequestSceneLeave()
            --lua_panelMgr:GetPanelOrCreate(DungeonPersonalBossEndPanel):Open(tab)
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_COUPLE then

        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_YUNYING_TOWER then
            tab["reward"] = data["reward"];
            lua_panelMgr:GetPanelOrCreate(GodScoreDungeEndPanel):Open(tab);
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_GOD then
            local t = clone(data)
            t.isClear = data.clear
            lua_panelMgr:GetPanelOrCreate(DungeonGodEndPanel):Open(t);
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_SOUL then
            tab["reward"] = data["reward"];
            lua_panelMgr:GetPanelOrCreate(StigmasDungeEndPanel):Open(tab);
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_YUNYING_LIMITTOWER then
            tab["reward"] = data["reward"];
            lua_panelMgr:GetPanelOrCreate(LimitTowerEndPanel):Open(tab);
            -- lua_panelMgr:GetPanelOrCreate(StigmasDungeEndPanel):Open(tab);
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_NEWBIE_SUMMON then
            SceneControler:GetInstance():RequestSceneLeave()
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_NEWBIE_ANGER then
            SceneControler:GetInstance():RequestSceneLeave()
        elseif tab.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_RACE then
            local panel = lua_panelMgr:GetPanel(RaceMainPanel)
            if panel then
                panel:SetRaceReward(data["reward"])
            end
        else
            -- SceneControler:GetInstance():RequestSceneLeave();
            Notify.ShowText("Failed to find the approach: " .. tab.stype .. "to process dungeon calculation")
        end
    end

    local time = 10;
    local dungeTab = Config.db_dunge[tab.id];
    if dungeTab then
        time = dungeTab.stat_cd;
    end
    time = time or 10;
    if tab.isClear then
        BrocastModelEvent(DungeonEvent.DUNGEON_AUTO_EXIT, nil, time, call_back);
    else
        call_back();
    end




    --print2("副本结算协议---------------------")
    GlobalEvent:Brocast(DungeonEvent.DungeonExit);
end


-----------------世界BOSS部份
--boss列表
function DungeonCtrl:RequestBossList(bossType, floor)
    local pb = self:GetPbObject("m_boss_list_tos", "pb_1204_boss_pb")
    pb.type = tonumber(bossType);
    if (floor) then
        pb.floor = floor
    end
    self:WriteMsg(proto.BOSS_LIST, pb)
end

function DungeonCtrl:HandleBossList()
    local data = self:ReadMsg("m_boss_list_toc", "pb_1204_boss_pb");
    --logError("DungeonCtrl:HandleBossList,data - " .. Table2String(data))
    --data.type , data.bosses
    if data.type == enum.BOSS_TYPE.BOSS_TYPE_SPATIOTEMPORAL2 then
        data.type = enum.BOSS_TYPE.BOSS_TYPE_SPATIOTEMPORAL
    end
    DungeonModel:GetInstance().BossInfo[data.type] = data.bosses;
    DungeonModel:GetInstance().tired = data.tired;
    DungeonModel:GetInstance().enter = data.enter;
    if self.model:IsBeastBoss(data.type) then
        DungeonModel:GetInstance().beast_coll = data.beast_coll;
        DungeonModel:GetInstance().beast_coll2 = data.beast_coll2;
        DungeonModel:GetInstance().beast_tired = data.beast_tired;
    end

    if (data.type == enum.BOSS_TYPE.BOSS_TYPE_PET) then
        DungeonModel:GetInstance():SetPetBossInfo(data)
    end

    if DungeonModel.GetInstance():IsSpacetimeCrackBoss(data.type) then
        DungeonModel:GetInstance():SetSpaceTimeCrackBossInfo(data)
    end

    GlobalEvent.BrocastEvent(DungeonEvent.WORLD_BOSS_LIST, data);
    self.model:UpdateReddot();
end


--boss信息
function DungeonCtrl:RequestBossInfo(bossID)
    local pb = self:GetPbObject("m_boss_info_tos", "pb_1204_boss_pb")
    pb.id = tonumber(bossID);
    self:WriteMsg(proto.BOSS_INFO, pb)
end

function DungeonCtrl:HandleBossInfo()
    local data = self:ReadMsg("m_boss_info_toc", "pb_1204_boss_pb");
    --logError("DungeonCtrl:HandleBossInfo,data-"..Table2String(data))
    --data.id , data.ownner
    if data.type == enum.BOSS_TYPE.BOSS_TYPE_SPATIOTEMPORAL2 then
        data.type = enum.BOSS_TYPE.BOSS_TYPE_SPATIOTEMPORAL
    end
    local type = data.type or enum.BOSS_TYPE.BOSS_TYPE_WORLD;
    local bossid = data.id;
    local time = data.born;
    local weak = data.weak;
    local num = data.num
    local tab = DungeonModel:GetInstance().BossInfo[type];
    if tab then
        for k, v in pairs(tab) do
            if v.id == bossid then
                v.born = time;
                if (weak) then
                    v.weak = weak
                end
                v.num = num
            end
            if self.model:IsBeastBoss(data.type) and data.id == v.id then
                tab[k] = data;
            end
        end
    end

    if data.type == enum.BOSS_TYPE.BOSS_TYPE_SPATIOTEMPORAL then
        for k,v in pairs(self.model.spacetime_boss_list_info.bosses) do
            if v.id == data.id then
                local cfg = Config.db_boss[v.id]
                if cfg.type == enum.BOSS_TYPE.BOSS_TYPE_SPATIOTEMPORAL2 then
                    --logError("-DungeonCtrl:HandleBossInfo 时空裂缝隐藏boss,v.id-"..v.id..",v.num-"..v.num)
                end
                --处理时空裂缝boss信息
                v.num = data.num 
            end
        end
    end

    GlobalEvent.BrocastEvent(DungeonEvent.WORLD_BOSS_INFO, data);
end

---BOSS更换
function DungeonCtrl:HandleBossChange()
    local data = self:ReadMsg("m_boss_change_toc", "pb_1204_boss_pb");

    if (data) then
        DungeonModel:GetInstance():ChangeBoss(data.oldid, data.newid)
        GlobalEvent.BrocastEvent(DungeonEvent.BOSS_CHANGE_Event, data);
    end
end

---BOSS弱化计时停止
function DungeonCtrl:HandleBossWeakStop()
    local data = self:ReadMsg("m_boss_weakstop_toc", "pb_1204_boss_pb");

    if (data) then
        GlobalEvent.BrocastEvent(DungeonEvent.BOSS_WEAK_STOP_Event, data);
    end
end


--关注协议 op 1=关注; 2=取消关注
function DungeonCtrl:RequestBossCare(bossType, bossID, op)
    local pb = self:GetPbObject("m_boss_care_tos", "pb_1204_boss_pb")
    pb.type = bossType;
    pb.id = tonumber(bossID);
    pb.op = op;

    self:WriteMsg(proto.BOSS_CARE, pb)
end

function DungeonCtrl:HandleBossCare()
    --pb_1204_boss_pb
    local data = self:ReadMsg("m_boss_care_toc", "pb_1204_boss_pb");
    --data.id , data.ownner
    local today = string.split(tostring(os.date()), " ")[1];
    GlobalEvent.BrocastEvent(DungeonEvent.WORLD_BOSS_CARE, data);
    local bossType = data.type;
    local bossID = data.id;
    local op = data.op;
    local isTip = PlayerPrefs.GetInt("DungeonCtrl.CareBoss" .. bossID .. "_" .. today, 0);

    local tab = DungeonModel:GetInstance():GetDungeonBossInfo(bossType, bossID);
    if tab then
        tab.care = op == 1;
    end

    local careFun = function(bool)
        if bool then
            PlayerPrefs.SetInt("DungeonCtrl.CareBoss" .. bossID .. "_" .. today, 1);
        end
    end
    if isTip ~= 1 and op == 1 then
        Dialog.ShowTwo("Tip", "Followed, 1 min before the boss respawns, you will receive a notice", "Confirm", careFun, nil, "Cancel", nil, nil, "Don't notice me again today");
    end
end


--击杀记录
function DungeonCtrl:RequestBossKill(bossID)
    local pb = self:GetPbObject("m_boss_killed_tos", "pb_1204_boss_pb")
    pb.id = tonumber(bossID);
    self:WriteMsg(proto.BOSS_KILLED, pb)
end

function DungeonCtrl:HandleBossKilled()
    local data = self:ReadMsg("m_boss_killed_toc", "pb_1204_boss_pb");
    --data.id , data.ownner
    --GlobalEvent.BrocastEvent(DungeonEvent.WORLD_BOSS_KILL , data);
    lua_panelMgr:GetPanelOrCreate(DungeonKillLogPanel):Open(data);
end

--掉落记录
function DungeonCtrl:RequestBossDrop(type)
    local pb = self:GetPbObject("m_boss_dropped_tos", "pb_1204_boss_pb")
    pb.type = type or 1;
    self:WriteMsg(proto.BOSS_DROPPED, pb)
end

function DungeonCtrl:HandleBossDrop()
    --p_dropped logs = 1; // 掉落日志
    local data = self:ReadMsg("m_boss_dropped_toc", "pb_1204_boss_pb");
    --data.id , data.ownner
    GlobalEvent.BrocastEvent(DungeonEvent.WORLD_BOSS_DROP, data);
end



--刷新提醒
function DungeonCtrl:HandleBossRemind()
    local data = self:ReadMsg("m_boss_remind_toc", "pb_1204_boss_pb");
    if not OpenTipModel.GetInstance():IsOpenSystem(160, 1) then
        return
    end
    if self.model:IsSemptytired(983) then
        return
    end
    --data.id , data.ownner
    GlobalEvent.BrocastEvent(DungeonEvent.WORLD_BOSS_REMIND, data);
    if self.dbri then
        self.dbri:destroy();
    end
    local sceneid = SceneManager:GetInstance():GetSceneId()
    local config = Config.db_scene[sceneid] or {}
    if config.type == enum.SCENE_TYPE.SCENE_TYPE_CITY or config.type == enum.SCENE_TYPE.SCENE_TYPE_FIELD then
        self.dbri = DungeonBottomRightItem(LayerManager:GetInstance():GetLayerByName(LayerManager.LayerNameList.Top), data.id);
    end

end

-- 领取奖励
function DungeonCtrl:RequestFetch(stype, type)
    local pb = self:GetPbObject("m_dunge_fetch_tos")
    pb.stype = stype
    pb.type = type
    self:WriteMsg(proto.DUNGE_FETCH, pb)
end

function DungeonCtrl:HandleFetch()
    local data = self:ReadMsg("m_dunge_fetch_toc")
    if data.stype == enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MAGICTOWER then
        Notify.ShowText("Claim daily reward")
        local data = self.model.dungeon_info_list[data.stype];
        if data and data.info then
            data.info.daily_gift = 1;--前端先记录为已领取
        end
    end
    self.model:Brocast(DungeonEvent.FetchResult, data.stype, data)
    self.model:UpdateReddot();
end

--转盘抽奖信息
function DungeonCtrl:RequestLotoInfo(stype)
    local pb = self:GetPbObject("m_dunge_lotoinfo_tos")
    pb.stype = stype
    self:WriteMsg(proto.DUNGE_LOTOINFO, pb)
end

function DungeonCtrl:HandleLotoInfo()
    local data = self:ReadMsg("m_dunge_lotoinfo_toc")
    self.model.loto_info[data.stype] = data
    self.model:Brocast(DungeonEvent.LotoInfoUpdate, data.stype)

    self.model:CheckTowerReddot();
    BrocastModelEvent(DungeonEvent.UpdateReddot);
    self.model:CheckMainReddot();
end

--转盘抽奖
function DungeonCtrl:RequestLoto(stype)
    local pb = self:GetPbObject("m_dunge_loto_tos")
    pb.stype = stype
    self:WriteMsg(proto.DUNGE_LOTO, pb)
end

function DungeonCtrl:HandleLoto()
    local data = self:ReadMsg("m_dunge_loto_toc")
    local info = self.model.loto_info[data.stype]
    if info then
        info.hits[#info.hits + 1] = data.hit
    end
    local dungeon_info = self.model.dungeon_info_list[data.stype]
    if dungeon_info and dungeon_info.info.loto_times then
        dungeon_info.info.loto_times = dungeon_info.info.loto_times - 1
    end
    GlobalEvent:Brocast(DungeonEvent.UpdateDungeonData, data.stype)
    self.model:Brocast(DungeonEvent.LotoResult, data.stype, data.hit)
    self.model:Brocast(DungeonEvent.LotoInfoUpdate, data.stype)

    self.model:CheckTowerReddot();
    BrocastModelEvent(DungeonEvent.UpdateReddot);
    self.model:CheckMainReddot();
end


--这块是竞技场的

--进入副本推送当前情况
function DungeonCtrl:RequestMeleeInfo()
    local pb = self:GetPbObject("m_melee_info_tos", "pb_1603_melee_pb")
    self:WriteMsg(proto.MELEE_INFO, pb)
end
function DungeonCtrl:HandleMeleeInfo()
    local data = self:ReadMsg("m_melee_info_toc", "pb_1603_melee_pb");
    local boss_refresh = data.boss_refresh;
    local etime = data.etime;
    --print2(Table2String(data));
    BrocastModelEvent(MELEEEvent.MELEE_INFO, nil, data);
    --BrocastModelEvent()
end
--推送玩家自己的数据
function DungeonCtrl:HandleMeleeSelf()
    local data = self:ReadMsg("m_melee_self_toc", "pb_1603_melee_pb");
    local rank = data.rank;
    local score = data.score;
    print2(Table2String(data));
    BrocastModelEvent(MELEEEvent.MELEE_SELF, nil, data);
end
---- 伤害排名
function DungeonCtrl:RequestDamageRank()
    local pb = self:GetPbObject("m_melee_damage_rank_tos", "pb_1603_melee_pb")
    self:WriteMsg(proto.MELEE_DAMAGE_RANK, pb)
end
function DungeonCtrl:HandleMeleeDamageRank()
    local data = self:ReadMsg("m_melee_damage_rank_toc", "pb_1603_melee_pb");
    local ranks = data.ranks;
    BrocastModelEvent(MELEEEvent.MELEE_DAMAGE_RANK, nil, ranks);
end

function DungeonCtrl:RequestScoreRank()
    local pb = self:GetPbObject("m_melee_score_rank_tos", "pb_1603_melee_pb")
    self:WriteMsg(proto.MELEE_SCORE_RANK, pb)
end
--积分排名
function DungeonCtrl:HandleMeleeScoreRank()
    local data = self:ReadMsg("m_melee_score_rank_toc", "pb_1603_melee_pb");
    local ranks = data.ranks;
    BrocastModelEvent(MELEEEvent.MELEE_SCORE_RANK, nil, ranks);
end
--回合结束，开始倒计时
function DungeonCtrl:HandleMeleeRoundEnd()
    local data = self:ReadMsg("m_melee_round_end_toc", "pb_1603_melee_pb");
    local boss_refresh = data.boss_refresh;
    BrocastModelEvent(MELEEEvent.MELEE_ROUND_END, nil, boss_refresh);
end
--boss刷新了,下一回合开始，前端重置面板数据
function DungeonCtrl:HandleMeleeRoundBegin()
    local data = self:ReadMsg("m_melee_round_begin_toc", "pb_1603_melee_pb");
    print2("DungeonCtrl:HandleMeleeRoundBegin");

    BrocastModelEvent(MELEEEvent.MELEE_ROUND_BEGIN, nil, data);
end

--结算map<int32, int32> rewards = 1;
function DungeonCtrl:HandleMeleeReward()
    local data = self:ReadMsg("m_melee_reward_toc", "pb_1603_melee_pb");
    local rewards = data.rewards;
    print2(Table2String(rewards));
    --BrocastModelEvent(MELEEEvent.MELEE_REWARD, nil, rewards);

    --data["reward"] = data["rewards"];
    lua_panelMgr:GetPanelOrCreate(DungeonMeleeEndPanel):Open(data);

end
--message p_melee_rank {
--    required int32          rank = 1;
--    required string         name = 2;
--    required int32          val  = 3; //表示伤害或者积分
--}

--这块是进阶副本的

function DungeonCtrl:RequestDungeonMount()
    local pb = self:GetPbObject("m_dunge_mount_panel_tos");
    self:WriteMsg(proto.DUNGE_MOUNT_PANEL, pb);
end
--map<int32, int32> enter = 1; // 进入次数 key=DungeID, val=EnterTimes
--map<int32, int32> star  = 2; // 星数评分 key=DungeID, val=Star
--repeated int32    fetch = 3; // 已领取奖励列表
function DungeonCtrl:HandleDungeonMount()
    local data = self:ReadMsg("m_dunge_mount_panel_toc");
    DungeonModel:GetInstance().advanceData = data;
    BrocastModelEvent(EntranceEvent.ENTRANCE_ADVANCE_DATA, nil, data);
    self.model:UpdateReddot(enum.SCENE_STYPE.SCENE_STYPE_DUNGE_MOUNT);
end

function DungeonCtrl:HandleQuestion()
    local data = self:ReadMsg("m_dunge_question_toc");
    GlobalEvent:Brocast(DungeonEvent.DeliverQuestion, data.id)
end

function DungeonCtrl:RequestAnswerQuestion(stype, answer)
    local pb = self:GetPbObject("m_dunge_question_answer_tos");
    pb.stype = stype
    pb.answer = answer
    self:WriteMsg(proto.DUNGE_QUESTION_ANSWER, pb);
end

function DungeonCtrl:HandleSuccessSubmitAnswer()
    local data = self:ReadMsg("m_dunge_question_answer_toc");
    GlobalEvent:Brocast(DungeonEvent.HandleSuccessSubmitAnswer, data.stype, data.answer)
end

--发送情侣副本次数购买提醒
function DungeonCtrl:ReqeustBuyTimes(stype)
    local pb = self:GetPbObject("m_dunge_buy_times_ask_tos")
    pb.stype = stype
    self:WriteMsg(proto.DUNGE_BUY_TIMES_ASK, pb)
end

function DungeonCtrl:HandleTimesBuyAsk()
    local data = self:ReadMsg("m_dunge_buy_times_ask_toc")
    if data.ask_name ~= RoleInfoModel.GetInstance():GetRoleValue("mname") then
        return
    end
    GlobalEvent:Brocast(TeamEvent.ReciveRemindFromTeamate, data.stype, data.ask_name)
end

function DungeonCtrl:CheckFairyUse(scene)
    if EquipModel.GetInstance().is_first_return then
        return
    end
    for itemid, v in pairs(Config.db_fairy) do
        local stype_tab = String2Table(v.scene)
        if not table.isempty(stype_tab) then
            if table.containValue(stype_tab, scene.stype) then
                local itemcfg = Config.db_item[itemid]
                local slot = itemcfg.stype
                local pitem = EquipModel.GetInstance():GetEquipBySlot(slot)
                if not pitem or BagModel.GetInstance():IsExpire(pitem.etime) then
                    local UITransform = LayerManager.Instance:GetLayerByName(LayerManager.LayerNameList.UI)
                    local item = FairyUseItem(UITransform)
                    item:SetData(itemid)
                    break
                end
            end
        end
    end
    if self.checkfairy_schedule then
        GlobalSchedule:Stop(self.checkfairy_schedule)
        self.checkfairy_schedule = nilsd
    end
end

--请求开始副本（过场动画播放完毕后调用的）
function DungeonCtrl:RequestDungeStart()
    local pb = self:GetPbObject("m_dunge_start_tos")
    self:WriteMsg(proto.DUNGE_START, pb)
end
function DungeonCtrl:HandleDungeStart()

end

function DungeonCtrl:RequestBossDamageRank(uid)
    local pb = self:GetPbObject("m_boss_damage_rank_tos", "pb_1204_boss_pb")
    pb.id = uid
    self:WriteMsg(proto.BOSS_DAMAGE_RANK, pb)
end

function DungeonCtrl:HandgeBossDamageRank()
    local data = self:ReadMsg("m_boss_damage_rank_toc", "pb_1204_boss_pb")
    GlobalEvent:Brocast(DungeonEvent.UpdateBossDamageRank, data)
end

--请求支援
function DungeonCtrl:RequestSoSInfo()
    local pb = self:GetPbObject("m_boss_sos_tos", "pb_1204_boss_pb")

    self:WriteMsg(proto.BOSS_SOS, pb)
end



function DungeonCtrl:HandleSoSInfo()
    local data = self:ReadMsg("m_boss_sos_toc", "pb_1204_boss_pb")
   -- logError("请求支援返回")
    self.model:SetSoSInfo(data)
    if RoleInfoModel:GetInstance():GetMainRoleId() == data.role.id then
        local role = data.role
        local sceneCfg = Config.db_scene[data.scene_id]
        local sceneName = sceneCfg.name
        if not sceneCfg then
            sceneName = "Unknown scene"
        end
        local x, y = SceneManager.GetInstance():GetBlockPos(data.x, data.y)
        local text = string.format("Your guild mate %s is %s assisting now.Assist him now?-<color=#3ab60e><a href=mapPos_%s_%s_%s>Assisting now</a></color>",role.name,sceneName,data.scene_id,x,y)
        if sceneCfg.type == enum.SCENE_TYPE.SCENE_TYPE_ACT then
            text = string.format("Your guild mate %s is %s assisting now.Assist him now?-<color=#3ab60e><a href=mapPos_%s_%s_%s>Assisting now</a></color>",role.name,sceneName,data.scene_id,x,y)
        end

        ChatController.GetInstance():RequestSendChat(enum.CHAT_CHANNEL.CHAT_CHANNEL_GUILD , 0, text)
    end

    GlobalEvent:Brocast(DungeonEvent.SoSInfo, data)
end