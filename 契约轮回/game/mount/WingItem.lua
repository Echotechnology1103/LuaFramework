---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2018/9/21 16:53
---
WingItem = WingItem or class("WingItem", Node)
local this = WingItem

function WingItem:ctor(_obj, wingTab)
    self.wingTab = wingTab;
    self.transform = _obj.transform
    self.gameObject = self.transform.gameObject;
    self.transform_find = self.transform.Find;

    self.image_ab = "mount_image";

    self:InitUI();
    self.events = {}

    self:AddEvent();
end

function WingItem:dctor()
    GlobalEvent:RemoveTabListener(self.events);
    if self.reddot then
        self.reddot:destroy();
    end
    self.stars = nil;
    self.reddot = nil;
end

function WingItem:InitUI()
    self.is_loaded = true;
    self.nodes = {
        "icon", "item_name", "starContainer/star_2", "starContainer/star_4", "item_active","item_wear",
        "starContainer/star_5", "starContainer/star_3", "starContainer", "starContainer/star_1",
        "item_bg", "item_select", "item_bg/item_bg_1", "item_bg/item_bg_2", --"item_select/item_select_1", "item_select/item_select_2",
    }
    self:GetChildren(self.nodes)

    self.item_active = GetImage(self.item_active);

    self.item_name = GetText(self.item_name);

    self.item_wear = GetImage(self.item_wear);
    self:ShowWear(false)
    self.icon = GetImage(self.icon);

    self.stars = {};

    self.reddot = RedDot(self.transform, nil, RedDot.RedDotType.Nor);
    self.reddot:SetPosition(69, 35);
    --self.reddot:SetRedDotParam(true);

    for i = 1, 5, 1 do
        local starName = "star_" .. i;
        self.stars[i] = GetToggle(self[starName]);
        self.stars[i].isOn = false;
        self.stars[i].gameObject:SetActive(false);
    end

    self.item_name.text = self.wingTab.name;
    --self.item_active.text = self.wingTab.reqs_text .. "激活";
    SetGameObjectActive(self.item_active, false);

    local panel_type = 1;
    local panel = lua_panelMgr:GetPanel(WingHuaXingPanel);
    if panel  then
        panel_type = panel.currentPanel;
    end
    if self.wingTab then
        if panel_type == 2 then
            lua_resMgr:SetImageTexture(self, self.icon, 'iconasset/icon_wing', self.wingTab.res, false)
        elseif panel_type == 3 then
            lua_resMgr:SetImageTexture(self, self.icon, 'iconasset/icon_tails', self.wingTab.res, false)
        elseif panel_type == 4 then
            lua_resMgr:SetImageTexture(self, self.icon, 'iconasset/icon_weapon', self.wingTab.res, false)
        end

    end
    --if self.wingTab.reqs_text then
    --    self.item_active.text = self.wingTab.reqs_text .. "激活";
    --else
    --    if self.wingTab.reqs then
    --        local reqsTab = String2Table(self.wingTab.reqs);
    --        if reqsTab[1] == "lv" then
    --            self.item_active.text = reqsTab[2] .. "转激活";
    --        end
    --    end
    --
    --end


    --self.tog = GetToggle(self.tog);
    --self.mountName = GetText(self.mountName);
    --self.lock = GetImage(self.lock);
end

function WingItem:AddEvent()

    local callBack = function()
        if self.wingTab then
            --GlobalEvent:Brocast(MountEvent.WING_ITEM_CLICK , self.wingTab.id);
            GlobalEvent.BrocastEvent(MountEvent.WING_ITEM_CLICK, self);
        end
    end

    AddClickEvent(self.gameObject, callBack);
end
--更新星数
function WingItem:UpdateData(data)

end
--设置名字
function WingItem:SetName(str)
    --设置头像
end
function WingItem:SetIcon(str)
    --lua_resMgr:SetImageTexture(self,self.icon,self.image_ab,"head1",true);
end

function WingItem:UpdateStar(num)
    for i = 1, 5, 1 do
        self.stars[i].gameObject:SetActive(true);
        self.stars[i].isOn = false;
    end
    for i = 1, num, 1 do
        self.stars[i].gameObject:SetActive(true);
        self.stars[i].isOn = true;
    end
    self.starNum = num;

end
--function WingItem:SetisActive(bool)
--    self.isActive = bool;
--    if bool then
--        self.item_active.gameObject:SetActive(false);
--        SetGameObjectActive(self.starContainer, true);
--        self:UpdateStar(0);
--    else
--        self.item_active.gameObject:SetActive(true);
--        SetGameObjectActive(self.starContainer, false);
--        self:UpdateStar(0);
--    end
--end
--num 0隐藏, 1未拥有,2可激话,3可升星
function WingItem:SetisActive(num)
    if self.isActive == num then
        return;
    end
    --if self.wingTab.name == "圣灵光羽" then
    --    print2("");
    --end
    self.isActive = num;
    SetGameObjectActive(self.starContainer, true);
    SetGameObjectActive(self.item_active, true);
    if num == 1 then
        lua_resMgr:SetImageTexture(self, self.item_active, self.image_ab, "huaxing_panel_not_own", false);
        SetGameObjectActive(self.starContainer, false);
        self:SetNameBig(true);
    elseif num == 2 then
        lua_resMgr:SetImageTexture(self, self.item_active, self.image_ab, "huaxing_panel_activate", false);
        SetGameObjectActive(self.starContainer, false);
        self:SetNameBig(true);
    elseif num == 3 then
        lua_resMgr:SetImageTexture(self, self.item_active, self.image_ab, "huaxing_panel_upstarable", false);
        self:SetNameBig(false);
    else
        SetGameObjectActive(self.item_active, false);
        self:UpdateStar(0);
        self:SetNameBig(false);
        --lua_resMgr:SetImageTexture(self, self.item_active, self.image_ab, "huaxing_panel_not_own", false);
    end
    --if num == 0 then
    --    self.item_active.gameObject:SetActive(false);
    --    SetGameObjectActive(self.starContainer, true);
    --    self:UpdateStar(0);
    --else
    --    self.item_active.gameObject:SetActive(true);
    --    SetGameObjectActive(self.starContainer, false);
    --    self:UpdateStar(0);
    --end
end

function WingItem:SetNameBig(bool)
    if toBool(bool) then
        SetLocalPosition(self.item_name.transform , GetLocalPositionX(self.item_name.transform) , 0 , GetLocalPositionZ(self.item_name.transform));
        self.item_name.fontSize = 24;
    else
        SetLocalPosition(self.item_name.transform , GetLocalPositionX(self.item_name.transform) , 5.6 , GetLocalPositionZ(self.item_name.transform));
        self.item_name.fontSize = 20;
    end

end
--selected color FFE463  --not selected E2DCBF
function WingItem:Select(bool)
   -- SetVisible(self.item_bg_2, bool)
  --  SetVisible(self.item_bg_1, not bool);
    SetVisible(self.item_select, bool);

    if bool or self.isActive ~= 1 then
        ShaderManager:GetInstance():SetImageNormal(self.icon);
        SetColor(self.item_name, 0xFF, 0xE4, 0x63, 255);
    else
        ShaderManager:GetInstance():SetImageGray(self.icon);
        SetColor(self.item_name, 0xE2, 0xDC, 0xBF, 255);
    end
end

function WingItem:ShowReddot(bool)
    if self.reddot then
        self.reddot:SetRedDotParam(bool);
    end
end

function WingItem:ShowWear(bool)
    self.isWear = toBool(bool)
    if self.item_wear then
        SetGameObjectActive(self.item_wear.gameObject , bool)
    end
end


