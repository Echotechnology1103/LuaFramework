---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2018/9/20 11:18
---

MountUsePanel = MountUsePanel or class("MountUsePanel", WindowPanel)
local MountUsePanel = MountUsePanel

function MountUsePanel:ctor(parent_node, layer)
    self.abName = "mount"
    self.assetName = "MountUsePanel"
    self.layer = "UI"
    self.events = {};
    self.panel_type = 3
    --  MountUsePanel.super.Load(self);
end

function MountUsePanel:dctor()
    --print2("MountUsePanel:dctor");

    if self.items then
        for k,v in pairs(self.items) do
            v:destroy();
        end
    end

  
    GlobalEvent:RemoveTabListener(self.events);
end

function MountUsePanel:Open()
    MountUsePanel.super.Open(self)
end


function MountUsePanel:LoadCallBack()
    self.nodes = {
        "con",  "item_0", "ScrollView/Viewport/Content",
    }
    self:GetChildren(self.nodes)
    SetLocalPosition(self.transform, 0, 0, -1000);
    AddBgMask(self.gameObject);
    self.items = {};
    local allTrainTab = {};
    for k, v in pairs(Config.db_mount_train) do
        table.insert(allTrainTab, v);
    end
    table.sort(allTrainTab, function(tab1, tab2)
        return tab1.item_id < tab2.item_id
    end)

    self:SetPanelSize(620, 430)
    for i = 1, #allTrainTab, 1 do
        local tab = allTrainTab[i];
        local item = newObject(self.item_0.gameObject);
        item.gameObject.name = "item_" .. i;
        self.items[i] = MountUseItem(item,self.transform, tab);
        self.items[i].transform:SetParent(self.Content.transform);
        SetLocalScale(self.items[i].transform, 1, 1, 1);
    end
    local rt = self.Content:GetComponent("RectTransform");
    rt.sizeDelta = Vector2(rt.sizeDelta.x , #allTrainTab * 120)
    SetAnchoredPosition(rt ,0 , 0);
    --if self.useItem_1 == nil then
    --    self.useItem_1 = MountUseItem(self.item_1, 50010)
    --end
    --if self.useItem_2 == nil then
    --    self.useItem_2 = MountUseItem(self.item_2, 50011)
    --end
    --if self.useItem_3 == nil then
    --    self.useItem_3 = MountUseItem(self.item_3, 50012)
    --end
    --if self.useItem_4 == nil then
    --    self.useItem_4 = MountUseItem(self.item_4, 50013)
    --end

    self.item_0.gameObject:SetActive(false);

    self:AddEvent();
    self:SetTileTextImage("mount_image", "title");
end

function MountUsePanel:AddEvent()
    --local call_back = function()
    --    GlobalEvent:Brocast(MountEvent.CLOSE_USE_PANEL)
    --end
    --
    --AddClickEvent(self.closebtn.gameObject, call_back, true);
    AddEventListenerInTab(GoodsEvent.DelItems, handler(self, self.HandleDeleteItems), self.events);
    AddEventListenerInTab(GoodsEvent.UpdateNum, handler(self, self.HandleDeleteItems), self.events);
end

function MountUsePanel:HandleDeleteItems()
    for k,v in pairs(self.items) do
        v:UpateNum();
    end
end