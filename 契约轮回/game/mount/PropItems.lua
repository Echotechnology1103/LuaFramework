---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2018/10/10 10:53
---
PropItems = PropItems or class("PropItems", Node)
local this = PropItems

function PropItems:ctor(parent_node)
    self.abName = "dungeon";
    self.image_ab = "dungeon_image";
    self.assetName = "PropItems"
    self.layer = "Bottom"

    self.transform = parent_node.transform
    self.parentNode = parentNode;
    self.gameObject = self.transform.gameObject;
    self.transform_find = self.transform.Find;

    self.model = DungeonModel.GetInstance()
    self.events = {};
    self.schedules = {};
    self.is_loaded = true;
    self:Init();
end

function PropItems:Load()
    PropItems.super.Load(self)
end

function PropItems:dctor()
    self.model = nil;
    GlobalEvent:RemoveTabListener(self.events);
    self:StopAllSchedules()
end

function PropItems:Open(data)
    self.data = data;
    WindowPanel.Open(self)
end

function PropItems:Init()
    self.nodes = {
        "labelCon/label_2", "upArrCon/attackarr", "upCon/dodup", "labelCon/label_3", "upArrCon/hitarr", "labelCon/label_4",
        "upArrCon/heartarr", "upArrCon/dodarr", "valueCon/dod", "valueCon/def", "valueCon/hit", "valueCon", "upCon", "upCon/lifeup",
        "labelCon", "upArrCon/lifearr", "labelCon/label_6", "labelCon/label_5", "valueCon/heart", "valueCon/life", "upCon/hitup",
        "upCon/defup", "upArrCon/defarr", "upCon/attackup", "valueCon/attack", "upCon/heartup", "upArrCon", "labelCon/label_1",

        "bgs/prop_bg_1", "bgs/prop_bg_3", "bgs/prop_bg_2",
    }
    self:GetChildren(self.nodes)

    SetLocalPosition(self.transform, 0, 0, 0)

    self:InitUI();

    self:AddEvent();
end

function PropItems:InitUI()
    --向上箭头
    self.upTab = {}
    self.lifearr = GetImage(self.lifearr);
    self.upTab[2] = self.lifearr;
    self.attackarr = GetImage(self.attackarr);
    self.upTab[1] = self.attackarr;
    self.defarr = GetImage(self.defarr);
    self.upTab[3] = self.defarr;
    self.dodarr = GetImage(self.dodarr);
    self.upTab[4] = self.dodarr;
    self.heartarr = GetImage(self.heartarr);
    self.upTab[5] = self.heartarr;
    self.hitarr = GetImage(self.hitarr);
    self.upTab[6] = self.hitarr;

    --增加的值
    self.upValueTab = {}
    self.lifeup = GetText(self.lifeup);
    self.upValueTab[2] = self.lifeup;
    self.attackup = GetText(self.attackup);
    self.upValueTab[1] = self.attackup;
    self.defup = GetText(self.defup);
    self.upValueTab[3] = self.defup;
    self.dodup = GetText(self.dodup);
    self.upValueTab[4] = self.dodup;
    self.heartup = GetText(self.heartup);
    self.upValueTab[5] = self.heartup;
    self.hitup = GetText(self.hitup);
    self.upValueTab[6] = self.hitup;

    --原来的的值
    self.valueTab = {}
    self.life = GetText(self.life);
    self.valueTab[2] = self.life;
    self.attack = GetText(self.attack);
    self.valueTab[1] = self.attack;
    self.def = GetText(self.def);
    self.valueTab[3] = self.def;
    self.dod = GetText(self.dod);
    self.valueTab[4] = self.dod;
    self.heart = GetText(self.heart);
    self.valueTab[5] = self.heart;
    self.hit = GetText(self.hit);
    self.valueTab[6] = self.hit;

    --标签
    self.labelTab = {};
    for i = 1, 6, 1 do
        local name = "label_" .. i;
        self.labelTab[i] = GetText(self[name]);
    end


    --间隔底图
    self.bgs = {};
    for i = 1, 3 do
        local name = "prop_bg_" .. i;
        if self[name] then
            self.bgs[i] = GetImage(self[name]);
        end
    end
end


--有时候不需要显示那么多属性,num填行,如果填4,那就5,6行都会隐藏
function PropItems:HideLines(num)
    for i = 1, 6, 1 do
        local name = "label_" .. i;
        self.labelTab[i] = GetText(self[name]);
        if i > num then
            self.labelTab[i].gameObject:SetActive(false);
            self.upTab[i].gameObject:SetActive(false);
            self.valueTab[i].gameObject:SetActive(false);
            self.upValueTab[i].gameObject:SetActive(false);
        else
            self.valueTab[i].text = "0";
            self.upValueTab[i].text = "0";
        end
    end
end

function PropItems:HideBgs(num)
    for i = 1, 3 do
        local name = "prop_bg_" .. i;
        if i >= num and self.bgs[i] then
            SetGameObjectActive(self.bgs[i], false);
        end
    end
end

-- 有些动是需要用到空格的
function PropItems:UpdateValues(preTab, nextTab, is_space)
    local space = is_space == true
    if preTab then
        local propTab = String2Table(preTab.attrs);
        table.sort(propTab, PropCompareFun);

        for i = 1, #propTab, 1 do
            local tab1 = propTab[i];
            local k = tab1[1];
            local v = tab1[2];
            self.labelTab[i].gameObject:SetActive(true);
            if string.utf8len(PROP_ENUM[k].label) == 2 then
                if space then
                    self.labelTab[i].text = table.concat(string.utf8list(PROP_ENUM[k].label), "") .. ":";
                else
                    self.labelTab[i].text = table.concat(string.utf8list(PROP_ENUM[k].label), "") .. ":";
                end
            else
                self.labelTab[i].text = PROP_ENUM[k].label .. ":";
            end
            self.valueTab[i].gameObject:SetActive(true);
            if k > 12 then
                self.valueTab[i].text = tostring(v / 100) .. "%";
            else
                self.valueTab[i].text = tostring(v);
            end


        end

        if nextTab then
            local nextPropTab = String2Table(nextTab.attrs);
            table.sort(nextPropTab, PropCompareFun);
            for i = 1, #nextPropTab, 1 do
                local tab2 = nextPropTab[i];
                local v1 = tab2[2];
                self.upValueTab[i].gameObject:SetActive(true);
                if tab2[1] > 12 then
                    self.upValueTab[i].text = tostring((v1 - propTab[i][2]) / 100) .. "%";
                else
                    self.upValueTab[i].text = tostring(v1 - propTab[i][2]);
                end

                self.upTab[i].gameObject:SetActive(true);
            end
        else
            for i = 1, 6, 1 do
                self.upValueTab[i].text = "0";
            end

        end

        for ii = #propTab + 1, 6, 1 do
            SetGameObjectActive(self.labelTab[ii] , false);
            SetGameObjectActive(self.valueTab[ii] , false);
            SetGameObjectActive(self.upTab[ii] , false);
            SetGameObjectActive(self.upValueTab[ii] , false);
        end
    end
end

-- 有些动是需要用到空格的
function PropItems:UpdateValuesSingle(preTab, bool, is_space)
    local space = is_space == true
    if preTab then
        local propTab = String2Table(preTab.attrs);
        table.sort(propTab, PropCompareFun);

        for i = 1, #propTab, 1 do
            local tab1 = propTab[i];
            local k = tab1[1];
            local v = tab1[2];
            self.labelTab[i].gameObject:SetActive(true);
            if string.utf8len(PROP_ENUM[k].label) == 2 then
                if space then
                    self.labelTab[i].text = table.concat(string.utf8list(PROP_ENUM[k].label), "") .. ":";
                else
                    self.labelTab[i].text = table.concat(string.utf8list(PROP_ENUM[k].label), "") .. ":";
                end
            else
                self.labelTab[i].text = PROP_ENUM[k].label .. ":";
            end
            self.valueTab[i].gameObject:SetActive(true);
            if k > 12 then
                self.valueTab[i].text = tostring(v / 100) .. "%";
                self.upValueTab[i].text =  tostring(v / 100) .. "%";
            else
                self.valueTab[i].text = tostring(v);
                self.upValueTab[i].text = tostring(v);
            end
        end

        if bool then
            for i = 1, 6, 1 do
                self.valueTab[i].text = "0";
            end
        else
            for i = 1, 6, 1 do
                self.upValueTab[i].text = "0";
            end
        end



        for ii = #propTab + 1, 6, 1 do
            SetGameObjectActive(self.labelTab[ii] , false);
            SetGameObjectActive(self.valueTab[ii] , false);
            SetGameObjectActive(self.upTab[ii] , false);
            SetGameObjectActive(self.upValueTab[ii] , false);
        end
    end
end

 -- 有些字是不支持z 代表空格
function PropItems:UpdateValuesMount(preTab, nextTab, danAddedProp, is_space)
    danAddedProp = danAddedProp or {};
    local space = is_space == true

    if preTab then
        local propTab = String2Table(preTab.attrs);
        table.sort(propTab, PropCompareFun);

        for i = 1, #propTab, 1 do
            local tab1 = propTab[i];
            local k = tab1[1];
            local v = tab1[2];
            self.labelTab[i].gameObject:SetActive(true);
            if string.utf8len(PROP_ENUM[k].label) == 2 then
                if space then
                    self.labelTab[i].text = table.concat(string.utf8list(PROP_ENUM[k].label), "") .. ":";
                else
                    self.labelTab[i].text = table.concat(string.utf8list(PROP_ENUM[k].label), "") .. ":";
                end
            else
                self.labelTab[i].text = PROP_ENUM[k].label .. ":";
            end
            local percent = CalcAttrProp(k , danAddedProp);
            local danAddedValue = danAddedProp[k] or 0;
            self.valueTab[i].gameObject:SetActive(true);
            if k > 12 then
                self.valueTab[i].text = tostring((v + danAddedValue) / 100) .. "%";
            else
                self.valueTab[i].text = tostring(math.ceil((v + danAddedValue) * percent));
            end


        end

        if nextTab then
            local nextPropTab = String2Table(nextTab.attrs);
            table.sort(nextPropTab, PropCompareFun);
            for i = 1, #nextPropTab, 1 do
                local tab2 = nextPropTab[i];
                local k1 = tab2[1];
                local v1 = tab2[2];

                local percent = CalcAttrProp(k1 , danAddedProp);

                self.upValueTab[i].gameObject:SetActive(true);
                if tab2[1] > 12 then
                    self.upValueTab[i].text = tostring((v1 - propTab[i][2]) / 100) .. "%";
                else
                    self.upValueTab[i].text = tostring(math.ceil((v1 - propTab[i][2]) * percent));
                end

                self.upTab[i].gameObject:SetActive(true);
            end
        else
            for i = 1, 6, 1 do
                self.upValueTab[i].text = "max";
            end
        end

        for ii = #propTab + 1, 6, 1 do
            SetGameObjectActive(self.labelTab[ii] , false);
            SetGameObjectActive(self.valueTab[ii] , false);
            SetGameObjectActive(self.upTab[ii] , false);
            SetGameObjectActive(self.upValueTab[ii] , false);
        end
    end
end

function PropItems:HideAllUpArrow(bool)
    bool = toBool(bool);
    for i = 1, 6, 1 do
        self.upTab[i].gameObject:SetActive(bool);
    end
end

function PropItems:HideCompare(bool)
    bool = toBool(bool);
    for i = 1, 6, 1 do
        SetGameObjectActive(self.upTab[i] , bool);
        SetGameObjectActive(self.upValueTab[i] , bool);
    end
end

function PropItems:StopAllSchedules()
    for i = 1, #self.schedules, 1 do
        GlobalSchedule:Stop(self.schedules[i]);
    end
    self.schedules = {};
end

function PropItems:AddEvent()

end

function CalcAttrProp(k , danAddedProp)
    danAddedProp = danAddedProp or {};
    local percent = 1;

    local percentTab = BASE_CAL_TAB[k];
    if percentTab then
        for p,pv in pairs(percentTab) do
            if danAddedProp[pv] then
                percent = percent + tonumber(danAddedProp[pv]) / 10000;
            end
        end
    end
    return percent;
end