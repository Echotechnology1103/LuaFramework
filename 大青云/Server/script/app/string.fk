package string

func find(str, startpos, findstr)
	
	var ok, var pos = string_find(str, startpos, findstr)
	return ok, pos
	
end

func find_not(str, startpos, findstr)
	
	var ok, var pos = string_find_not(str, startpos, findstr)
	return ok, pos
	
end

func substr(str, startpos, count)
	
	return string_substr(str, startpos, count)
	
end

func trim(str, trimstr)
	
	return string_trim(str, trimstr)
	
end

func trimleft(str, trimstr)
	
	return string_trimleft(str, trimstr)
	
end

func trimright(str, trimstr)
	
	return string_trimright(str, trimstr)
	
end

func replace(str, fromstr, tostr)
	
	return string_replace(str, fromstr, tostr)
	
end

func cat(leftstr, rightstr)
	
	return string_cat(leftstr, rightstr)
	
end

func readlines(str)
	
	str = string.replace(str, "\r", "")
	var ret = array()
	while true then

		var ok, var pos = find(str, 0, "\n")
		if not ok then
			ret[size(ret)] = str
			break		
		end
	
		var line = substr(str, 0, pos)
		str = substr(str, pos + 1, -1)
		ret[size(ret)] = line
		
	end
	
	return ret
	
end

func seq(str, token)
	
	var ret = array()
	var skiptoken = true
	
	while size(str) > 0 then

		if is skiptoken then
		
			var ok, var pos = find_not(str, 0, token)
			if is ok then
				str = substr(str, pos, -1)		
			end
			
			skiptoken = false
			
		else
		
			var ok, var pos = find(str, 0, token)
			if not ok then
				ret[size(ret)] = str
				break		
			end
			
			var ele = substr(str, 0, pos)
			str = substr(str, pos + size(token), -1)
			if size(ele) > 0 then
				ret[size(ret)] = ele
			end
			
			skiptoken = true
		
		end
	
	end
	
	return ret
	
end